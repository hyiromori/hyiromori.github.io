!function(e){function n(n){for(var r,s,c=n[0],a=n[1],l=n[2],m=0,A=[];m<c.length;m++)s=c[m],o[s]&&A.push(o[s][0]),o[s]=0;for(r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r]);for(p&&p(n);A.length;)A.shift()();return i.push.apply(i,l||[]),t()}function t(){for(var e,n=0;n<i.length;n++){for(var t=i[n],r=!0,c=1;c<t.length;c++){var a=t[c];0!==o[a]&&(r=!1)}r&&(i.splice(n--,1),e=s(s.s=t[0]))}return e}var r={},o={0:0},i=[];function s(n){if(r[n])return r[n].exports;var t=r[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,s),t.l=!0,t.exports}s.m=e,s.c=r,s.d=function(e,n,t){s.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,n){if(1&n&&(e=s(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(s.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)s.d(t,r,function(n){return e[n]}.bind(null,r));return t},s.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(n,"a",n),n},s.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},s.p="";var c=window.webpackJsonp=window.webpackJsonp||[],a=c.push.bind(c);c.push=n,c=c.slice();for(var l=0;l<c.length;l++)n(c[l]);var p=a;i.push([92,1]),t()}({40:function(e,n,t){var r=t(41);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},41:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,".common-frame-menu-item a {\n  display: block;\n  padding: 8px 16px; }\n  .common-frame-menu-item a.level1 .title-jp, .common-frame-menu-item a.level1 .title-en, .common-frame-menu-item a.level2 .title-jp, .common-frame-menu-item a.level2 .title-en {\n    line-height: calc(1em + 4px); }\n  .common-frame-menu-item a.level1 {\n    padding-left: 8px; }\n    .common-frame-menu-item a.level1 .title-jp {\n      font-size: 20px; }\n    .common-frame-menu-item a.level1 .title-en {\n      font-size: 14px; }\n  .common-frame-menu-item a.level2 {\n    padding-left: 24px; }\n    .common-frame-menu-item a.level2 .title-jp {\n      font-size: 18px; }\n    .common-frame-menu-item a.level2 .title-en {\n      font-size: 12px; }\n  .common-frame-menu-item a.marked {\n    background-color: #ff7701; }\n    .common-frame-menu-item a.marked div {\n      color: #fff; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/common_frame/app/containers/common_frame/common_frame_menu_item.scss","/Users/ih-ppc64/projects/github_io/src/app/containers/common_frame/app/common/colors.scss"],names:[],mappings:"AAEA;EAEI,eAAc;EACd,kBAAiB,EAyClB;EA5CH;IAMM,6BAA4B,EAC7B;EAPL;IAUM,kBAAiB,EAWlB;IArBL;MAcQ,gBAAe,EAChB;IAfP;MAmBQ,gBAAe,EAChB;EApBP;IAwBM,mBAAkB,EAWnB;IAnCL;MA4BQ,gBAAe,EAChB;IA7BP;MAiCQ,gBAAe,EAChB;EAlCP;IAsCM,0BCnCU,EDwCX;IA3CL;MAyCQ,YCpCI,EDqCL",file:"common_frame_menu_item.scss",sourcesContent:["@import '../../common/colors';\n\n.common-frame-menu-item {\n  a {\n    display: block;\n    padding: 8px 16px;\n\n    %title-line-height {\n      line-height: calc(1em + 4px);\n    }\n\n    &.level1 {\n      padding-left: 8px;\n\n      .title-jp {\n        @extend %title-line-height;\n        font-size: 20px;\n      }\n\n      .title-en {\n        @extend %title-line-height;\n        font-size: 14px;\n      }\n    }\n\n    &.level2 {\n      padding-left: 24px;\n\n      .title-jp {\n        @extend %title-line-height;\n        font-size: 18px;\n      }\n\n      .title-en {\n        @extend %title-line-height;\n        font-size: 12px;\n      }\n    }\n\n    &.marked {\n      background-color: $orange;\n\n      div {\n        color: $white;\n      }\n    }\n  }\n}","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},43:function(e,n,t){var r=t(44);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},44:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#common-frame {\n  bottom: 0;\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0; }\n  #common-frame .common-frame-header-menu-button {\n    height: 24px;\n    position: absolute;\n    right: 12px;\n    top: 12px; }\n    #common-frame .common-frame-header-menu-button span {\n      margin-left: 4px; }\n  #common-frame #common-frame-menu {\n    background-color: #fff;\n    border-left: 1px solid #888;\n    bottom: 32px;\n    max-width: 320px;\n    opacity: 0.9;\n    overflow-y: scroll;\n    padding: 42px 16px 8px 16px;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 100%; }\n    #common-frame #common-frame-menu > a {\n      display: block;\n      padding: 4px 8px; }\n      #common-frame #common-frame-menu > a.level1 {\n        font-size: 16px;\n        margin-top: 8px; }\n      #common-frame #common-frame-menu > a.level2 {\n        font-size: 12px;\n        padding-left: 24px; }\n      #common-frame #common-frame-menu > a.marked {\n        background-color: #ff7701;\n        border-width: 0;\n        color: #fff; }\n  #common-frame #common-frame-content {\n    bottom: 32px;\n    left: 0;\n    margin: 16px;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: calc(100% - 32px); }\n    #common-frame #common-frame-content #common-frame-content-inner {\n      margin: 0 auto;\n      font-size: 16px;\n      max-width: 50em;\n      width: 100%; }\n  #common-frame #common-frame-footer {\n    background-color: #333;\n    bottom: 0;\n    display: flex;\n    height: 32px;\n    justify-content: space-between;\n    left: 0;\n    padding: 0 16px;\n    position: absolute;\n    right: 0; }\n    #common-frame #common-frame-footer div {\n      font-size: 12px;\n      color: #fff;\n      line-height: 32px; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/common_frame/app/containers/common_frame/common_frame.scss","/Users/ih-ppc64/projects/github_io/src/app/containers/common_frame/app/common/colors.scss"],names:[],mappings:"AAEA;EACE,UAAS;EACT,QAAO;EACP,gBAAe;EACf,SAAQ;EACR,OAAM,EAkFP;EAvFD;IAQI,aAAY;IACZ,mBAAkB;IAClB,YAAW;IACX,UAAS,EAKV;IAhBH;MAcM,iBAAgB,EACjB;EAfL;IAmBI,uBCdQ;IDeR,4BCnBO;IDoBP,aAAY;IACZ,iBAAgB;IAChB,aAAY;IACZ,mBAAkB;IAClB,4BAA2B;IAC3B,mBAAkB;IAClB,SAAQ;IACR,OAAM;IACN,YAAW,EAsBZ;IAnDH;MAgCM,eAAc;MACd,iBAAgB,EAiBjB;MAlDL;QAoCQ,gBAAe;QACf,gBAAe,EAChB;MAtCP;QAyCQ,gBAAe;QACf,mBAAkB,EACnB;MA3CP;QA8CQ,0BC3CQ;QD4CR,gBAAe;QACf,YC3CI,ED4CL;EAjDP;IAsDI,aAAY;IACZ,QAAO;IACP,aAAY;IACZ,mBAAkB;IAClB,SAAQ;IACR,OAAM;IACN,yBAAwB,EAQzB;IApEH;MA+DM,eAAc;MACd,gBAAe;MACf,gBAAe;MACf,YAAW,EACZ;EAnEL;IAuEI,uBCxEY;IDyEZ,UAAS;IACT,cAAa;IACb,aAAY;IACZ,+BAA8B;IAC9B,QAAO;IACP,gBAAe;IACf,mBAAkB;IAClB,SAAQ,EAOT;IAtFH;MAkFM,gBAAe;MACf,YC9EM;MD+EN,kBAAiB,EAClB",file:"common_frame.scss",sourcesContent:["@import '../../common/colors';\n\n#common-frame {\n  bottom: 0;\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0;\n\n  .common-frame-header-menu-button {\n    height: 24px;\n    position: absolute;\n    right: 12px;\n    top: 12px;\n\n    span {\n      margin-left: 4px;\n    }\n  }\n\n  #common-frame-menu {\n    background-color: $white;\n    border-left: 1px solid $gray;\n    bottom: 32px;\n    max-width: 320px;\n    opacity: 0.9;\n    overflow-y: scroll;\n    padding: 42px 16px 8px 16px;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 100%;\n\n    & > a {\n      display: block;\n      padding: 4px 8px;\n\n      &.level1 {\n        font-size: 16px;\n        margin-top: 8px;\n      }\n\n      &.level2 {\n        font-size: 12px;\n        padding-left: 24px;\n      }\n\n      &.marked {\n        background-color: $orange;\n        border-width: 0;\n        color: $white;\n      }\n    }\n  }\n\n  #common-frame-content {\n    bottom: 32px;\n    left: 0;\n    margin: 16px;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: calc(100% - 32px);\n\n    #common-frame-content-inner {\n      margin: 0 auto;\n      font-size: 16px;\n      max-width: 50em;\n      width: 100%;\n    }\n  }\n\n  #common-frame-footer {\n    background-color: $gray-dark;\n    bottom: 0;\n    display: flex;\n    height: 32px;\n    justify-content: space-between;\n    left: 0;\n    padding: 0 16px;\n    position: absolute;\n    right: 0;\n\n    div {\n      font-size: 12px;\n      color: $white;\n      line-height: 32px;\n    }\n  }\n}\n\n","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},45:function(e,n,t){var r=t(46);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},46:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"","",{version:3,sources:[],names:[],mappings:"",file:"style.scss",sourceRoot:""}])},68:function(e,n,t){var r=t(69);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},69:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#qr-code-container a {\n  color: #009050;\n  font-weight: 800; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/qr_code/app/containers/qr_code/style.scss","/Users/ih-ppc64/projects/github_io/src/app/containers/qr_code/app/common/colors.scss"],names:[],mappings:"AAEA;EAEI,eCAW;EDCX,iBAAgB,EACjB",file:"style.scss",sourcesContent:["@import '../../common/colors';\n\n#qr-code-container {\n  a {\n    color: $green;\n    font-weight: 800;\n  }\n}\n","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},70:function(e,n,t){var r=t(71);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},71:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#service-worker-container a {\n  color: #009050;\n  font-weight: 800; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/service_worker/app/containers/service_worker/style.scss","/Users/ih-ppc64/projects/github_io/src/app/containers/service_worker/app/common/colors.scss"],names:[],mappings:"AAEA;EAEI,eCAW;EDCX,iBAAgB,EACjB",file:"style.scss",sourcesContent:["@import '../../common/colors';\n\n#service-worker-container {\n  a {\n    color: $green;\n    font-weight: 800;\n  }\n}\n","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},72:function(e,n,t){var r=t(73);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},73:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,".button-presenter {\n  background-color: #ff7701;\n  border-radius: 0;\n  border: 1px solid #ff7701;\n  color: #fff;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 14px;\n  height: 28px;\n  line-height: 28px;\n  margin: 0;\n  padding: 0 16px;\n  position: relative;\n  text-align: center; }\n  .button-presenter.disable {\n    opacity: 0.5; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/presenters/app/presenters/button.scss","/Users/ih-ppc64/projects/github_io/src/app/presenters/app/common/colors.scss"],names:[],mappings:"AAEA;EACE,0BCEc;EDDd,iBAAgB;EAChB,0BCAc;EDCd,YCCU;EDAV,gBAAe;EACf,sBAAqB;EACrB,gBAAe;EACf,aAAY;EACZ,kBAAiB;EACjB,UAAS;EACT,gBAAe;EACf,mBAAkB;EAClB,mBAAkB,EAKnB;EAlBD;IAgBI,aAAY,EACb",file:"button.scss",sourcesContent:["@import '../common/colors';\n\n.button-presenter {\n  background-color: $orange;\n  border-radius: 0;\n  border: 1px solid $orange;\n  color: $white;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 14px;\n  height: 28px;\n  line-height: 28px;\n  margin: 0;\n  padding: 0 16px;\n  position: relative;\n  text-align: center;\n\n  &.disable {\n    opacity: 0.5;\n  }\n}","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},74:function(e,n,t){var r=t(75);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},75:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,".check-box-presenter {\n  align-items: center;\n  cursor: pointer;\n  display: flex; }\n  .check-box-presenter .mark {\n    border-radius: 2px;\n    border: 1px solid #888;\n    display: inline-block;\n    height: 16px;\n    position: relative;\n    width: 16px; }\n    .check-box-presenter .mark.checked {\n      background-color: #ff7701;\n      border-color: #ff7701; }\n      .check-box-presenter .mark.checked:after {\n        border-color: #fff;\n        border-style: solid;\n        border-width: 0 0 2px 2px;\n        content: '';\n        height: 6px;\n        position: absolute;\n        transform: rotate(-45deg);\n        width: 10px;\n        top: 3px;\n        left: 2px; }\n  .check-box-presenter .label {\n    display: inline-block;\n    margin-left: 4px; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/presenters/app/presenters/check_box.scss","/Users/ih-ppc64/projects/github_io/src/app/presenters/app/common/colors.scss"],names:[],mappings:"AAEA;EACE,oBAAmB;EACnB,gBAAe;EACf,cAAa,EAiCd;EApCD;IAMI,mBAAkB;IAClB,uBCNO;IDOP,sBAAqB;IACrB,aAAY;IACZ,mBAAkB;IAClB,YAAW,EAmBZ;IA9BH;MAcM,0BCXU;MDYV,sBCZU,ED0BX;MA7BL;QAkBQ,mBCbI;QDcJ,oBAAmB;QACnB,0BAAyB;QACzB,YAAW;QACX,YAAW;QACX,mBAAkB;QAClB,0BAAyB;QACzB,YAAW;QACX,SAAQ;QACR,UAAS,EACV;EA5BP;IAiCI,sBAAqB;IACrB,iBAAgB,EACjB",file:"check_box.scss",sourcesContent:["@import '../common/colors';\n\n.check-box-presenter {\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n\n  .mark {\n    border-radius: 2px;\n    border: 1px solid $gray;\n    display: inline-block;\n    height: 16px;\n    position: relative;\n    width: 16px;\n\n    &.checked {\n      background-color: $orange;\n      border-color: $orange;\n\n      &:after {\n        border-color: $white;\n        border-style: solid;\n        border-width: 0 0 2px 2px;\n        content: '';\n        height: 6px;\n        position: absolute;\n        transform: rotate(-45deg);\n        width: 10px;\n        top: 3px;\n        left: 2px;\n      }\n    }\n  }\n\n  .label {\n    display: inline-block;\n    margin-left: 4px;\n  }\n}\n\n","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},76:function(e,n,t){var r=t(77);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},77:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,".text-area-presenter textarea {\n  border: 1px solid #888;\n  resize: vertical;\n  padding: 4px 8px;\n  width: 100%; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/presenters/app/presenters/text_area.scss","/Users/ih-ppc64/projects/github_io/src/app/presenters/app/common/colors.scss"],names:[],mappings:"AAEA;EAEI,uBCDO;EDEP,iBAAgB;EAChB,iBAAgB;EAChB,YAAW,EACZ",file:"text_area.scss",sourcesContent:["@import '../common/colors';\n\n.text-area-presenter {\n  textarea {\n    border: 1px solid $gray;\n    resize: vertical;\n    padding: 4px 8px;\n    width: 100%;\n  }\n}\n","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},81:function(e,n,t){var r=t(82);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},82:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#service-worker-cache-container .fetch-test-button {\n  margin-bottom: 8px; }\n\n#service-worker-cache-container .frame {\n  border: 1px solid #ccc;\n  padding: 16px;\n  width: 100%; }\n  #service-worker-cache-container .frame .frame-title {\n    text-align: center; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/service_worker/cache/app/containers/service_worker/cache/style.scss","/Users/ih-ppc64/projects/github_io/src/app/containers/service_worker/cache/app/common/colors.scss"],names:[],mappings:"AAEA;EAEI,mBAAkB,EACnB;;AAHH;EAMI,uBCNa;EDOb,cAAa;EACb,YAAW,EAKZ;EAbH;IAWM,mBAAkB,EACnB",file:"style.scss",sourcesContent:["@import '../../../common/colors';\n\n#service-worker-cache-container {\n  .fetch-test-button {\n    margin-bottom: 8px;\n  }\n\n  .frame {\n    border: 1px solid $gray-light;\n    padding: 16px;\n    width: 100%;\n\n    .frame-title {\n      text-align: center;\n    }\n  }\n}\n","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},83:function(e,n,t){var r=t(84);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},84:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,".text-input {\n  width: 100%; }\n  .text-input .text-input-label, .text-input input {\n    width: 100%; }\n  .text-input .text-input-label {\n    padding: 0 4px 2px 4px; }\n  .text-input input {\n    border-radius: 4px;\n    border: 1px solid #ccc;\n    font-size: 14px;\n    padding: 4px 8px; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/presenters/app/presenters/text_input.scss","/Users/ih-ppc64/projects/github_io/src/app/presenters/app/common/colors.scss"],names:[],mappings:"AAEA;EACE,YAAW,EAgBZ;EAjBD;IAII,YAAW,EACZ;EALH;IAQI,uBAAsB,EACvB;EATH;IAYI,mBAAkB;IAClB,uBCba;IDcb,gBAAe;IACf,iBAAgB,EACjB",file:"text_input.scss",sourcesContent:["@import '../common/colors';\n\n.text-input {\n  width: 100%;\n\n  .text-input-label, input {\n    width: 100%;\n  }\n\n  .text-input-label {\n    padding: 0 4px 2px 4px;\n  }\n\n  input {\n    border-radius: 4px;\n    border: 1px solid $gray-light;\n    font-size: 14px;\n    padding: 4px 8px;\n  }\n}","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},85:function(e,n,t){var r=t(86);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},86:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#service-worker-push-container div {\n  margin: 4px 0; }\n\n#service-worker-push-container .push-info {\n  font-size: 10px;\n  height: 240px; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/service_worker/push/app/containers/service_worker/push/style.scss"],names:[],mappings:"AAAA;EAEI,cAAa,EACd;;AAHH;EAMI,gBAAe;EACf,cAAa,EACd",file:"style.scss",sourcesContent:["#service-worker-push-container {\n  div {\n    margin: 4px 0;\n  }\n\n  .push-info {\n    font-size: 10px;\n    height: 240px;\n  }\n}\n"],sourceRoot:""}])},87:function(e,n,t){var r=t(88);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},88:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#service-worker-background-sync-container div {\n  margin: 4px 0; }\n\n#service-worker-background-sync-container table {\n  width: 100%; }\n  #service-worker-background-sync-container table .table-id-column {\n    width: 40px; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/service_worker/background_sync/app/containers/service_worker/background_sync/style.scss"],names:[],mappings:"AAAA;EAEI,cAAa,EACd;;AAHH;EAMI,YAAW,EAKZ;EAXH;IASM,YAAW,EACZ",file:"style.scss",sourcesContent:["#service-worker-background-sync-container {\n  div {\n    margin: 4px 0;\n  }\n\n  table {\n    width: 100%;\n\n    .table-id-column {\n      width: 40px;\n    }\n  }\n}\n"],sourceRoot:""}])},90:function(e,n,t){var r=t(91);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},91:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"*, *:before, *:after {\n  background-color: transparent;\n  border: 0 solid #888;\n  box-sizing: border-box;\n  color: #000;\n  font-size: 16px;\n  font-weight: normal;\n  line-height: 1.5;\n  margin: 0;\n  padding: 0;\n  text-decoration: none;\n  word-wrap: break-word; }\n\nh1, h2, h3, h4, h5, h6, p, ul, ol {\n  margin-top: 8px; }\n\nh1 {\n  font-weight: 600;\n  font-size: 32px;\n  text-align: center; }\n\nh2 {\n  font-weight: 600;\n  font-size: 24px; }\n\nh3 {\n  font-weight: 700;\n  font-size: 20px; }\n\nh4 {\n  font-weight: 700;\n  font-size: 16px; }\n\nh5 {\n  font-weight: 800;\n  font-size: 12px; }\n\nh6 {\n  font-weight: 800;\n  font-size: 10px; }\n\np {\n  padding-left: 1em; }\n\nstrong {\n  background-color: #eee;\n  display: inline-block;\n  font-weight: 800;\n  padding: 1px 8px; }\n\nbutton:focus {\n  outline: none; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  table-layout: fixed; }\n  table th, table td {\n    padding: 4px 8px;\n    border: 1px solid #888; }\n\nul, ol {\n  padding-left: 48px;\n  width: 100%; }\n  ul li, ol li {\n    margin-top: 4px; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/app/index.scss","/Users/ih-ppc64/projects/github_io/src/app/app/common/colors.scss"],names:[],mappings:"AAEA;EACE,8BAA6B;EAC7B,qBCDS;EDET,uBAAsB;EACtB,YCNU;EDOV,gBAAe;EACf,oBAAmB;EACnB,iBAAgB;EAChB,UAAS;EACT,WAAU;EACV,sBAAqB;EACrB,sBAAqB,EACtB;;AAED;EACE,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe;EACf,mBAAkB,EACnB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,kBAAiB,EAClB;;AAED;EACE,uBClDW;EDmDX,sBAAqB;EACrB,iBAAgB;EAChB,iBAAgB,EACjB;;AAED;EACE,cAAa,EACd;;AAED;EACE,0BAAyB;EACzB,kBAAiB;EACjB,oBAAmB,EAMpB;EATD;IAMI,iBAAgB;IAChB,uBCtEO,EDuER;;AAGH;EACE,mBAAkB;EAClB,YAAW,EAKZ;EAPD;IAKI,gBAAe,EAChB",file:"index.scss",sourcesContent:["@import './common/colors';\n\n*, *:before, *:after {\n  background-color: transparent;\n  border: 0 solid $gray;\n  box-sizing: border-box;\n  color: $black;\n  font-size: 16px;\n  font-weight: normal;\n  line-height: 1.5;\n  margin: 0;\n  padding: 0;\n  text-decoration: none;\n  word-wrap: break-word;\n}\n\nh1, h2, h3, h4, h5, h6, p, ul, ol {\n  margin-top: 8px;\n}\n\nh1 {\n  font-weight: 600;\n  font-size: 32px;\n  text-align: center;\n}\n\nh2 {\n  font-weight: 600;\n  font-size: 24px;\n}\n\nh3 {\n  font-weight: 700;\n  font-size: 20px;\n}\n\nh4 {\n  font-weight: 700;\n  font-size: 16px;\n}\n\nh5 {\n  font-weight: 800;\n  font-size: 12px;\n}\n\nh6 {\n  font-weight: 800;\n  font-size: 10px;\n}\n\np {\n  padding-left: 1em;\n}\n\nstrong {\n  background-color: $silver;\n  display: inline-block;\n  font-weight: 800;\n  padding: 1px 8px;\n}\n\nbutton:focus {\n  outline: none;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  table-layout: fixed;\n\n  th, td {\n    padding: 4px 8px;\n    border: 1px solid $gray;\n  }\n}\n\nul, ol {\n  padding-left: 48px;\n  width: 100%;\n\n  li {\n    margin-top: 4px;\n  }\n}\n","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},92:function(e,n,t){"use strict";t.r(n);var r=t(27),o=t(0),i=t(95),s=t(94),c=t(16),a=t(10),l=t(17);a.b.add(l.b);const p=()=>o.createElement(c.a,{icon:"times"});a.b.add(l.a);const m=()=>o.createElement(c.a,{icon:"bars"});var A=t(93);t(40);const u=e=>{const{level:n,selected:t,path:r,titleJp:i,titleEn:s}=e;return o.createElement("div",{className:"common-frame-menu-item"},o.createElement(A.a,{to:r,className:[`level${n}`,t?"marked":""].join(" ")},o.createElement("div",{className:"title-jp"},i),o.createElement("div",{className:"title-en"},s)))};t(43);class d extends o.Component{setState(e,n){console.log("Update state:",e),super.setState(e,n)}}t(45);var h=t(28);t(68);t(70);t(72);class f extends o.Component{render(){const{active:e,children:n,className:t,onClick:r}=this.props;return o.createElement("a",{className:`button-presenter ${t}`,onClick:e?r:null},n)}}f.defaultProps={active:!0,className:""};t(74);class g extends o.Component{render(){const{checked:e,children:n,className:t,onClick:r}=this.props;return o.createElement("a",{className:`check-box-presenter ${t}`,onClick:()=>r(!e)},o.createElement("span",{className:`mark ${e?"checked":""}`}),o.createElement("span",{className:"label"}," ",n," "))}}g.defaultProps={className:""};t(76);class E extends o.Component{render(){const{children:e,className:n,label:t,onChange:r}=this.props;return o.createElement("div",{className:`text-area-presenter ${n}`},t&&o.createElement("div",{className:"text-area-label"},t),o.createElement("textarea",{onChange:e=>{const n=e.target.value;"string"==typeof n&&r(n)},value:e||""}))}}E.defaultProps={className:"",label:""};var x=t(12),v=function(e,n,t,r){return new(t||(t=Promise))(function(o,i){function s(e){try{a(r.next(e))}catch(e){i(e)}}function c(e){try{a(r.throw(e))}catch(e){i(e)}}function a(e){e.done?o(e.value):new t(function(n){n(e.value)}).then(s,c)}a((r=r.apply(e,n||[])).next())})};const B=1,b={serviceWorkerCacheApiDisable:"service_worker.cache_api_disable"};const C=new class extends x.a{constructor(){super("PropertyDatabase"),this.version(B).stores({property:"++key,val"})}},y=e=>C.transaction("rw",C.property,()=>v(void 0,void 0,void 0,function*(){yield C.property.put(e)})),k=e=>C.transaction("r",C.property,()=>v(void 0,void 0,void 0,function*(){const n=yield C.property.where({key:e});return 1===(yield n.count())?n.first():null}));t(81);var w=function(e,n,t,r){return new(t||(t=Promise))(function(o,i){function s(e){try{a(r.next(e))}catch(e){i(e)}}function c(e){try{a(r.throw(e))}catch(e){i(e)}}function a(e){e.done?o(e.value):new t(function(n){n(e.value)}).then(s,c)}a((r=r.apply(e,n||[])).next())})};t(83);const I=e=>{const{className:n,label:t,maxLength:r,onChangeText:i,password:s,placeHolder:c,value:a}=e;return o.createElement("div",{className:`text-input ${n}`},t&&o.createElement("div",{className:"text-input-label"},t),o.createElement("input",{placeholder:c,type:s?"password":"text",onChange:e=>i(e.target.value),maxLength:r,value:a||""}))};t(85);var $=function(e,n,t,r){return new(t||(t=Promise))(function(o,i){function s(e){try{a(r.next(e))}catch(e){i(e)}}function c(e){try{a(r.throw(e))}catch(e){i(e)}}function a(e){e.done?o(e.value):new t(function(n){n(e.value)}).then(s,c)}a((r=r.apply(e,n||[])).next())})};const{serviceWorker:_}=navigator,{PushManager:S}=window,D=e=>{const n=(e+"=".repeat((4-e.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),t=window.atob(n),r=new Uint8Array(t.length);for(let e=0;e<t.length;++e)r[e]=t.charCodeAt(e);return r};t(87);var j=function(e,n,t,r){return new(t||(t=Promise))(function(o,i){function s(e){try{a(r.next(e))}catch(e){i(e)}}function c(e){try{a(r.throw(e))}catch(e){i(e)}}function a(e){e.done?o(e.value):new t(function(n){n(e.value)}).then(s,c)}a((r=r.apply(e,n||[])).next())})};const M=1;const P=new class extends x.a{constructor(){super("BackgroundSyncDatabase"),this.version(M).stores({backgroundSync:"++id,path,body,result,createdAt"})}},Q=e=>P.transaction("rw",P.backgroundSync,()=>j(void 0,void 0,void 0,function*(){const n=(new Date).getTime(),t=Object.assign({},e,{createdAt:n});return yield P.backgroundSync.add(t)})),z=(e=30)=>P.transaction("r",P.backgroundSync,()=>j(void 0,void 0,void 0,function*(){return yield P.backgroundSync.orderBy("createdAt").reverse().limit(e).toArray()}));var N=function(e,n,t,r){return new(t||(t=Promise))(function(o,i){function s(e){try{a(r.next(e))}catch(e){i(e)}}function c(e){try{a(r.throw(e))}catch(e){i(e)}}function a(e){e.done?o(e.value):new t(function(n){n(e.value)}).then(s,c)}a((r=r.apply(e,n||[])).next())})};const W=[{path:"/",titleJp:"はじめに",titleEn:"Introduction",component:class extends d{render(){return o.createElement("div",null,o.createElement("h1",null,"はじめに"),o.createElement("h2",null,"運用者"),o.createElement("p",null,"このWebページは hyiromori によって運営されています"),o.createElement("h2",null,"目的"),o.createElement("p",null,"このWebページは、以下の目的で公開しています。"),o.createElement("ol",null,o.createElement("li",null,"新しい技術のテスト"),o.createElement("li",null,"スキルセットの公開")))}},level:1},{path:"/qr_code",titleJp:"QRコード",titleEn:"QR Code",component:class extends d{constructor(){super(...arguments),this.canvas=null}renderQrCode(){null!=this.canvas&&h.toCanvas(this.canvas,"sample text",e=>{e&&console.error(e),console.log("success!")})}render(){return o.createElement("div",{id:"qr-code-container"},o.createElement("h1",null,"QR Code"),o.createElement("canvas",{ref:e=>{this.canvas=e,this.renderQrCode()}}))}},level:1},{path:"/service_worker",titleJp:"サービスワーカー",titleEn:"Service Worker",component:class extends d{render(){return o.createElement("div",{id:"service-worker-container"},o.createElement("h1",null,"Service Worker"),o.createElement("h2",null,"Service Worker とは？"),o.createElement("p",null,"ブラウザのバックグランドで実行される JavaScript の実行環境です。 ページのライフサイクルとは「別」のライフサイクルを持ちます。"),o.createElement("h2",null,"Service Worker にはどんな機能があるの？"),o.createElement("p",null,"以下のAPIが提供されています。"),o.createElement("ul",null,o.createElement("li",null,o.createElement(A.a,{to:"/service_worker/cache"},"Cache API")),o.createElement("li",null,o.createElement(A.a,{to:"/service_worker/push"},"Push API")),o.createElement("li",null,o.createElement(A.a,{to:"/service_worker/background_sync"},"Background Sync API"))),o.createElement("h2",null,"もっと詳しく知りたい場合"),o.createElement("p",null,"以下の Qiita の記事をご覧ください。"))}},level:1},{path:"/service_worker/cache",titleJp:"キャッシュ",titleEn:"Cache API",component:class extends d{constructor(e){super(e),this.onClickCheckBox=(e=>w(this,void 0,void 0,function*(){yield y({key:b.serviceWorkerCacheApiDisable,val:e?"true":"false"}),this.setState({disableCache:e})})),this.fetchTest=(()=>{fetch("/example.json").then(e=>e.text()).then(e=>this.setState({response:e})).catch(()=>this.setState({response:"エラー"}))}),this.state={response:null,disableCache:!1}}componentWillMount(){return w(this,void 0,void 0,function*(){const e=k(b.serviceWorkerCacheApiDisable),n=null!=e&&"true"===e.val;this.setState({disableCache:n})})}componentWillUnmount(){return w(this,void 0,void 0,function*(){yield y({key:b.serviceWorkerCacheApiDisable,val:"false"})})}render(){const{response:e,disableCache:n}=this.state;return o.createElement("div",{id:"service-worker-cache-container"},o.createElement("div",{className:"frame"},o.createElement("div",{className:"frame-title"},"Fetchテスト"),o.createElement(f,{className:"fetch-test-button",onClick:this.fetchTest},"Fetch Test"),o.createElement(E,{label:"Response",onChange:e=>this.setState({response:e})},e),o.createElement(g,{checked:n,onClick:e=>this.onClickCheckBox(e)},"キャッシュを無効にする。")),o.createElement("h2",null,"前提"),o.createElement("ul",null,o.createElement("li",null,"上の「Fetchテスト」の ",o.createElement("strong",null,"Fetch Test")," ボタンを押すと ",o.createElement("strong",null,"fetch('/example.json')"),"が実行され、取得結果が「Response」が表示されます。"),o.createElement("li",null,"正常に取得できなかった場合は「Response」に「エラー」と表示されます。")),o.createElement("h2",null,"動作確認の方法"),o.createElement("ol",null,o.createElement("li",null,"インターネットから切り離します。（例：機内モードにする、Wi-FiをOffにする、LANケーブルを抜くなど）"),o.createElement("li",null,o.createElement("strong",null,"Fetch Test")," ボタンを押すと「エラー」が表示されることを確認します。"),o.createElement("li",null,"インターネットに接続します。"),o.createElement("li",null,o.createElement("strong",null,"Fetch Test")," ボタンを押すと正常な結果（JSON）表示されることを確認します。"),o.createElement("li",null,"再度インターネットから切り離します。"),o.createElement("li",null,o.createElement("strong",null,"Fetch Test")," ボタンを押すと、今度は正常な結果（JSON）表示されていることを確認します。")))}},level:2},{path:"/service_worker/push",titleJp:"プッシュ通知",titleEn:"Push API",component:class extends d{constructor(e){super(e),this.requestPushNotification=(()=>$(this,void 0,void 0,function*(){const{publicKey:e}=this.state;if(_&&S&&""!==e){console.log("ServiceWorker and Push is Supported");try{const n=yield navigator.serviceWorker.register("/service_worker.js");console.log("ServiceWorker is registered",n);const t=D(e);yield n.pushManager.getSubscription();const r={userVisibleOnly:!0,applicationServerKey:t},o=n.pushManager.subscribe(r);console.log("User is subscribed:",o),this.setState({subscriptionInfo:JSON.stringify(o,null,"  ")})}catch(e){console.error("ServiceWorker error:",e)}}else console.warn("Push messaging is not supported")})),this.state={publicKey:"",subscriptionInfo:""}}render(){const{publicKey:e,subscriptionInfo:n}=this.state;return o.createElement("div",{id:"service-worker-push-container"},o.createElement("div",null,o.createElement("a",{href:"https://web-push-codelab.glitch.me/",target:"_blank"},"Push Test Page")),o.createElement("div",null,o.createElement(f,{active:""!==e,onClick:()=>this.requestPushNotification()},"Request Permission")),o.createElement("div",null,o.createElement(I,{label:"Public Key",maxLength:100,onChangeText:e=>this.setState({publicKey:e}),placeHolder:"Public Key",value:e})),o.createElement("div",null,o.createElement(E,{className:"push-info",onChange:()=>void 0},n)))}},level:2},{path:"/service_worker/background_sync",titleJp:"バックグラウンド同期",titleEn:"Background Sync API",component:class extends d{constructor(e){super(e),this.normalFetchTest=(()=>N(this,void 0,void 0,function*(){fetch("/api/v1/echo/test",{method:"POST",body:JSON.stringify({test:"OK"})}).then(e=>e.text()).then(e=>this.setState({normalFetchResult:e})).catch(()=>this.setState({normalFetchResult:"エラー"}))})),this.backgroundSyncTest=(()=>N(this,void 0,void 0,function*(){const e={path:"/api/v1/echo/test",body:JSON.stringify({test:"OK"}),result:""},n=yield Q(e),t=`background-sync:${n}`;(yield navigator.serviceWorker.ready).sync.register(t),this.setState({latestRequestId:n})})),this.reloadSyncList=(()=>N(this,void 0,void 0,function*(){const e=yield z();this.setState({syncList:e})})),this.state={latestRequestId:null,normalFetchResult:null,syncList:[]}}componentDidMount(){this.reloadSyncList()}render(){const{latestRequestId:e,normalFetchResult:n,syncList:t}=this.state;return o.createElement("div",{id:"service-worker-background-sync-container"},o.createElement("div",null,o.createElement(f,{onClick:()=>this.normalFetchTest()},"Normal Fetch Test")),o.createElement("div",null,o.createElement(E,{className:"push-info",onChange:()=>void 0},n)),o.createElement("div",null,o.createElement(f,{onClick:()=>{this.backgroundSyncTest()}},"Background Sync Test"),null!=e&&o.createElement("span",null,"　Request ID: ",e)),o.createElement("div",null,o.createElement(f,{onClick:()=>{this.reloadSyncList()}},"Reload")),o.createElement("div",null,o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",{className:"table-id-column"},"ID"),o.createElement("th",null,"Path"),o.createElement("th",null,"Result"),o.createElement("th",null,"CreatedAt"))),o.createElement("tbody",null,t.map(e=>o.createElement("tr",{key:e.id},o.createElement("td",null,e.id),o.createElement("td",null,e.path),o.createElement("td",null,e.result||"-"),o.createElement("td",null,e.createdAt||"-")))))))}},level:2}],U=W.map(e=>({path:e.path,titleJp:e.titleJp,titleEn:e.titleEn,level:e.level})),R=o.createElement(i.a,null,o.createElement(class extends o.Component{constructor(){super(...arguments),this.state={showMenu:!1}}render(){const{children:e,menuList:n}=this.props,{showMenu:t}=this.state,r=window.location.hash.substr(1);return o.createElement("div",{id:"common-frame"},o.createElement("div",{id:"common-frame-content",className:t?"show-menu":""},o.createElement("div",{id:"common-frame-content-inner"},e)),!t&&o.createElement("button",{className:"common-frame-header-menu-button",onClick:()=>this.setState({showMenu:!0})},o.createElement(m,null),o.createElement("span",null,"Menu")),t&&o.createElement("div",{id:"common-frame-menu"},o.createElement("button",{className:"common-frame-header-menu-button",onClick:()=>this.setState({showMenu:!1})},o.createElement(p,null),o.createElement("span",null,"Close")),n.map(e=>o.createElement(u,{key:e.path,level:e.level,selected:r===e.path,path:e.path,titleJp:e.titleJp,titleEn:e.titleEn}))),o.createElement("div",{id:"common-frame-footer"},o.createElement("div",null,"(C) 2018 hyiromori")))}},{menuList:U},W.map(e=>o.createElement(s.a,{component:e.component,exact:!0,key:e.path,path:e.path,strict:!0}))));t(90);const{serviceWorker:O}=navigator;null!=O&&O.register("/service_worker.js").then(e=>console.log("ServiceWorker scope:",e.scope)).catch(e=>console.log("ServiceWorker registration failed: ",e)),Object(r.render)(R,document.getElementById("app"))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,