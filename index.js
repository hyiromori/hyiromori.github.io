!function(e){function n(n){for(var r,l,a=n[0],c=n[1],s=n[2],p=0,A=[];p<a.length;p++)l=a[p],o[l]&&A.push(o[l][0]),o[l]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(e[r]=c[r]);for(m&&m(n);A.length;)A.shift()();return i.push.apply(i,s||[]),t()}function t(){for(var e,n=0;n<i.length;n++){for(var t=i[n],r=!0,a=1;a<t.length;a++){var c=t[a];0!==o[c]&&(r=!1)}r&&(i.splice(n--,1),e=l(l.s=t[0]))}return e}var r={},o={0:0},i=[];function l(n){if(r[n])return r[n].exports;var t=r[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=r,l.d=function(e,n,t){l.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,n){if(1&n&&(e=l(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)l.d(t,r,function(n){return e[n]}.bind(null,r));return t},l.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(n,"a",n),n},l.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},l.p="";var a=window.webpackJsonp=window.webpackJsonp||[],c=a.push.bind(a);a.push=n,a=a.slice();for(var s=0;s<a.length;s++)n(a[s]);var m=c;i.push([89,1]),t()}({40:function(e,n,t){var r=t(41);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},41:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,".common-frame-menu-item .menu-button {\n  display: block;\n  padding: 6px 16px;\n  text-decoration: none; }\n  .common-frame-menu-item .menu-button.level1 .title-jp, .common-frame-menu-item .menu-button.level1 .title-en, .common-frame-menu-item .menu-button.level2 .title-jp, .common-frame-menu-item .menu-button.level2 .title-en, .common-frame-menu-item .menu-button.level3 .title-jp, .common-frame-menu-item .menu-button.level3 .title-en {\n    line-height: calc(1em + 2px); }\n  .common-frame-menu-item .menu-button .title-en {\n    color: #888; }\n  .common-frame-menu-item .menu-button.level1 {\n    padding-left: 8px; }\n    .common-frame-menu-item .menu-button.level1 .title-jp {\n      font-size: 20px; }\n    .common-frame-menu-item .menu-button.level1 .title-en {\n      font-size: 14px; }\n  .common-frame-menu-item .menu-button.level2 {\n    padding-left: 24px; }\n    .common-frame-menu-item .menu-button.level2 .title-jp {\n      font-size: 18px; }\n    .common-frame-menu-item .menu-button.level2 .title-en {\n      font-size: 12px; }\n  .common-frame-menu-item .menu-button.level3 {\n    padding-left: 42px; }\n    .common-frame-menu-item .menu-button.level3 .title-jp {\n      font-size: 16px; }\n    .common-frame-menu-item .menu-button.level3 .title-en {\n      font-size: 10px; }\n  .common-frame-menu-item .menu-button.marked {\n    background-color: #ff7701; }\n    .common-frame-menu-item .menu-button.marked .title-jp {\n      color: #fff; }\n    .common-frame-menu-item .menu-button.marked .title-en {\n      color: #fff; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/common_frame/app/containers/common_frame/common_frame_menu_item.scss","/Users/ih-ppc64/projects/github_io/src/app/containers/common_frame/app/common/colors.scss"],names:[],mappings:"AAEA;EAEI,eAAc;EACd,kBAAiB;EACjB,sBAAqB,EA+DtB;EAnEH;IAOM,6BAA4B,EAC7B;EARL;IAWM,YCVK,EDWN;EAZL;IAeM,kBAAiB,EAWlB;IA1BL;MAmBQ,gBAAe,EAChB;IApBP;MAwBQ,gBAAe,EAChB;EAzBP;IA6BM,mBAAkB,EAWnB;IAxCL;MAiCQ,gBAAe,EAChB;IAlCP;MAsCQ,gBAAe,EAChB;EAvCP;IA2CM,mBAAkB,EAWnB;IAtDL;MA+CQ,gBAAe,EAChB;IAhDP;MAoDQ,gBAAe,EAChB;EArDP;IAyDM,0BCtDU,ED+DX;IAlEL;MA4DQ,YCvDI,EDwDL;IA7DP;MAgEQ,YC3DI,ED4DL",file:"common_frame_menu_item.scss",sourcesContent:["@import '../../common/colors';\n\n.common-frame-menu-item {\n  .menu-button {\n    display: block;\n    padding: 6px 16px;\n    text-decoration: none;\n\n    %title-line-height {\n      line-height: calc(1em + 2px);\n    }\n\n    .title-en {\n      color: $gray;\n    }\n\n    &.level1 {\n      padding-left: 8px;\n\n      .title-jp {\n        @extend %title-line-height;\n        font-size: 20px;\n      }\n\n      .title-en {\n        @extend %title-line-height;\n        font-size: 14px;\n      }\n    }\n\n    &.level2 {\n      padding-left: 24px;\n\n      .title-jp {\n        @extend %title-line-height;\n        font-size: 18px;\n      }\n\n      .title-en {\n        @extend %title-line-height;\n        font-size: 12px;\n      }\n    }\n\n    &.level3 {\n      padding-left: 42px;\n\n      .title-jp {\n        @extend %title-line-height;\n        font-size: 16px;\n      }\n\n      .title-en {\n        @extend %title-line-height;\n        font-size: 10px;\n      }\n    }\n\n    &.marked {\n      background-color: $orange;\n\n      .title-jp {\n        color: $white;\n      }\n\n      .title-en {\n        color: $white;\n      }\n    }\n  }\n}","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},43:function(e,n,t){var r=t(44);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},44:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#common-frame {\n  bottom: 0;\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0; }\n  #common-frame .common-frame-header-menu-button {\n    background-color: #fff;\n    border-radius: 4px;\n    box-shadow: -8px 8px 8px 0 #fff;\n    height: 28px;\n    padding: 8px 12px 0 0;\n    position: absolute;\n    right: 0;\n    top: 0; }\n    #common-frame .common-frame-header-menu-button span {\n      margin-left: 4px; }\n  #common-frame #common-frame-menu {\n    background-color: #fff;\n    border-left: 1px solid #888;\n    bottom: 32px;\n    max-width: 320px;\n    opacity: 0.95;\n    overflow-y: scroll;\n    padding: 42px 16px 8px 16px;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 100%; }\n    #common-frame #common-frame-menu > a {\n      display: block;\n      padding: 4px 8px; }\n      #common-frame #common-frame-menu > a.level1 {\n        font-size: 16px;\n        margin-top: 8px; }\n      #common-frame #common-frame-menu > a.level2 {\n        font-size: 12px;\n        padding-left: 24px; }\n      #common-frame #common-frame-menu > a.marked {\n        background-color: #ff7701;\n        border-width: 0;\n        color: #fff; }\n  #common-frame #common-frame-content {\n    bottom: 48px;\n    left: 0;\n    padding: 24px 16px 16px 16px;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    position: absolute;\n    right: 0;\n    top: 0; }\n    #common-frame #common-frame-content #common-frame-content-inner {\n      margin: 0 auto;\n      font-size: 16px;\n      max-width: 50em;\n      width: 100%; }\n  #common-frame #common-frame-footer {\n    background-color: #333;\n    bottom: 0;\n    height: 48px;\n    left: 0;\n    padding: 0 16px;\n    position: absolute;\n    right: 0; }\n    #common-frame #common-frame-footer .left-content {\n      float: left; }\n      #common-frame #common-frame-footer .left-content a {\n        background-color: #fff;\n        border-radius: 50%;\n        color: #fff;\n        display: inline-block;\n        font-size: 22px;\n        height: 32px;\n        line-height: 32px;\n        margin: 8px 8px 8px 0;\n        text-align: center;\n        width: 32px; }\n    #common-frame #common-frame-footer .right-content {\n      float: right;\n      font-size: 12px;\n      color: #fff;\n      line-height: 48px; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/common_frame/app/containers/common_frame/common_frame.scss","/Users/ih-ppc64/projects/github_io/src/app/containers/common_frame/app/common/colors.scss"],names:[],mappings:"AAEA;EACE,UAAS;EACT,QAAO;EACP,gBAAe;EACf,SAAQ;EACR,OAAM,EAuGP;EA5GD;IAQI,uBCHQ;IDIR,mBAAkB;IAClB,gCCLQ;IDMR,aAAY;IACZ,sBAAqB;IACrB,mBAAkB;IAClB,SAAQ;IACR,OAAM,EAKP;IApBH;MAkBM,iBAAgB,EACjB;EAnBL;IAuBI,uBClBQ;IDmBR,4BCvBO;IDwBP,aAAY;IACZ,iBAAgB;IAChB,cAAa;IACb,mBAAkB;IAClB,4BAA2B;IAC3B,mBAAkB;IAClB,SAAQ;IACR,OAAM;IACN,YAAW,EAsBZ;IAvDH;MAoCM,eAAc;MACd,iBAAgB,EAiBjB;MAtDL;QAwCQ,gBAAe;QACf,gBAAe,EAChB;MA1CP;QA6CQ,gBAAe;QACf,mBAAkB,EACnB;MA/CP;QAkDQ,0BC/CQ;QDgDR,gBAAe;QACf,YC/CI,EDgDL;EArDP;IA0DI,aAAY;IACZ,QAAO;IACP,6BAA4B;IAC5B,mBAAkB;IAClB,mBAAkB;IAClB,mBAAkB;IAClB,SAAQ;IACR,OAAM,EAQP;IAzEH;MAoEM,eAAc;MACd,gBAAe;MACf,gBAAe;MACf,YAAW,EACZ;EAxEL;IA4EI,uBC7EY;ID8EZ,UAAS;IACT,aAAY;IACZ,QAAO;IACP,gBAAe;IACf,mBAAkB;IAClB,SAAQ,EAyBT;IA3GH;MAqFM,YAAW,EAcZ;MAnGL;QAwFQ,uBCnFI;QDoFJ,mBAAkB;QAClB,YCrFI;QDsFJ,sBAAqB;QACrB,gBAAe;QACf,aAAY;QACZ,kBAAiB;QACjB,sBAAqB;QACrB,mBAAkB;QAClB,YAAW,EACZ;IAlGP;MAsGM,aAAY;MACZ,gBAAe;MACf,YCnGM;MDoGN,kBAAiB,EAClB",file:"common_frame.scss",sourcesContent:["@import '../../common/colors';\n\n#common-frame {\n  bottom: 0;\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0;\n\n  .common-frame-header-menu-button {\n    background-color: $white;\n    border-radius: 4px;\n    box-shadow: -8px 8px 8px 0 $white;\n    height: 28px;\n    padding: 8px 12px 0 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n\n    span {\n      margin-left: 4px;\n    }\n  }\n\n  #common-frame-menu {\n    background-color: $white;\n    border-left: 1px solid $gray;\n    bottom: 32px;\n    max-width: 320px;\n    opacity: 0.95;\n    overflow-y: scroll;\n    padding: 42px 16px 8px 16px;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 100%;\n\n    & > a {\n      display: block;\n      padding: 4px 8px;\n\n      &.level1 {\n        font-size: 16px;\n        margin-top: 8px;\n      }\n\n      &.level2 {\n        font-size: 12px;\n        padding-left: 24px;\n      }\n\n      &.marked {\n        background-color: $orange;\n        border-width: 0;\n        color: $white;\n      }\n    }\n  }\n\n  #common-frame-content {\n    bottom: 48px;\n    left: 0;\n    padding: 24px 16px 16px 16px;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    position: absolute;\n    right: 0;\n    top: 0;\n\n    #common-frame-content-inner {\n      margin: 0 auto;\n      font-size: 16px;\n      max-width: 50em;\n      width: 100%;\n    }\n  }\n\n  #common-frame-footer {\n    background-color: $gray-dark;\n    bottom: 0;\n    height: 48px;\n    left: 0;\n    padding: 0 16px;\n    position: absolute;\n    right: 0;\n\n    .left-content {\n      float: left;\n\n      a {\n        background-color: $white;\n        border-radius: 50%;\n        color: $white;\n        display: inline-block;\n        font-size: 22px;\n        height: 32px;\n        line-height: 32px;\n        margin: 8px 8px 8px 0;\n        text-align: center;\n        width: 32px;\n      }\n    }\n\n    .right-content {\n      float: right;\n      font-size: 12px;\n      color: $white;\n      line-height: 48px;\n    }\n  }\n}\n\n","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},45:function(e,n,t){var r=t(46);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},46:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"","",{version:3,sources:[],names:[],mappings:"",file:"style.scss",sourceRoot:""}])},47:function(e,n,t){var r=t(48);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},48:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#laboratory-container h2 {\n  text-align: center; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/laboratory/app/containers/laboratory/style.scss"],names:[],mappings:"AAAA;EAEI,mBAAkB,EACnB",file:"style.scss",sourcesContent:["#laboratory-container {\n  h2 {\n    text-align: center;\n  }\n}\n"],sourceRoot:""}])},70:function(e,n,t){var r=t(71);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},71:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#qr-code-container #qr-code-image-wrapper {\n  text-align: center; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/laboratory/qr_code/app/containers/laboratory/qr_code/style.scss"],names:[],mappings:"AAEA;EAEI,mBAAkB,EACnB",file:"style.scss",sourcesContent:["@import '../../../common/colors';\n\n#qr-code-container {\n  #qr-code-image-wrapper {\n    text-align: center;\n  }\n}\n"],sourceRoot:""}])},72:function(e,n,t){var r=t(73);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},73:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,".text-area-presenter .text-area-label {\n  height: 24px; }\n\n.text-area-presenter textarea {\n  background-color: #fff;\n  border: 1px solid #888;\n  min-height: calc(100% - 24px);\n  padding: 4px 8px;\n  resize: vertical;\n  width: 100%; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/presenters/app/presenters/text_area.scss","/Users/ih-ppc64/projects/github_io/src/app/presenters/app/common/colors.scss"],names:[],mappings:"AAEA;EAEI,aAAY,EACb;;AAHH;EAMI,uBCDQ;EDER,uBCNO;EDOP,8BAA6B;EAC7B,iBAAgB;EAChB,iBAAgB;EAChB,YAAW,EACZ",file:"text_area.scss",sourcesContent:["@import '../common/colors';\n\n.text-area-presenter {\n  .text-area-label {\n    height: 24px;\n  }\n\n  textarea {\n    background-color: $white;\n    border: 1px solid $gray;\n    min-height: calc(100% - 24px);\n    padding: 4px 8px;\n    resize: vertical;\n    width: 100%;\n  }\n}\n","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},74:function(e,n,t){var r=t(75);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},75:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"","",{version:3,sources:[],names:[],mappings:"",file:"style.scss",sourceRoot:""}])},76:function(e,n,t){var r=t(77);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},77:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"","",{version:3,sources:[],names:[],mappings:"",file:"style.scss",sourceRoot:""}])},78:function(e,n,t){var r=t(79);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},79:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,".button-presenter {\n  background-color: #ff7701;\n  border-radius: 0;\n  border: 1px solid #ff7701;\n  color: #fff;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 14px;\n  height: 28px;\n  line-height: 28px;\n  margin: 0;\n  padding: 0 16px;\n  position: relative;\n  text-align: center; }\n  .button-presenter.disable {\n    opacity: 0.5; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/presenters/app/presenters/button.scss","/Users/ih-ppc64/projects/github_io/src/app/presenters/app/common/colors.scss"],names:[],mappings:"AAEA;EACE,0BCEc;EDDd,iBAAgB;EAChB,0BCAc;EDCd,YCCU;EDAV,gBAAe;EACf,sBAAqB;EACrB,gBAAe;EACf,aAAY;EACZ,kBAAiB;EACjB,UAAS;EACT,gBAAe;EACf,mBAAkB;EAClB,mBAAkB,EAKnB;EAlBD;IAgBI,aAAY,EACb",file:"button.scss",sourcesContent:["@import '../common/colors';\n\n.button-presenter {\n  background-color: $orange;\n  border-radius: 0;\n  border: 1px solid $orange;\n  color: $white;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 14px;\n  height: 28px;\n  line-height: 28px;\n  margin: 0;\n  padding: 0 16px;\n  position: relative;\n  text-align: center;\n\n  &.disable {\n    opacity: 0.5;\n  }\n}","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},80:function(e,n,t){var r=t(81);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},81:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,".text-input {\n  width: 100%; }\n  .text-input .text-input-label, .text-input input {\n    width: 100%; }\n  .text-input .text-input-label {\n    padding: 0 4px 2px 4px; }\n  .text-input input {\n    border-radius: 4px;\n    border: 1px solid #ccc;\n    font-size: 14px;\n    padding: 4px 8px; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/presenters/app/presenters/text_input.scss","/Users/ih-ppc64/projects/github_io/src/app/presenters/app/common/colors.scss"],names:[],mappings:"AAEA;EACE,YAAW,EAgBZ;EAjBD;IAII,YAAW,EACZ;EALH;IAQI,uBAAsB,EACvB;EATH;IAYI,mBAAkB;IAClB,uBCba;IDcb,gBAAe;IACf,iBAAgB,EACjB",file:"text_input.scss",sourcesContent:["@import '../common/colors';\n\n.text-input {\n  width: 100%;\n\n  .text-input-label, input {\n    width: 100%;\n  }\n\n  .text-input-label {\n    padding: 0 4px 2px 4px;\n  }\n\n  input {\n    border-radius: 4px;\n    border: 1px solid $gray-light;\n    font-size: 14px;\n    padding: 4px 8px;\n  }\n}","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},82:function(e,n,t){var r=t(83);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},83:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#service-worker-push-container .request-permission-button {\n  margin-top: 8px; }\n\n#service-worker-push-container .subscription-info {\n  font-size: 10px;\n  height: 240px;\n  margin-top: 8px; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/laboratory/service_worker/push/app/containers/laboratory/service_worker/push/style.scss"],names:[],mappings:"AAAA;EAEI,gBAAe,EAChB;;AAHH;EAMI,gBAAe;EACf,cAAa;EACb,gBAAe,EAChB",file:"style.scss",sourcesContent:["#service-worker-push-container {\n  .request-permission-button {\n    margin-top: 8px;\n  }\n\n  .subscription-info {\n    font-size: 10px;\n    height: 240px;\n    margin-top: 8px;\n  }\n}\n"],sourceRoot:""}])},84:function(e,n,t){var r=t(85);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},85:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#service-worker-background-sync-container div {\n  margin: 4px 0; }\n\n#service-worker-background-sync-container table {\n  width: 100%; }\n  #service-worker-background-sync-container table .table-id-column {\n    width: 40px; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/laboratory/service_worker/background_sync/app/containers/laboratory/service_worker/background_sync/style.scss"],names:[],mappings:"AAAA;EAEI,cAAa,EACd;;AAHH;EAMI,YAAW,EAKZ;EAXH;IASM,YAAW,EACZ",file:"style.scss",sourcesContent:["#service-worker-background-sync-container {\n  div {\n    margin: 4px 0;\n  }\n\n  table {\n    width: 100%;\n\n    .table-id-column {\n      width: 40px;\n    }\n  }\n}\n"],sourceRoot:""}])},87:function(e,n,t){var r=t(88);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},88:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"*, *:before, *:after {\n  background-color: transparent;\n  border: 0 solid #888;\n  box-sizing: border-box;\n  color: #000;\n  font-size: 14px;\n  font-weight: normal;\n  line-height: 1.5;\n  margin: 0;\n  padding: 0;\n  text-decoration: none;\n  word-wrap: break-word; }\n\nh1, h2, h3, h4, h5, h6, ul, ol {\n  margin-top: 16px; }\n\np {\n  margin-top: 8px; }\n\nh1 {\n  font-weight: 600;\n  font-size: 24px;\n  text-align: center; }\n\nh2 {\n  font-weight: 600;\n  font-size: 20px; }\n\nh3 {\n  font-weight: 700;\n  font-size: 18px; }\n\nh4 {\n  font-weight: 700;\n  font-size: 14px; }\n\nh5 {\n  font-weight: 800;\n  font-size: 12px; }\n\nh6 {\n  font-weight: 800;\n  font-size: 10px; }\n\np {\n  padding-left: 1em; }\n\na {\n  color: #009050;\n  text-decoration: underline; }\n\nstrong {\n  background-color: #eee;\n  display: inline-block;\n  font-weight: 800;\n  margin: 1px 4px;\n  padding: 1px 4px; }\n\nbutton:focus {\n  outline: none; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  table-layout: fixed; }\n  table th, table td {\n    padding: 4px 8px;\n    border: 1px solid #888; }\n\nul, ol {\n  padding-left: 48px;\n  width: 100%; }\n  ul li, ol li {\n    margin-top: 4px; }\n\n.frame {\n  border: 1px solid #ccc;\n  margin: 16px;\n  padding: 16px;\n  width: calc(100% - 32px); }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/app/index.scss","/Users/ih-ppc64/projects/github_io/src/app/app/common/colors.scss"],names:[],mappings:"AAEA;EACE,8BAA6B;EAC7B,qBCDS;EDET,uBAAsB;EACtB,YCNU;EDOV,gBAAe;EACf,oBAAmB;EACnB,iBAAgB;EAChB,UAAS;EACT,WAAU;EACV,sBAAqB;EACrB,sBAAqB,EACtB;;AAED;EACE,iBAAgB,EACjB;;AAED;EACE,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe;EACf,mBAAkB,EACnB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,kBAAiB,EAClB;;AAED;EACE,eCxDa;EDyDb,2BAA0B,EAC3B;;AAED;EACE,uBC3DW;ED4DX,sBAAqB;EACrB,iBAAgB;EAChB,gBAAe;EACf,iBAAgB,EACjB;;AAED;EACE,cAAa,EACd;;AAED;EACE,0BAAyB;EACzB,kBAAiB;EACjB,oBAAmB,EAMpB;EATD;IAMI,iBAAgB;IAChB,uBChFO,EDiFR;;AAGH;EACE,mBAAkB;EAClB,YAAW,EAKZ;EAPD;IAKI,gBAAe,EAChB;;AAGH;EACE,uBC/Fe;EDgGf,aAAY;EACZ,cAAa;EACb,yBAAwB,EACzB",file:"index.scss",sourcesContent:["@import './common/colors';\n\n*, *:before, *:after {\n  background-color: transparent;\n  border: 0 solid $gray;\n  box-sizing: border-box;\n  color: $black;\n  font-size: 14px;\n  font-weight: normal;\n  line-height: 1.5;\n  margin: 0;\n  padding: 0;\n  text-decoration: none;\n  word-wrap: break-word;\n}\n\nh1, h2, h3, h4, h5, h6, ul, ol {\n  margin-top: 16px;\n}\n\np {\n  margin-top: 8px;\n}\n\nh1 {\n  font-weight: 600;\n  font-size: 24px;\n  text-align: center;\n}\n\nh2 {\n  font-weight: 600;\n  font-size: 20px;\n}\n\nh3 {\n  font-weight: 700;\n  font-size: 18px;\n}\n\nh4 {\n  font-weight: 700;\n  font-size: 14px;\n}\n\nh5 {\n  font-weight: 800;\n  font-size: 12px;\n}\n\nh6 {\n  font-weight: 800;\n  font-size: 10px;\n}\n\np {\n  padding-left: 1em;\n}\n\na {\n  color: $green;\n  text-decoration: underline;\n}\n\nstrong {\n  background-color: $silver;\n  display: inline-block;\n  font-weight: 800;\n  margin: 1px 4px;\n  padding: 1px 4px;\n}\n\nbutton:focus {\n  outline: none;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  table-layout: fixed;\n\n  th, td {\n    padding: 4px 8px;\n    border: 1px solid $gray;\n  }\n}\n\nul, ol {\n  padding-left: 48px;\n  width: 100%;\n\n  li {\n    margin-top: 4px;\n  }\n}\n\n.frame {\n  border: 1px solid $gray-light;\n  margin: 16px;\n  padding: 16px;\n  width: calc(100% - 32px);\n}","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},89:function(e,n,t){"use strict";t.r(n);var r=t(27),o=t(0),i=t(92),l=t(91),a=t(11),c=t(7),s=t(14),m=t(17);c.b.add(s.c);const p=()=>o.createElement(a.a,{icon:"times"});c.b.add(s.a);const A=()=>o.createElement(a.a,{icon:"bars"});c.b.add(s.b);const u=()=>o.createElement(a.a,{icon:"envelope"});c.b.add(m.a);const d=()=>o.createElement(a.a,{icon:["fab","twitter"]});c.b.add(m.a);const h=()=>o.createElement(a.a,{icon:["fab","github"]});var g=t(90);t(40);const f=e=>{const{level:n,selected:t,path:r,titleJp:i,titleEn:l}=e,a=o.createElement("div",null,o.createElement("div",{className:"title-jp"},i),o.createElement("div",{className:"title-en"},l));return t?o.createElement("div",{className:"common-frame-menu-item"},o.createElement("div",{className:`menu-button level${n} marked`},a)):o.createElement("div",{className:"common-frame-menu-item"},o.createElement(g.a,{to:r,className:`menu-button level${n}`},a))};t(43);class E extends o.Component{setState(e,n){console.log("Update state:",e),super.setState(e,n)}}t(45);t(47);var x=t(28);t(70),t(72);class b extends o.Component{render(){const{children:e,className:n,label:t,onChange:r}=this.props;return o.createElement("div",{className:`text-area-presenter ${n}`},t&&o.createElement("div",{className:"text-area-label"},t),o.createElement("textarea",{onChange:e=>{const n=e.target.value;"string"==typeof n&&r(n)},value:e||""}))}}b.defaultProps={className:"",label:""};const{localStorage:B}=window;class v{}v.get=(e=>B.getItem(e)),v.set=((e,n)=>B.setItem(e,n)),v.remove=(e=>B.removeItem(e));const C="qr_code/qrText";t(74);t(76);const y="serviceWorker"in navigator;t(78);class k extends o.Component{render(){const{active:e,children:n,className:t,onClick:r}=this.props;return o.createElement("button",{className:`button-presenter ${t} ${e?"":"disable"}`,onClick:e?r:null},n)}}k.defaultProps={active:!0,className:""};t(80);const w=e=>{const{className:n,label:t,maxLength:r,onChangeText:i,password:l,placeHolder:a,value:c}=e;return o.createElement("div",{className:`text-input ${n}`},t&&o.createElement("div",{className:"text-input-label"},t),o.createElement("input",{placeholder:a,type:l?"password":"text",onChange:e=>i(e.target.value),maxLength:r,value:c||""}))};t(82);var I=function(e,n,t,r){return new(t||(t=Promise))(function(o,i){function l(e){try{c(r.next(e))}catch(e){i(e)}}function a(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){e.done?o(e.value):new t(function(n){n(e.value)}).then(l,a)}c((r=r.apply(e,n||[])).next())})};const $="serviceWorker"in navigator&&"PushManager"in window,D=$?navigator.serviceWorker:null,_=e=>{const n=(e+"=".repeat((4-e.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),t=window.atob(n),r=new Uint8Array(t.length);for(let e=0;e<t.length;++e)r[e]=t.charCodeAt(e);return r};t(84);var S=function(e,n,t,r){return new(t||(t=Promise))(function(o,i){function l(e){try{c(r.next(e))}catch(e){i(e)}}function a(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){e.done?o(e.value):new t(function(n){n(e.value)}).then(l,a)}c((r=r.apply(e,n||[])).next())})};const M="serviceWorker"in navigator?navigator.serviceWorker:null,P="indexedDB"in window?window.indexedDB:null;const Q=[{key:"about",path:"/",titleJp:"このサイトについて",titleEn:"About this site",component:class extends E{render(){return o.createElement("div",null,o.createElement("h1",null,"このサイトについて"),o.createElement("h2",null,"目的"),o.createElement("p",null,"このサイトは以下の目的で公開しています。"),o.createElement("ul",null,o.createElement("li",null,"新しい技術のテスト"),o.createElement("li",null,"スキルセットの公開")),o.createElement("h2",null,"運営者について"),o.createElement("p",null,o.createElement("strong",null,"hyiromori")," という名前で活動している、(Frontend が好きな)フルスタックエンジニアです。"),o.createElement("p",null,o.createElement("a",{href:"https://qiita.com/hyiromori"},"Qiita")," もちょこっとだけ書いてます。"),o.createElement("h2",null,"このサイトのソース"),o.createElement("p",null,o.createElement("a",{href:"https://github.com/hyiromori/hyiromori.github.io"},"GitHub")," にあります。"),o.createElement("p",null,"技術的な特徴としては、以下のとおりです。"),o.createElement("ul",null,o.createElement("li",null,o.createElement("strong",null,"SPA"),"で作られているので、読み込み完了後はページ遷移が早いです。"),o.createElement("li",null,o.createElement(g.a,{to:q},"Service Worker"),"を使用しており、必要なリソースをキャッシュしているので、対応しているブラウザの場合はオフラインでも閲覧できます。"),o.createElement("li",null,"自分の技術力向上のために",o.createElement("strong",null,"TypeScript"),o.createElement("strong",null,"React"),o.createElement("strong",null,"Webpack"),"などのベースとなるもの以外は、ライブラリやフレームワークなどほぼ使用していません。")))}},level:1},{key:"laboratory",path:"/laboratory",titleJp:"実験室",titleEn:"Laboratory",component:class extends E{render(){return o.createElement("div",{id:"laboratory-container"},o.createElement("h1",null,"実験室"),o.createElement("p",null,"新しい技術や気になった技術の実験に使ったものの紹介ページです。"),o.createElement("h2",null,"実験一覧"),o.createElement("ul",null,o.createElement("li",null,o.createElement(g.a,{to:q},"Service Worker")),o.createElement("li",null,o.createElement(g.a,{to:Y},"QR Code"))))}},level:1},{key:"service_worker",path:"/laboratory/service_worker",titleJp:"サービスワーカー",titleEn:"Service Worker",component:class extends E{render(){return o.createElement("div",{id:"service-worker-container"},o.createElement("h1",null,"Service Worker"),o.createElement("h2",null,"Service Worker とは？"),o.createElement("p",null,"ブラウザのバックグランドで実行される JavaScript の実行環境です。 ページのライフサイクルとは「別」のライフサイクルを持ちます。"),o.createElement("h2",null,"Service Worker の機能"),o.createElement("p",null,"以下のAPIが提供されています。"),o.createElement("ul",null,o.createElement("li",null,o.createElement(g.a,{to:N},"Cache API")),o.createElement("li",null,o.createElement(g.a,{to:R},"Push API")),o.createElement("li",null,o.createElement(g.a,{to:U},"Background Sync API"))),o.createElement("h2",null,"もっと詳しく知りたい場合")," ",o.createElement("p",null,"以下の Qiita の記事をご覧ください。"),o.createElement("p",null,o.createElement("a",{href:"https://qiita.com/hyiromori/items/7986a725541c97da878d"},"Service Worker メモ - Qiita")))}},level:2},{key:"service_worker_cache",path:"/laboratory/service_worker/cache",titleJp:"キャッシュ",titleEn:"Cache API",component:class extends E{render(){return o.createElement("div",{id:"service-worker-cache-container"},o.createElement("h1",null,"キャッシュAPI"),o.createElement("h2",null,"キャッシュAPIとは？"),o.createElement("p",null,"Service Worker で提供されている API の一つで、fetch に介入し、キャッシュされたリソースを返却することができます。"),o.createElement("p",null,"キャッシュを使用するかどうかは、コントロール可能です。"),o.createElement("h2",null,"お使いのブラウザの対応状況"),o.createElement("p",null,"お使いのブラウザは",o.createElement("strong",null,y?"対応しています":"対応していません")),y&&o.createElement("div",null,o.createElement("h2",null,"動作確認の方法"),o.createElement("p",null,"実は、このページに必要なリソースは全てキャシュされています。以下の手順でキャッシュされていることを確認できます。"),o.createElement("ol",null,o.createElement("li",null,"インターネットから切り離します。（例：機内モードにする、Wi-FiをOffにする、LANケーブルを抜くなど）"),o.createElement("li",null,"このページをリロードして、正常に表示されることを確認します。"))))}},level:3},{key:"service_worker_push",path:"/laboratory/service_worker/push",titleJp:"プッシュ通知",titleEn:"Push API",component:class extends E{constructor(){super(...arguments),this.state={publicKey:"",subscriptionInfo:""},this.requestPushNotification=(()=>I(this,void 0,void 0,function*(){const{publicKey:e}=this.state;if(""!==e&&null!=D){console.log("ServiceWorker and Push is Supported");try{const n=yield D.register("/service_worker.js");console.log("ServiceWorker is registered",n);const t=_(e);yield n.pushManager.getSubscription();const r={userVisibleOnly:!0,applicationServerKey:t};n.pushManager.subscribe(r).then(e=>{console.log("User is subscribed:",e),this.setState({subscriptionInfo:JSON.stringify(e,null,"  ")})})}catch(e){console.error("ServiceWorker error:",e)}}}))}render(){const{publicKey:e,subscriptionInfo:n}=this.state;return o.createElement("div",{id:"service-worker-push-container"},o.createElement("h1",null,"Service Worker - Push API"),o.createElement("h2",null,"機能概要"),o.createElement("p",null,"名前の通り、ブラウザでプッシュ通知が行える機能になります。"),o.createElement("h2",null,"お使いのブラウザの対応状況"),o.createElement("p",null,"お使いのブラウザは",o.createElement("strong",null,$?"対応しています":"対応していません")),$&&o.createElement("div",null,o.createElement("h2",null,"動作確認の方法"),o.createElement("ol",null,o.createElement("li",null,o.createElement("a",{href:"https://web-push-codelab.glitch.me/",target:"_blank"},"Push Companion (外部サイト)"),"(※)を開きます。"),o.createElement("li",null,"(※)のページ内にある",o.createElement("strong",null,"Public Key"),"をコピーします。"),o.createElement("li",null,"下の",o.createElement("strong",null,"操作パネル"),"の",o.createElement("strong",null,"Public Key"),"にペーストします。"),o.createElement("li",null,o.createElement("strong",null,"操作パネル"),"の",o.createElement("strong",null,"Request Permission"),"をクリックします。"),o.createElement("li",null,"ブラウザから通知を許可するか尋ねられるので、許可します。"),o.createElement("li",null,o.createElement("strong",null,"操作パネル"),"の",o.createElement("strong",null,"Subscription Info"),"にJSON文字列が表示されるので、全てコピーします。"),o.createElement("li",null,"(※)のページの",o.createElement("strong",null,"Subscription to Send To"),"にペーストします。"),o.createElement("li",null,"(※)のページの",o.createElement("strong",null,"Text to Send"),"に通知したいメッセージを適当に入れます。"),o.createElement("li",null,"(※)のページの",o.createElement("strong",null,"SEND PUSH MESSAGE"),"をクリックします。"),o.createElement("li",null,"プッシュ通知が届くことを確認します。")),o.createElement("h2",null,"操作パネル"),o.createElement("div",{className:"frame"},o.createElement(w,{label:"Public Key",maxLength:100,onChangeText:e=>this.setState({publicKey:e}),placeHolder:"Public Key",value:e}),o.createElement(k,{active:""!==e,className:"request-permission-button",onClick:()=>this.requestPushNotification()},"Request Permission"),o.createElement(b,{className:"subscription-info",label:"Subscription Info",onChange:()=>void 0},n))))}},level:3},{key:"service_worker_sync",path:"/laboratory/service_worker/background_sync",titleJp:"バックグラウンド同期",titleEn:"Background Sync API",component:class extends E{constructor(){super(...arguments),this.intervalId=null,this.db=null,this.state={syncList:[]},this.reloadSyncList=(()=>S(this,void 0,void 0,function*(){})),this.backgroundSyncTest=(()=>{if(null==M||null==this.db)return;const e=this.db.transaction(["background_sync"],"readwrite");e.onerror=(e=>console.error("Failed:",e));const n=e.objectStore("background_sync").add({path:"/example.json",body:"",result:""});n.onerror=(e=>console.error("Failed:",e)),n.onsuccess=(e=>S(this,void 0,void 0,function*(){const n=`background-sync:${e.target.result}`;(yield M.ready).sync.register(n),this.reloadSyncList()}))})}componentWillMount(){return S(this,void 0,void 0,function*(){if(null==P)return;const e=P.open("service_worker",1);e.onupgradeneeded=(e=>{const n=e.target.result,t=n.createObjectStore("background_sync",{keyPath:"id",autoIncrement:!0});console.log("Success create store:",t),this.db=n}),e.onerror=(e=>console.error("Fail open DB:",e)),e.onsuccess=(e=>{console.log("Success open DB:",e),this.db=e.target.result})})}componentDidMount(){this.reloadSyncList(),this.intervalId=setInterval(this.reloadSyncList,1e3)}componentWillUnmount(){null!=this.intervalId&&(clearInterval(this.intervalId),this.intervalId=null)}render(){const{syncList:e}=this.state;return o.createElement("div",{id:"service-worker-background-sync-container"},o.createElement("div",null,o.createElement(k,{onClick:()=>this.backgroundSyncTest()},"Background Sync Test")),o.createElement("div",null,o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",{className:"table-id-column"},"ID"),o.createElement("th",null,"Path"),o.createElement("th",null,"Result"),o.createElement("th",null,"CreatedAt"))),o.createElement("tbody",null,e.map(e=>o.createElement("tr",{key:e.id},o.createElement("td",null,e.id),o.createElement("td",null,e.path),o.createElement("td",null,e.result||"-"),o.createElement("td",null,e.createdAt||"-")))))))}},level:3},{key:"qr_code",path:"/laboratory/qr_code",titleJp:"QRコード",titleEn:"QR Code",component:class extends E{constructor(){super(...arguments),this.state={qrImage:"",qrText:""},this.onChangeText=(e=>{v.set(C,e),this.setState({qrText:e}),""!==e&&x.toDataURL(e).then(e=>{this.setState({qrImage:e})}).catch(e=>{console.error("QrCode generate error:",e)})})}componentDidMount(){const e=v.get(C)||window.location.href;this.onChangeText(e)}render(){const{qrImage:e,qrText:n}=this.state;return o.createElement("div",{id:"qr-code-container"},o.createElement("h1",null,"QR Code"),o.createElement("div",{className:"frame"},""!==e&&o.createElement("div",{id:"qr-code-image-wrapper"},o.createElement("img",{src:e,alt:"QR Code"})),o.createElement(b,{label:"QRコードに変換する文字列",onChange:this.onChangeText},n)))}},level:2}],j=Q.map(e=>({path:e.path,titleJp:e.titleJp,titleEn:e.titleEn,level:e.level})),z=o.createElement(i.a,null,o.createElement(class extends o.Component{constructor(){super(...arguments),this.state={showMenu:!1}}render(){const{children:e,menuList:n}=this.props,{showMenu:t}=this.state,r=window.location.hash.substr(1);return o.createElement("div",{id:"common-frame"},o.createElement("div",{id:"common-frame-content",className:t?"show-menu":""},o.createElement("div",{id:"common-frame-content-inner"},e)),!t&&o.createElement("button",{className:"common-frame-header-menu-button",onClick:()=>this.setState({showMenu:!0})},o.createElement(A,null),o.createElement("span",null,"Menu")),t&&o.createElement("div",{id:"common-frame-menu"},o.createElement("button",{className:"common-frame-header-menu-button",onClick:()=>this.setState({showMenu:!1})},o.createElement(p,null),o.createElement("span",null,"Close")),n.map(e=>o.createElement(f,{key:e.path,level:e.level,selected:r===e.path,path:e.path,titleJp:e.titleJp,titleEn:e.titleEn}))),o.createElement("div",{id:"common-frame-footer"},o.createElement("div",{className:"left-content"},o.createElement("a",{href:"mailto:hyiromori@gmail.com"},o.createElement(u,null)),o.createElement("a",{href:"https://twitter.com/hyiromori",target:"_blank"},o.createElement(d,null)),o.createElement("a",{href:"https://github.com/hyiromori",target:"_blank"},o.createElement(h,null))),o.createElement("div",{className:"right-content"},"(C) 2018 hyiromori")))}},{menuList:j},Q.map(e=>o.createElement(l.a,{component:e.component,exact:!0,key:e.path,path:e.path,strict:!0})))),W=e=>{const n=Q.find(n=>n.key===e);if(null==n)throw new Error(`Not found: ${e}`);return`${n.path}`},q=W("service_worker"),N=W("service_worker_cache"),R=W("service_worker_push"),U=W("service_worker_sync"),Y=W("qr_code");t(87);"serviceWorker"in navigator&&navigator.serviceWorker.register("/service_worker.js").then(e=>console.log("ServiceWorker scope:",e.scope)).catch(e=>console.log("ServiceWorker registration failed: ",e)),Object(r.render)(z,document.getElementById("app"))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbnRhaW5lcnMvY29tbW9uX2ZyYW1lL2NvbW1vbl9mcmFtZV9tZW51X2l0ZW0uc2Nzcz8zZjI2Iiwid2VicGFjazovLy8uL2FwcC9jb250YWluZXJzL2NvbW1vbl9mcmFtZS9jb21tb25fZnJhbWVfbWVudV9pdGVtLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbnRhaW5lcnMvY29tbW9uX2ZyYW1lL2NvbW1vbl9mcmFtZS5zY3NzP2Y1NjYiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbnRhaW5lcnMvY29tbW9uX2ZyYW1lL2NvbW1vbl9mcmFtZS5zY3NzIiwid2VicGFjazovLy8uL2FwcC9jb250YWluZXJzL2Fib3V0L3N0eWxlLnNjc3M/MTE1YSIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9hYm91dC9zdHlsZS5zY3NzIiwid2VicGFjazovLy8uL2FwcC9jb250YWluZXJzL2xhYm9yYXRvcnkvc3R5bGUuc2Nzcz82M2U1Iiwid2VicGFjazovLy8uL2FwcC9jb250YWluZXJzL2xhYm9yYXRvcnkvc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3FyX2NvZGUvc3R5bGUuc2Nzcz9iZmYzIiwid2VicGFjazovLy8uL2FwcC9jb250YWluZXJzL2xhYm9yYXRvcnkvcXJfY29kZS9zdHlsZS5zY3NzIiwid2VicGFjazovLy8uL2FwcC9wcmVzZW50ZXJzL3RleHRfYXJlYS5zY3NzPzA0YjciLCJ3ZWJwYWNrOi8vLy4vYXBwL3ByZXNlbnRlcnMvdGV4dF9hcmVhLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbnRhaW5lcnMvbGFib3JhdG9yeS9zZXJ2aWNlX3dvcmtlci9zdHlsZS5zY3NzPzViYjgiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbnRhaW5lcnMvbGFib3JhdG9yeS9zZXJ2aWNlX3dvcmtlci9zdHlsZS5zY3NzIiwid2VicGFjazovLy8uL2FwcC9jb250YWluZXJzL2xhYm9yYXRvcnkvc2VydmljZV93b3JrZXIvY2FjaGUvc3R5bGUuc2Nzcz9iOWJkIiwid2VicGFjazovLy8uL2FwcC9jb250YWluZXJzL2xhYm9yYXRvcnkvc2VydmljZV93b3JrZXIvY2FjaGUvc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly8vLi9hcHAvcHJlc2VudGVycy9idXR0b24uc2Nzcz8xOTllIiwid2VicGFjazovLy8uL2FwcC9wcmVzZW50ZXJzL2J1dHRvbi5zY3NzIiwid2VicGFjazovLy8uL2FwcC9wcmVzZW50ZXJzL3RleHRfaW5wdXQuc2Nzcz9jMjE2Iiwid2VicGFjazovLy8uL2FwcC9wcmVzZW50ZXJzL3RleHRfaW5wdXQuc2NzcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL3B1c2gvc3R5bGUuc2Nzcz84NmZmIiwid2VicGFjazovLy8uL2FwcC9jb250YWluZXJzL2xhYm9yYXRvcnkvc2VydmljZV93b3JrZXIvcHVzaC9zdHlsZS5zY3NzIiwid2VicGFjazovLy8uL2FwcC9jb250YWluZXJzL2xhYm9yYXRvcnkvc2VydmljZV93b3JrZXIvYmFja2dyb3VuZF9zeW5jL3N0eWxlLnNjc3M/NWQ2NCIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL2JhY2tncm91bmRfc3luYy9zdHlsZS5zY3NzIiwid2VicGFjazovLy8uL2FwcC9pbmRleC5zY3NzPzI1ZTgiLCJ3ZWJwYWNrOi8vLy4vYXBwL2luZGV4LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXBwL3ByZXNlbnRlcnMvaWNvbi50c3giLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbnRhaW5lcnMvY29tbW9uX2ZyYW1lL2NvbW1vbl9mcmFtZV9tZW51X2l0ZW0udHN4Iiwid2VicGFjazovLy8uL2FwcC9jb250YWluZXJzL2Fic3RyYWN0X2NvbnRhaW5lci50c3giLCJ3ZWJwYWNrOi8vLy4vYXBwL3ByZXNlbnRlcnMvdGV4dF9hcmVhLnRzeCIsIndlYnBhY2s6Ly8vLi9hcHAvY29tbW9uL3N0b3JhZ2UudHMiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbnRhaW5lcnMvbGFib3JhdG9yeS9xcl9jb2RlL2luZGV4LnRzeCIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL2NhY2hlL2luZGV4LnRzeCIsIndlYnBhY2s6Ly8vLi9hcHAvcHJlc2VudGVycy9idXR0b24udHN4Iiwid2VicGFjazovLy8uL2FwcC9wcmVzZW50ZXJzL3RleHRfaW5wdXQudHN4Iiwid2VicGFjazovLy8uL2FwcC9jb250YWluZXJzL2xhYm9yYXRvcnkvc2VydmljZV93b3JrZXIvcHVzaC9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbnRhaW5lcnMvbGFib3JhdG9yeS9zZXJ2aWNlX3dvcmtlci9iYWNrZ3JvdW5kX3N5bmMvaW5kZXgudHN4Iiwid2VicGFjazovLy8uL2FwcC9yb3V0ZXMudHN4Iiwid2VicGFjazovLy8uL2FwcC9jb250YWluZXJzL2Fib3V0L2luZGV4LnRzeCIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L2luZGV4LnRzeCIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL2luZGV4LnRzeCIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9jb21tb25fZnJhbWUvY29tbW9uX2ZyYW1lLnRzeCIsIndlYnBhY2s6Ly8vLi9hcHAvaW5kZXgudHMiXSwibmFtZXMiOlsid2VicGFja0pzb25wQ2FsbGJhY2siLCJkYXRhIiwibW9kdWxlSWQiLCJjaHVua0lkIiwiY2h1bmtJZHMiLCJtb3JlTW9kdWxlcyIsImV4ZWN1dGVNb2R1bGVzIiwiaSIsInJlc29sdmVzIiwibGVuZ3RoIiwiaW5zdGFsbGVkQ2h1bmtzIiwicHVzaCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm1vZHVsZXMiLCJwYXJlbnRKc29ucEZ1bmN0aW9uIiwic2hpZnQiLCJkZWZlcnJlZE1vZHVsZXMiLCJhcHBseSIsImNoZWNrRGVmZXJyZWRNb2R1bGVzIiwicmVzdWx0IiwiZGVmZXJyZWRNb2R1bGUiLCJmdWxmaWxsZWQiLCJqIiwiZGVwSWQiLCJzcGxpY2UiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwicyIsImluc3RhbGxlZE1vZHVsZXMiLCIwIiwiZXhwb3J0cyIsIm1vZHVsZSIsImwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicCIsImpzb25wQXJyYXkiLCJ3aW5kb3ciLCJvbGRKc29ucEZ1bmN0aW9uIiwic2xpY2UiLCJjb250ZW50Iiwib3B0aW9ucyIsImhtciIsInRyYW5zZm9ybSIsImluc2VydEludG8iLCJ1bmRlZmluZWQiLCJsb2NhbHMiLCJ2ZXJzaW9uIiwic291cmNlcyIsIm5hbWVzIiwibWFwcGluZ3MiLCJmaWxlIiwic291cmNlc0NvbnRlbnQiLCJzb3VyY2VSb290IiwiZm9udGF3ZXNvbWVfc3ZnX2NvcmVfaW5kZXhfZXMiLCJhZGQiLCJmcmVlX3NvbGlkX3N2Z19pY29uc19pbmRleF9lcyIsIkNsb3NlSWNvbiIsInJlYWN0IiwiaW5kZXhfZXMiLCJpY29uIiwiTWVudUljb24iLCJFbnZlbG9wZUljb24iLCJmcmVlX2JyYW5kc19zdmdfaWNvbnNfaW5kZXhfZXMiLCJUd2l0dGVySWNvbiIsIkdpdEh1Ykljb24iLCJDb21tb25GcmFtZU1lbnVJdGVtIiwicHJvcHMiLCJsZXZlbCIsInNlbGVjdGVkIiwicGF0aCIsInRpdGxlSnAiLCJ0aXRsZUVuIiwiY2xhc3NOYW1lIiwiTGluayIsInRvIiwiYWJzdHJhY3RfY29udGFpbmVyX0Fic3RyYWN0Q29udGFpbmVyIiwiW29iamVjdCBPYmplY3RdIiwic3RhdGUiLCJjYWxsYmFjayIsImNvbnNvbGUiLCJsb2ciLCJzdXBlciIsInNldFN0YXRlIiwidGV4dF9hcmVhX1RleHRBcmVhIiwiY2hpbGRyZW4iLCJsYWJlbCIsIm9uQ2hhbmdlIiwidGhpcyIsImV2ZW50IiwidGFyZ2V0IiwiZGVmYXVsdFByb3BzIiwibG9jYWxTdG9yYWdlIiwiU3RvcmFnZSIsImdldEl0ZW0iLCJzZXQiLCJzZXRJdGVtIiwicmVtb3ZlIiwicmVtb3ZlSXRlbSIsIlN0b3JhZ2VLZXkiLCJzdXBwb3J0U2VydmljZVdvcmtlciIsIm5hdmlnYXRvciIsImJ1dHRvbl9CdXR0b24iLCJhY3RpdmUiLCJvbkNsaWNrIiwiVGV4dElucHV0IiwibWF4TGVuZ3RoIiwib25DaGFuZ2VUZXh0IiwicGFzc3dvcmQiLCJwbGFjZUhvbGRlciIsInBsYWNlaG9sZGVyIiwidHlwZSIsInN1cHBvcnRQdXNoTm90aWZpY2F0aW9uIiwic2VydmljZVdvcmtlciIsInVybEI2NFRvVWludDhBcnJheSIsImJhc2U2NFN0cmluZyIsImJhc2U2NCIsInJlcGVhdCIsInJlcGxhY2UiLCJyYXdEYXRhIiwiYXRvYiIsIm91dHB1dEFycmF5IiwiVWludDhBcnJheSIsImNoYXJDb2RlQXQiLCJiYWNrZ3JvdW5kX3N5bmNfc2VydmljZVdvcmtlciIsImluZGV4ZWREYiIsImluZGV4ZWREQiIsIlZpZXdzIiwiY29tcG9uZW50IiwiaHJlZiIsIlNlcnZpY2VXb3JrZXJQYXRoIiwiaWQiLCJRckNvZGVQYXRoIiwiU2VydmljZVdvcmtlckNhY2hlUGF0aCIsIlNlcnZpY2VXb3JrZXJQdXNoUGF0aCIsIlNlcnZpY2VXb3JrZXJTeW5jUGF0aCIsInB1YmxpY0tleSIsInN1YnNjcmlwdGlvbkluZm8iLCJyZXF1ZXN0UHVzaE5vdGlmaWNhdGlvbiIsIl9fYXdhaXRlciIsInN3UmVnaXN0cmF0aW9uIiwicmVnaXN0ZXIiLCJhcHBsaWNhdGlvblNlcnZlcktleSIsInB1c2hNYW5hZ2VyIiwiZ2V0U3Vic2NyaXB0aW9uIiwicGFyYW1zIiwidXNlclZpc2libGVPbmx5Iiwic3Vic2NyaWJlIiwidGhlbiIsInN1YnNjcmlwdGlvbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJlcnJvciIsImlucHV0VmFsdWUiLCJpbnRlcnZhbElkIiwiZGIiLCJzeW5jTGlzdCIsInJlbG9hZFN5bmNMaXN0IiwiYmFja2dyb3VuZF9zeW5jX2F3YWl0ZXIiLCJiYWNrZ3JvdW5kU3luY1Rlc3QiLCJ0cmFuc2FjdGlvbiIsIm9uZXJyb3IiLCJyZXF1ZXN0Iiwib2JqZWN0U3RvcmUiLCJib2R5Iiwib25zdWNjZXNzIiwidGFnIiwicmVhZHkiLCJzeW5jIiwiZGJPZXBuUmVxdWVzdCIsIm9wZW4iLCJvbnVwZ3JhZGVuZWVkZWQiLCJzdG9yZSIsImNyZWF0ZU9iamVjdFN0b3JlIiwia2V5UGF0aCIsImF1dG9JbmNyZW1lbnQiLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJtYXAiLCJzeW5jRGF0YSIsImNyZWF0ZWRBdCIsInFySW1hZ2UiLCJxclRleHQiLCJicm93c2VyIiwiY2F0Y2giLCJsb2NhdGlvbiIsInNyYyIsImFsdCIsInJvdXRlc19tZW51TGlzdCIsInZpZXciLCJSb3V0ZXMiLCJIYXNoUm91dGVyIiwic2hvd01lbnUiLCJtZW51TGlzdCIsImN1cnJlbnRQYXRoIiwiaGFzaCIsInN1YnN0ciIsIm1lbnUiLCJSb3V0ZSIsImV4YWN0Iiwic3RyaWN0IiwiZXh0cmFjdFBhdGgiLCJmaW5kIiwiRXJyb3IiLCJyZWdpc3RyYXRpb24iLCJzY29wZSIsInJlYWN0X2RvbSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiXSwibWFwcGluZ3MiOiJhQUNBLFNBQUFBLEVBQUFDLEdBUUEsSUFQQSxJQU1BQyxFQUFBQyxFQU5BQyxFQUFBSCxFQUFBLEdBQ0FJLEVBQUFKLEVBQUEsR0FDQUssRUFBQUwsRUFBQSxHQUlBTSxFQUFBLEVBQUFDLEtBQ1FELEVB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LE9BQU8sVUFFUGhDLEVBQUEsY0FBQ00sRUFBVyxPQUVkTixFQUFBLG1CQUNFdUUsS0FBSywrQkFDTHZDLE9BQU8sVUFFUGhDLEVBQUEsY0FBQ08sRUFBVSxRQUdmUCxFQUFBLHFCQUFLZSxVQUFVLGlCQUFlLDJCSkx2QndILFNBQVVMLEdBQ3BCN0QsRUFBTW1ELElBQUtXLEdBQ1ZuSSxFQUFBLGNBQUM0SSxFQUFBLEdBQ0N0RSxVQUFXNkQsRUFBSzdELFVBQ2hCdUUsT0FBSyxFQUNMekssSUFBSytKLEVBQUt2SCxLQUNWQSxLQUFNdUgsRUFBS3ZILEtBQ1hrSSxRQUFNLE9BT1ZDLEVBQWUzSyxJQUNuQixNQUFNK0osRUFBTzlELEVBQU0yRSxLQUFNYixHQUFTQSxFQUFLL0osTUFBUUEsR0FDL0MsR0FBWSxNQUFSK0osRUFDRixNQUFNLElBQUljLG9CQUFvQjdLLEtBRWhDLFNBQVUrSixFQUFLdkgsUUFFWDRELEVBQTRCdUUsRUFBWSxrQkFDeENwRSxFQUFpQ29FLEVBQVksd0JBQzdDbkUsRUFBZ0NtRSxFQUFZLHVCQUM1Q2xFLEVBQWdDa0UsRUFBWSx1QkFDNUNyRSxFQUFxQnFFLEVBQVksaUJLOUduQyxrQkFBbUJwRyxXQUNyQkEsVUFDR1ksY0FDQTRCLFNBQVMsc0JBQ1RPLEtBQU13RCxHQUFzQjVILFFBQVFDLElBQUksdUJBQXdCMkgsRUFBYUMsUUFDN0VyQixNQUFPaEMsR0FBZXhFLFFBQVFDLElBQUksc0NBQXVDdUUsSUFHOUVuSyxPQUFBeU4sRUFBQSxPQUFBek4sQ0FBT3lNLEVBQVFpQixTQUFTQyxlQUFlIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG4gXHRmdW5jdGlvbiB3ZWJwYWNrSnNvbnBDYWxsYmFjayhkYXRhKSB7XG4gXHRcdHZhciBjaHVua0lkcyA9IGRhdGFbMF07XG4gXHRcdHZhciBtb3JlTW9kdWxlcyA9IGRhdGFbMV07XG4gXHRcdHZhciBleGVjdXRlTW9kdWxlcyA9IGRhdGFbMl07XG5cbiBcdFx0Ly8gYWRkIFwibW9yZU1vZHVsZXNcIiB0byB0aGUgbW9kdWxlcyBvYmplY3QsXG4gXHRcdC8vIHRoZW4gZmxhZyBhbGwgXCJjaHVua0lkc1wiIGFzIGxvYWRlZCBhbmQgZmlyZSBjYWxsYmFja1xuIFx0XHR2YXIgbW9kdWxlSWQsIGNodW5rSWQsIGkgPSAwLCByZXNvbHZlcyA9IFtdO1xuIFx0XHRmb3IoO2kgPCBjaHVua0lkcy5sZW5ndGg7IGkrKykge1xuIFx0XHRcdGNodW5rSWQgPSBjaHVua0lkc1tpXTtcbiBcdFx0XHRpZihpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0pIHtcbiBcdFx0XHRcdHJlc29sdmVzLnB1c2goaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdWzBdKTtcbiBcdFx0XHR9XG4gXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gMDtcbiBcdFx0fVxuIFx0XHRmb3IobW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuIFx0XHRcdFx0bW9kdWxlc1ttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdFx0fVxuIFx0XHR9XG4gXHRcdGlmKHBhcmVudEpzb25wRnVuY3Rpb24pIHBhcmVudEpzb25wRnVuY3Rpb24oZGF0YSk7XG5cbiBcdFx0d2hpbGUocmVzb2x2ZXMubGVuZ3RoKSB7XG4gXHRcdFx0cmVzb2x2ZXMuc2hpZnQoKSgpO1xuIFx0XHR9XG5cbiBcdFx0Ly8gYWRkIGVudHJ5IG1vZHVsZXMgZnJvbSBsb2FkZWQgY2h1bmsgdG8gZGVmZXJyZWQgbGlzdFxuIFx0XHRkZWZlcnJlZE1vZHVsZXMucHVzaC5hcHBseShkZWZlcnJlZE1vZHVsZXMsIGV4ZWN1dGVNb2R1bGVzIHx8IFtdKTtcblxuIFx0XHQvLyBydW4gZGVmZXJyZWQgbW9kdWxlcyB3aGVuIGFsbCBjaHVua3MgcmVhZHlcbiBcdFx0cmV0dXJuIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCk7XG4gXHR9O1xuIFx0ZnVuY3Rpb24gY2hlY2tEZWZlcnJlZE1vZHVsZXMoKSB7XG4gXHRcdHZhciByZXN1bHQ7XG4gXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBkZWZlcnJlZE1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHR2YXIgZGVmZXJyZWRNb2R1bGUgPSBkZWZlcnJlZE1vZHVsZXNbaV07XG4gXHRcdFx0dmFyIGZ1bGZpbGxlZCA9IHRydWU7XG4gXHRcdFx0Zm9yKHZhciBqID0gMTsgaiA8IGRlZmVycmVkTW9kdWxlLmxlbmd0aDsgaisrKSB7XG4gXHRcdFx0XHR2YXIgZGVwSWQgPSBkZWZlcnJlZE1vZHVsZVtqXTtcbiBcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rc1tkZXBJZF0gIT09IDApIGZ1bGZpbGxlZCA9IGZhbHNlO1xuIFx0XHRcdH1cbiBcdFx0XHRpZihmdWxmaWxsZWQpIHtcbiBcdFx0XHRcdGRlZmVycmVkTW9kdWxlcy5zcGxpY2UoaS0tLCAxKTtcbiBcdFx0XHRcdHJlc3VsdCA9IF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gZGVmZXJyZWRNb2R1bGVbMF0pO1xuIFx0XHRcdH1cbiBcdFx0fVxuIFx0XHRyZXR1cm4gcmVzdWx0O1xuIFx0fVxuXG4gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuIFx0Ly8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4gXHQvLyBQcm9taXNlID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxuIFx0dmFyIGluc3RhbGxlZENodW5rcyA9IHtcbiBcdFx0MDogMFxuIFx0fTtcblxuIFx0dmFyIGRlZmVycmVkTW9kdWxlcyA9IFtdO1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHR2YXIganNvbnBBcnJheSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSB8fCBbXTtcbiBcdHZhciBvbGRKc29ucEZ1bmN0aW9uID0ganNvbnBBcnJheS5wdXNoLmJpbmQoanNvbnBBcnJheSk7XG4gXHRqc29ucEFycmF5LnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjaztcbiBcdGpzb25wQXJyYXkgPSBqc29ucEFycmF5LnNsaWNlKCk7XG4gXHRmb3IodmFyIGkgPSAwOyBpIDwganNvbnBBcnJheS5sZW5ndGg7IGkrKykgd2VicGFja0pzb25wQ2FsbGJhY2soanNvbnBBcnJheVtpXSk7XG4gXHR2YXIgcGFyZW50SnNvbnBGdW5jdGlvbiA9IG9sZEpzb25wRnVuY3Rpb247XG5cblxuIFx0Ly8gYWRkIGVudHJ5IG1vZHVsZSB0byBkZWZlcnJlZCBsaXN0XG4gXHRkZWZlcnJlZE1vZHVsZXMucHVzaChbODksMV0pO1xuIFx0Ly8gcnVuIGRlZmVycmVkIG1vZHVsZXMgd2hlbiByZWFkeVxuIFx0cmV0dXJuIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL2NvbW1vbl9mcmFtZV9tZW51X2l0ZW0uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL2NvbW1vbl9mcmFtZV9tZW51X2l0ZW0uc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9jb21tb25fZnJhbWVfbWVudV9pdGVtLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNvbW1vbi1mcmFtZS1tZW51LWl0ZW0gLm1lbnUtYnV0dG9uIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgcGFkZGluZzogNnB4IDE2cHg7XFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cXG4gIC5jb21tb24tZnJhbWUtbWVudS1pdGVtIC5tZW51LWJ1dHRvbi5sZXZlbDEgLnRpdGxlLWpwLCAuY29tbW9uLWZyYW1lLW1lbnUtaXRlbSAubWVudS1idXR0b24ubGV2ZWwxIC50aXRsZS1lbiwgLmNvbW1vbi1mcmFtZS1tZW51LWl0ZW0gLm1lbnUtYnV0dG9uLmxldmVsMiAudGl0bGUtanAsIC5jb21tb24tZnJhbWUtbWVudS1pdGVtIC5tZW51LWJ1dHRvbi5sZXZlbDIgLnRpdGxlLWVuLCAuY29tbW9uLWZyYW1lLW1lbnUtaXRlbSAubWVudS1idXR0b24ubGV2ZWwzIC50aXRsZS1qcCwgLmNvbW1vbi1mcmFtZS1tZW51LWl0ZW0gLm1lbnUtYnV0dG9uLmxldmVsMyAudGl0bGUtZW4ge1xcbiAgICBsaW5lLWhlaWdodDogY2FsYygxZW0gKyAycHgpOyB9XFxuICAuY29tbW9uLWZyYW1lLW1lbnUtaXRlbSAubWVudS1idXR0b24gLnRpdGxlLWVuIHtcXG4gICAgY29sb3I6ICM4ODg7IH1cXG4gIC5jb21tb24tZnJhbWUtbWVudS1pdGVtIC5tZW51LWJ1dHRvbi5sZXZlbDEge1xcbiAgICBwYWRkaW5nLWxlZnQ6IDhweDsgfVxcbiAgICAuY29tbW9uLWZyYW1lLW1lbnUtaXRlbSAubWVudS1idXR0b24ubGV2ZWwxIC50aXRsZS1qcCB7XFxuICAgICAgZm9udC1zaXplOiAyMHB4OyB9XFxuICAgIC5jb21tb24tZnJhbWUtbWVudS1pdGVtIC5tZW51LWJ1dHRvbi5sZXZlbDEgLnRpdGxlLWVuIHtcXG4gICAgICBmb250LXNpemU6IDE0cHg7IH1cXG4gIC5jb21tb24tZnJhbWUtbWVudS1pdGVtIC5tZW51LWJ1dHRvbi5sZXZlbDIge1xcbiAgICBwYWRkaW5nLWxlZnQ6IDI0cHg7IH1cXG4gICAgLmNvbW1vbi1mcmFtZS1tZW51LWl0ZW0gLm1lbnUtYnV0dG9uLmxldmVsMiAudGl0bGUtanAge1xcbiAgICAgIGZvbnQtc2l6ZTogMThweDsgfVxcbiAgICAuY29tbW9uLWZyYW1lLW1lbnUtaXRlbSAubWVudS1idXR0b24ubGV2ZWwyIC50aXRsZS1lbiB7XFxuICAgICAgZm9udC1zaXplOiAxMnB4OyB9XFxuICAuY29tbW9uLWZyYW1lLW1lbnUtaXRlbSAubWVudS1idXR0b24ubGV2ZWwzIHtcXG4gICAgcGFkZGluZy1sZWZ0OiA0MnB4OyB9XFxuICAgIC5jb21tb24tZnJhbWUtbWVudS1pdGVtIC5tZW51LWJ1dHRvbi5sZXZlbDMgLnRpdGxlLWpwIHtcXG4gICAgICBmb250LXNpemU6IDE2cHg7IH1cXG4gICAgLmNvbW1vbi1mcmFtZS1tZW51LWl0ZW0gLm1lbnUtYnV0dG9uLmxldmVsMyAudGl0bGUtZW4ge1xcbiAgICAgIGZvbnQtc2l6ZTogMTBweDsgfVxcbiAgLmNvbW1vbi1mcmFtZS1tZW51LWl0ZW0gLm1lbnUtYnV0dG9uLm1hcmtlZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjc3MDE7IH1cXG4gICAgLmNvbW1vbi1mcmFtZS1tZW51LWl0ZW0gLm1lbnUtYnV0dG9uLm1hcmtlZCAudGl0bGUtanAge1xcbiAgICAgIGNvbG9yOiAjZmZmOyB9XFxuICAgIC5jb21tb24tZnJhbWUtbWVudS1pdGVtIC5tZW51LWJ1dHRvbi5tYXJrZWQgLnRpdGxlLWVuIHtcXG4gICAgICBjb2xvcjogI2ZmZjsgfVxcblwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCIvVXNlcnMvaWgtcHBjNjQvcHJvamVjdHMvZ2l0aHViX2lvL3NyYy9hcHAvY29udGFpbmVycy9jb21tb25fZnJhbWUvYXBwL2NvbnRhaW5lcnMvY29tbW9uX2ZyYW1lL2NvbW1vbl9mcmFtZV9tZW51X2l0ZW0uc2Nzc1wiLFwiL1VzZXJzL2loLXBwYzY0L3Byb2plY3RzL2dpdGh1Yl9pby9zcmMvYXBwL2NvbnRhaW5lcnMvY29tbW9uX2ZyYW1lL2FwcC9jb21tb24vY29sb3JzLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUE7RUFFSSxlQUFjO0VBQ2Qsa0JBQWlCO0VBQ2pCLHNCQUFxQixFQStEdEI7RUFuRUg7SUFPTSw2QkFBNEIsRUFDN0I7RUFSTDtJQVdNLFlDVkssRURXTjtFQVpMO0lBZU0sa0JBQWlCLEVBV2xCO0lBMUJMO01BbUJRLGdCQUFlLEVBQ2hCO0lBcEJQO01Bd0JRLGdCQUFlLEVBQ2hCO0VBekJQO0lBNkJNLG1CQUFrQixFQVduQjtJQXhDTDtNQWlDUSxnQkFBZSxFQUNoQjtJQWxDUDtNQXNDUSxnQkFBZSxFQUNoQjtFQXZDUDtJQTJDTSxtQkFBa0IsRUFXbkI7SUF0REw7TUErQ1EsZ0JBQWUsRUFDaEI7SUFoRFA7TUFvRFEsZ0JBQWUsRUFDaEI7RUFyRFA7SUF5RE0sMEJDdERVLEVEK0RYO0lBbEVMO01BNERRLFlDdkRJLEVEd0RMO0lBN0RQO01BZ0VRLFlDM0RJLEVENERMXCIsXCJmaWxlXCI6XCJjb21tb25fZnJhbWVfbWVudV9pdGVtLnNjc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCAnLi4vLi4vY29tbW9uL2NvbG9ycyc7XFxuXFxuLmNvbW1vbi1mcmFtZS1tZW51LWl0ZW0ge1xcbiAgLm1lbnUtYnV0dG9uIHtcXG4gICAgZGlzcGxheTogYmxvY2s7XFxuICAgIHBhZGRpbmc6IDZweCAxNnB4O1xcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuXFxuICAgICV0aXRsZS1saW5lLWhlaWdodCB7XFxuICAgICAgbGluZS1oZWlnaHQ6IGNhbGMoMWVtICsgMnB4KTtcXG4gICAgfVxcblxcbiAgICAudGl0bGUtZW4ge1xcbiAgICAgIGNvbG9yOiAkZ3JheTtcXG4gICAgfVxcblxcbiAgICAmLmxldmVsMSB7XFxuICAgICAgcGFkZGluZy1sZWZ0OiA4cHg7XFxuXFxuICAgICAgLnRpdGxlLWpwIHtcXG4gICAgICAgIEBleHRlbmQgJXRpdGxlLWxpbmUtaGVpZ2h0O1xcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xcbiAgICAgIH1cXG5cXG4gICAgICAudGl0bGUtZW4ge1xcbiAgICAgICAgQGV4dGVuZCAldGl0bGUtbGluZS1oZWlnaHQ7XFxuICAgICAgICBmb250LXNpemU6IDE0cHg7XFxuICAgICAgfVxcbiAgICB9XFxuXFxuICAgICYubGV2ZWwyIHtcXG4gICAgICBwYWRkaW5nLWxlZnQ6IDI0cHg7XFxuXFxuICAgICAgLnRpdGxlLWpwIHtcXG4gICAgICAgIEBleHRlbmQgJXRpdGxlLWxpbmUtaGVpZ2h0O1xcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xcbiAgICAgIH1cXG5cXG4gICAgICAudGl0bGUtZW4ge1xcbiAgICAgICAgQGV4dGVuZCAldGl0bGUtbGluZS1oZWlnaHQ7XFxuICAgICAgICBmb250LXNpemU6IDEycHg7XFxuICAgICAgfVxcbiAgICB9XFxuXFxuICAgICYubGV2ZWwzIHtcXG4gICAgICBwYWRkaW5nLWxlZnQ6IDQycHg7XFxuXFxuICAgICAgLnRpdGxlLWpwIHtcXG4gICAgICAgIEBleHRlbmQgJXRpdGxlLWxpbmUtaGVpZ2h0O1xcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xcbiAgICAgIH1cXG5cXG4gICAgICAudGl0bGUtZW4ge1xcbiAgICAgICAgQGV4dGVuZCAldGl0bGUtbGluZS1oZWlnaHQ7XFxuICAgICAgICBmb250LXNpemU6IDEwcHg7XFxuICAgICAgfVxcbiAgICB9XFxuXFxuICAgICYubWFya2VkIHtcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkb3JhbmdlO1xcblxcbiAgICAgIC50aXRsZS1qcCB7XFxuICAgICAgICBjb2xvcjogJHdoaXRlO1xcbiAgICAgIH1cXG5cXG4gICAgICAudGl0bGUtZW4ge1xcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcXG4gICAgICB9XFxuICAgIH1cXG4gIH1cXG59XCIsXCIkYmxhY2s6ICMwMDA7XFxuJGdyYXktZGFyazogIzMzMztcXG4kZ3JheS1saWdodDogI2NjYztcXG4kZ3JheTogIzg4ODtcXG4kZ3JlZW46ICMwMDkwNTA7XFxuJG9yYW5nZTogI2ZmNzcwMTtcXG4kc2lsdmVyOiAjZWVlO1xcbiR3aGl0ZTogI2ZmZjtcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcblxuLy8gZXhwb3J0c1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9jb21tb25fZnJhbWUuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL2NvbW1vbl9mcmFtZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL2NvbW1vbl9mcmFtZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSh0cnVlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIiNjb21tb24tZnJhbWUge1xcbiAgYm90dG9tOiAwO1xcbiAgbGVmdDogMDtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHJpZ2h0OiAwO1xcbiAgdG9wOiAwOyB9XFxuICAjY29tbW9uLWZyYW1lIC5jb21tb24tZnJhbWUtaGVhZGVyLW1lbnUtYnV0dG9uIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgICBib3gtc2hhZG93OiAtOHB4IDhweCA4cHggMCAjZmZmO1xcbiAgICBoZWlnaHQ6IDI4cHg7XFxuICAgIHBhZGRpbmc6IDhweCAxMnB4IDAgMDtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICByaWdodDogMDtcXG4gICAgdG9wOiAwOyB9XFxuICAgICNjb21tb24tZnJhbWUgLmNvbW1vbi1mcmFtZS1oZWFkZXItbWVudS1idXR0b24gc3BhbiB7XFxuICAgICAgbWFyZ2luLWxlZnQ6IDRweDsgfVxcbiAgI2NvbW1vbi1mcmFtZSAjY29tbW9uLWZyYW1lLW1lbnUge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICM4ODg7XFxuICAgIGJvdHRvbTogMzJweDtcXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcXG4gICAgb3BhY2l0eTogMC45NTtcXG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xcbiAgICBwYWRkaW5nOiA0MnB4IDE2cHggOHB4IDE2cHg7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgcmlnaHQ6IDA7XFxuICAgIHRvcDogMDtcXG4gICAgd2lkdGg6IDEwMCU7IH1cXG4gICAgI2NvbW1vbi1mcmFtZSAjY29tbW9uLWZyYW1lLW1lbnUgPiBhIHtcXG4gICAgICBkaXNwbGF5OiBibG9jaztcXG4gICAgICBwYWRkaW5nOiA0cHggOHB4OyB9XFxuICAgICAgI2NvbW1vbi1mcmFtZSAjY29tbW9uLWZyYW1lLW1lbnUgPiBhLmxldmVsMSB7XFxuICAgICAgICBmb250LXNpemU6IDE2cHg7XFxuICAgICAgICBtYXJnaW4tdG9wOiA4cHg7IH1cXG4gICAgICAjY29tbW9uLWZyYW1lICNjb21tb24tZnJhbWUtbWVudSA+IGEubGV2ZWwyIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcXG4gICAgICAgIHBhZGRpbmctbGVmdDogMjRweDsgfVxcbiAgICAgICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1tZW51ID4gYS5tYXJrZWQge1xcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNzcwMTtcXG4gICAgICAgIGJvcmRlci13aWR0aDogMDtcXG4gICAgICAgIGNvbG9yOiAjZmZmOyB9XFxuICAjY29tbW9uLWZyYW1lICNjb21tb24tZnJhbWUtY29udGVudCB7XFxuICAgIGJvdHRvbTogNDhweDtcXG4gICAgbGVmdDogMDtcXG4gICAgcGFkZGluZzogMjRweCAxNnB4IDE2cHggMTZweDtcXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgcmlnaHQ6IDA7XFxuICAgIHRvcDogMDsgfVxcbiAgICAjY29tbW9uLWZyYW1lICNjb21tb24tZnJhbWUtY29udGVudCAjY29tbW9uLWZyYW1lLWNvbnRlbnQtaW5uZXIge1xcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcXG4gICAgICBtYXgtd2lkdGg6IDUwZW07XFxuICAgICAgd2lkdGg6IDEwMCU7IH1cXG4gICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1mb290ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xcbiAgICBib3R0b206IDA7XFxuICAgIGhlaWdodDogNDhweDtcXG4gICAgbGVmdDogMDtcXG4gICAgcGFkZGluZzogMCAxNnB4O1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHJpZ2h0OiAwOyB9XFxuICAgICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1mb290ZXIgLmxlZnQtY29udGVudCB7XFxuICAgICAgZmxvYXQ6IGxlZnQ7IH1cXG4gICAgICAjY29tbW9uLWZyYW1lICNjb21tb24tZnJhbWUtZm9vdGVyIC5sZWZ0LWNvbnRlbnQgYSB7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgICAgICAgY29sb3I6ICNmZmY7XFxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAgICAgICBmb250LXNpemU6IDIycHg7XFxuICAgICAgICBoZWlnaHQ6IDMycHg7XFxuICAgICAgICBsaW5lLWhlaWdodDogMzJweDtcXG4gICAgICAgIG1hcmdpbjogOHB4IDhweCA4cHggMDtcXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgICAgIHdpZHRoOiAzMnB4OyB9XFxuICAgICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1mb290ZXIgLnJpZ2h0LWNvbnRlbnQge1xcbiAgICAgIGZsb2F0OiByaWdodDtcXG4gICAgICBmb250LXNpemU6IDEycHg7XFxuICAgICAgY29sb3I6ICNmZmY7XFxuICAgICAgbGluZS1oZWlnaHQ6IDQ4cHg7IH1cXG5cIiwgXCJcIiwge1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiL1VzZXJzL2loLXBwYzY0L3Byb2plY3RzL2dpdGh1Yl9pby9zcmMvYXBwL2NvbnRhaW5lcnMvY29tbW9uX2ZyYW1lL2FwcC9jb250YWluZXJzL2NvbW1vbl9mcmFtZS9jb21tb25fZnJhbWUuc2Nzc1wiLFwiL1VzZXJzL2loLXBwYzY0L3Byb2plY3RzL2dpdGh1Yl9pby9zcmMvYXBwL2NvbnRhaW5lcnMvY29tbW9uX2ZyYW1lL2FwcC9jb21tb24vY29sb3JzLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUE7RUFDRSxVQUFTO0VBQ1QsUUFBTztFQUNQLGdCQUFlO0VBQ2YsU0FBUTtFQUNSLE9BQU0sRUF1R1A7RUE1R0Q7SUFRSSx1QkNIUTtJRElSLG1CQUFrQjtJQUNsQixnQ0NMUTtJRE1SLGFBQVk7SUFDWixzQkFBcUI7SUFDckIsbUJBQWtCO0lBQ2xCLFNBQVE7SUFDUixPQUFNLEVBS1A7SUFwQkg7TUFrQk0saUJBQWdCLEVBQ2pCO0VBbkJMO0lBdUJJLHVCQ2xCUTtJRG1CUiw0QkN2Qk87SUR3QlAsYUFBWTtJQUNaLGlCQUFnQjtJQUNoQixjQUFhO0lBQ2IsbUJBQWtCO0lBQ2xCLDRCQUEyQjtJQUMzQixtQkFBa0I7SUFDbEIsU0FBUTtJQUNSLE9BQU07SUFDTixZQUFXLEVBc0JaO0lBdkRIO01Bb0NNLGVBQWM7TUFDZCxpQkFBZ0IsRUFpQmpCO01BdERMO1FBd0NRLGdCQUFlO1FBQ2YsZ0JBQWUsRUFDaEI7TUExQ1A7UUE2Q1EsZ0JBQWU7UUFDZixtQkFBa0IsRUFDbkI7TUEvQ1A7UUFrRFEsMEJDL0NRO1FEZ0RSLGdCQUFlO1FBQ2YsWUMvQ0ksRURnREw7RUFyRFA7SUEwREksYUFBWTtJQUNaLFFBQU87SUFDUCw2QkFBNEI7SUFDNUIsbUJBQWtCO0lBQ2xCLG1CQUFrQjtJQUNsQixtQkFBa0I7SUFDbEIsU0FBUTtJQUNSLE9BQU0sRUFRUDtJQXpFSDtNQW9FTSxlQUFjO01BQ2QsZ0JBQWU7TUFDZixnQkFBZTtNQUNmLFlBQVcsRUFDWjtFQXhFTDtJQTRFSSx1QkM3RVk7SUQ4RVosVUFBUztJQUNULGFBQVk7SUFDWixRQUFPO0lBQ1AsZ0JBQWU7SUFDZixtQkFBa0I7SUFDbEIsU0FBUSxFQXlCVDtJQTNHSDtNQXFGTSxZQUFXLEVBY1o7TUFuR0w7UUF3RlEsdUJDbkZJO1FEb0ZKLG1CQUFrQjtRQUNsQixZQ3JGSTtRRHNGSixzQkFBcUI7UUFDckIsZ0JBQWU7UUFDZixhQUFZO1FBQ1osa0JBQWlCO1FBQ2pCLHNCQUFxQjtRQUNyQixtQkFBa0I7UUFDbEIsWUFBVyxFQUNaO0lBbEdQO01Bc0dNLGFBQVk7TUFDWixnQkFBZTtNQUNmLFlDbkdNO01Eb0dOLGtCQUFpQixFQUNsQlwiLFwiZmlsZVwiOlwiY29tbW9uX2ZyYW1lLnNjc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCAnLi4vLi4vY29tbW9uL2NvbG9ycyc7XFxuXFxuI2NvbW1vbi1mcmFtZSB7XFxuICBib3R0b206IDA7XFxuICBsZWZ0OiAwO1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgcmlnaHQ6IDA7XFxuICB0b3A6IDA7XFxuXFxuICAuY29tbW9uLWZyYW1lLWhlYWRlci1tZW51LWJ1dHRvbiB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgICBib3gtc2hhZG93OiAtOHB4IDhweCA4cHggMCAkd2hpdGU7XFxuICAgIGhlaWdodDogMjhweDtcXG4gICAgcGFkZGluZzogOHB4IDEycHggMCAwO1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICB0b3A6IDA7XFxuXFxuICAgIHNwYW4ge1xcbiAgICAgIG1hcmdpbi1sZWZ0OiA0cHg7XFxuICAgIH1cXG4gIH1cXG5cXG4gICNjb21tb24tZnJhbWUtbWVudSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcXG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkZ3JheTtcXG4gICAgYm90dG9tOiAzMnB4O1xcbiAgICBtYXgtd2lkdGg6IDMyMHB4O1xcbiAgICBvcGFjaXR5OiAwLjk1O1xcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XFxuICAgIHBhZGRpbmc6IDQycHggMTZweCA4cHggMTZweDtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICByaWdodDogMDtcXG4gICAgdG9wOiAwO1xcbiAgICB3aWR0aDogMTAwJTtcXG5cXG4gICAgJiA+IGEge1xcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xcbiAgICAgIHBhZGRpbmc6IDRweCA4cHg7XFxuXFxuICAgICAgJi5sZXZlbDEge1xcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xcbiAgICAgICAgbWFyZ2luLXRvcDogOHB4O1xcbiAgICAgIH1cXG5cXG4gICAgICAmLmxldmVsMiB7XFxuICAgICAgICBmb250LXNpemU6IDEycHg7XFxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDI0cHg7XFxuICAgICAgfVxcblxcbiAgICAgICYubWFya2VkIHtcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRvcmFuZ2U7XFxuICAgICAgICBib3JkZXItd2lkdGg6IDA7XFxuICAgICAgICBjb2xvcjogJHdoaXRlO1xcbiAgICAgIH1cXG4gICAgfVxcbiAgfVxcblxcbiAgI2NvbW1vbi1mcmFtZS1jb250ZW50IHtcXG4gICAgYm90dG9tOiA0OHB4O1xcbiAgICBsZWZ0OiAwO1xcbiAgICBwYWRkaW5nOiAyNHB4IDE2cHggMTZweCAxNnB4O1xcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XFxuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICByaWdodDogMDtcXG4gICAgdG9wOiAwO1xcblxcbiAgICAjY29tbW9uLWZyYW1lLWNvbnRlbnQtaW5uZXIge1xcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcXG4gICAgICBtYXgtd2lkdGg6IDUwZW07XFxuICAgICAgd2lkdGg6IDEwMCU7XFxuICAgIH1cXG4gIH1cXG5cXG4gICNjb21tb24tZnJhbWUtZm9vdGVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGdyYXktZGFyaztcXG4gICAgYm90dG9tOiAwO1xcbiAgICBoZWlnaHQ6IDQ4cHg7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHBhZGRpbmc6IDAgMTZweDtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICByaWdodDogMDtcXG5cXG4gICAgLmxlZnQtY29udGVudCB7XFxuICAgICAgZmxvYXQ6IGxlZnQ7XFxuXFxuICAgICAgYSB7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XFxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICAgICAgICBjb2xvcjogJHdoaXRlO1xcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgICAgICAgZm9udC1zaXplOiAyMnB4O1xcbiAgICAgICAgaGVpZ2h0OiAzMnB4O1xcbiAgICAgICAgbGluZS1oZWlnaHQ6IDMycHg7XFxuICAgICAgICBtYXJnaW46IDhweCA4cHggOHB4IDA7XFxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgICAgICB3aWR0aDogMzJweDtcXG4gICAgICB9XFxuICAgIH1cXG5cXG4gICAgLnJpZ2h0LWNvbnRlbnQge1xcbiAgICAgIGZsb2F0OiByaWdodDtcXG4gICAgICBmb250LXNpemU6IDEycHg7XFxuICAgICAgY29sb3I6ICR3aGl0ZTtcXG4gICAgICBsaW5lLWhlaWdodDogNDhweDtcXG4gICAgfVxcbiAgfVxcbn1cXG5cXG5cIixcIiRibGFjazogIzAwMDtcXG4kZ3JheS1kYXJrOiAjMzMzO1xcbiRncmF5LWxpZ2h0OiAjY2NjO1xcbiRncmF5OiAjODg4O1xcbiRncmVlbjogIzAwOTA1MDtcXG4kb3JhbmdlOiAjZmY3NzAxO1xcbiRzaWx2ZXI6ICNlZWU7XFxuJHdoaXRlOiAjZmZmO1xcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJcIixcImZpbGVcIjpcInN0eWxlLnNjc3NcIixcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiI2xhYm9yYXRvcnktY29udGFpbmVyIGgyIHtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxcblwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCIvVXNlcnMvaWgtcHBjNjQvcHJvamVjdHMvZ2l0aHViX2lvL3NyYy9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L2FwcC9jb250YWluZXJzL2xhYm9yYXRvcnkvc3R5bGUuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUVJLG1CQUFrQixFQUNuQlwiLFwiZmlsZVwiOlwic3R5bGUuc2Nzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIjbGFib3JhdG9yeS1jb250YWluZXIge1xcbiAgaDIge1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiI3FyLWNvZGUtY29udGFpbmVyICNxci1jb2RlLWltYWdlLXdyYXBwZXIge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XFxuXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIi9Vc2Vycy9paC1wcGM2NC9wcm9qZWN0cy9naXRodWJfaW8vc3JjL2FwcC9jb250YWluZXJzL2xhYm9yYXRvcnkvcXJfY29kZS9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3FyX2NvZGUvc3R5bGUuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFFQTtFQUVJLG1CQUFrQixFQUNuQlwiLFwiZmlsZVwiOlwic3R5bGUuc2Nzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0ICcuLi8uLi8uLi9jb21tb24vY29sb3JzJztcXG5cXG4jcXItY29kZS1jb250YWluZXIge1xcbiAgI3FyLWNvZGUtaW1hZ2Utd3JhcHBlciB7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG5cbi8vIGV4cG9ydHNcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS0yIS4vdGV4dF9hcmVhLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi90ZXh0X2FyZWEuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi90ZXh0X2FyZWEuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikodHJ1ZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIudGV4dC1hcmVhLXByZXNlbnRlciAudGV4dC1hcmVhLWxhYmVsIHtcXG4gIGhlaWdodDogMjRweDsgfVxcblxcbi50ZXh0LWFyZWEtcHJlc2VudGVyIHRleHRhcmVhIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjODg4O1xcbiAgbWluLWhlaWdodDogY2FsYygxMDAlIC0gMjRweCk7XFxuICBwYWRkaW5nOiA0cHggOHB4O1xcbiAgcmVzaXplOiB2ZXJ0aWNhbDtcXG4gIHdpZHRoOiAxMDAlOyB9XFxuXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIi9Vc2Vycy9paC1wcGM2NC9wcm9qZWN0cy9naXRodWJfaW8vc3JjL2FwcC9wcmVzZW50ZXJzL2FwcC9wcmVzZW50ZXJzL3RleHRfYXJlYS5zY3NzXCIsXCIvVXNlcnMvaWgtcHBjNjQvcHJvamVjdHMvZ2l0aHViX2lvL3NyYy9hcHAvcHJlc2VudGVycy9hcHAvY29tbW9uL2NvbG9ycy5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUVBO0VBRUksYUFBWSxFQUNiOztBQUhIO0VBTUksdUJDRFE7RURFUix1QkNOTztFRE9QLDhCQUE2QjtFQUM3QixpQkFBZ0I7RUFDaEIsaUJBQWdCO0VBQ2hCLFlBQVcsRUFDWlwiLFwiZmlsZVwiOlwidGV4dF9hcmVhLnNjc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCAnLi4vY29tbW9uL2NvbG9ycyc7XFxuXFxuLnRleHQtYXJlYS1wcmVzZW50ZXIge1xcbiAgLnRleHQtYXJlYS1sYWJlbCB7XFxuICAgIGhlaWdodDogMjRweDtcXG4gIH1cXG5cXG4gIHRleHRhcmVhIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheTtcXG4gICAgbWluLWhlaWdodDogY2FsYygxMDAlIC0gMjRweCk7XFxuICAgIHBhZGRpbmc6IDRweCA4cHg7XFxuICAgIHJlc2l6ZTogdmVydGljYWw7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgfVxcbn1cXG5cIixcIiRibGFjazogIzAwMDtcXG4kZ3JheS1kYXJrOiAjMzMzO1xcbiRncmF5LWxpZ2h0OiAjY2NjO1xcbiRncmF5OiAjODg4O1xcbiRncmVlbjogIzAwOTA1MDtcXG4kb3JhbmdlOiAjZmY3NzAxO1xcbiRzaWx2ZXI6ICNlZWU7XFxuJHdoaXRlOiAjZmZmO1xcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJcIixcImZpbGVcIjpcInN0eWxlLnNjc3NcIixcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJcIixcImZpbGVcIjpcInN0eWxlLnNjc3NcIixcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL2J1dHRvbi5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS0yIS4vYnV0dG9uLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS0yIS4vYnV0dG9uLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmJ1dHRvbi1wcmVzZW50ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNzcwMTtcXG4gIGJvcmRlci1yYWRpdXM6IDA7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjZmY3NzAxO1xcbiAgY29sb3I6ICNmZmY7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICBoZWlnaHQ6IDI4cHg7XFxuICBsaW5lLWhlaWdodDogMjhweDtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDAgMTZweDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxcbiAgLmJ1dHRvbi1wcmVzZW50ZXIuZGlzYWJsZSB7XFxuICAgIG9wYWNpdHk6IDAuNTsgfVxcblwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCIvVXNlcnMvaWgtcHBjNjQvcHJvamVjdHMvZ2l0aHViX2lvL3NyYy9hcHAvcHJlc2VudGVycy9hcHAvcHJlc2VudGVycy9idXR0b24uc2Nzc1wiLFwiL1VzZXJzL2loLXBwYzY0L3Byb2plY3RzL2dpdGh1Yl9pby9zcmMvYXBwL3ByZXNlbnRlcnMvYXBwL2NvbW1vbi9jb2xvcnMuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFFQTtFQUNFLDBCQ0VjO0VERGQsaUJBQWdCO0VBQ2hCLDBCQ0FjO0VEQ2QsWUNDVTtFREFWLGdCQUFlO0VBQ2Ysc0JBQXFCO0VBQ3JCLGdCQUFlO0VBQ2YsYUFBWTtFQUNaLGtCQUFpQjtFQUNqQixVQUFTO0VBQ1QsZ0JBQWU7RUFDZixtQkFBa0I7RUFDbEIsbUJBQWtCLEVBS25CO0VBbEJEO0lBZ0JJLGFBQVksRUFDYlwiLFwiZmlsZVwiOlwiYnV0dG9uLnNjc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCAnLi4vY29tbW9uL2NvbG9ycyc7XFxuXFxuLmJ1dHRvbi1wcmVzZW50ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogJG9yYW5nZTtcXG4gIGJvcmRlci1yYWRpdXM6IDA7XFxuICBib3JkZXI6IDFweCBzb2xpZCAkb3JhbmdlO1xcbiAgY29sb3I6ICR3aGl0ZTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGhlaWdodDogMjhweDtcXG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMCAxNnB4O1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcblxcbiAgJi5kaXNhYmxlIHtcXG4gICAgb3BhY2l0eTogMC41O1xcbiAgfVxcbn1cIixcIiRibGFjazogIzAwMDtcXG4kZ3JheS1kYXJrOiAjMzMzO1xcbiRncmF5LWxpZ2h0OiAjY2NjO1xcbiRncmF5OiAjODg4O1xcbiRncmVlbjogIzAwOTA1MDtcXG4kb3JhbmdlOiAjZmY3NzAxO1xcbiRzaWx2ZXI6ICNlZWU7XFxuJHdoaXRlOiAjZmZmO1xcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3RleHRfaW5wdXQuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3RleHRfaW5wdXQuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi90ZXh0X2lucHV0LnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnRleHQtaW5wdXQge1xcbiAgd2lkdGg6IDEwMCU7IH1cXG4gIC50ZXh0LWlucHV0IC50ZXh0LWlucHV0LWxhYmVsLCAudGV4dC1pbnB1dCBpbnB1dCB7XFxuICAgIHdpZHRoOiAxMDAlOyB9XFxuICAudGV4dC1pbnB1dCAudGV4dC1pbnB1dC1sYWJlbCB7XFxuICAgIHBhZGRpbmc6IDAgNHB4IDJweCA0cHg7IH1cXG4gIC50ZXh0LWlucHV0IGlucHV0IHtcXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xcbiAgICBmb250LXNpemU6IDE0cHg7XFxuICAgIHBhZGRpbmc6IDRweCA4cHg7IH1cXG5cIiwgXCJcIiwge1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiL1VzZXJzL2loLXBwYzY0L3Byb2plY3RzL2dpdGh1Yl9pby9zcmMvYXBwL3ByZXNlbnRlcnMvYXBwL3ByZXNlbnRlcnMvdGV4dF9pbnB1dC5zY3NzXCIsXCIvVXNlcnMvaWgtcHBjNjQvcHJvamVjdHMvZ2l0aHViX2lvL3NyYy9hcHAvcHJlc2VudGVycy9hcHAvY29tbW9uL2NvbG9ycy5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUVBO0VBQ0UsWUFBVyxFQWdCWjtFQWpCRDtJQUlJLFlBQVcsRUFDWjtFQUxIO0lBUUksdUJBQXNCLEVBQ3ZCO0VBVEg7SUFZSSxtQkFBa0I7SUFDbEIsdUJDYmE7SURjYixnQkFBZTtJQUNmLGlCQUFnQixFQUNqQlwiLFwiZmlsZVwiOlwidGV4dF9pbnB1dC5zY3NzXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgJy4uL2NvbW1vbi9jb2xvcnMnO1xcblxcbi50ZXh0LWlucHV0IHtcXG4gIHdpZHRoOiAxMDAlO1xcblxcbiAgLnRleHQtaW5wdXQtbGFiZWwsIGlucHV0IHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICB9XFxuXFxuICAudGV4dC1pbnB1dC1sYWJlbCB7XFxuICAgIHBhZGRpbmc6IDAgNHB4IDJweCA0cHg7XFxuICB9XFxuXFxuICBpbnB1dCB7XFxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgJGdyYXktbGlnaHQ7XFxuICAgIGZvbnQtc2l6ZTogMTRweDtcXG4gICAgcGFkZGluZzogNHB4IDhweDtcXG4gIH1cXG59XCIsXCIkYmxhY2s6ICMwMDA7XFxuJGdyYXktZGFyazogIzMzMztcXG4kZ3JheS1saWdodDogI2NjYztcXG4kZ3JheTogIzg4ODtcXG4kZ3JlZW46ICMwMDkwNTA7XFxuJG9yYW5nZTogI2ZmNzcwMTtcXG4kc2lsdmVyOiAjZWVlO1xcbiR3aGl0ZTogI2ZmZjtcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcblxuLy8gZXhwb3J0c1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9zdHlsZS5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS0yIS4vc3R5bGUuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9zdHlsZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSh0cnVlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIiNzZXJ2aWNlLXdvcmtlci1wdXNoLWNvbnRhaW5lciAucmVxdWVzdC1wZXJtaXNzaW9uLWJ1dHRvbiB7XFxuICBtYXJnaW4tdG9wOiA4cHg7IH1cXG5cXG4jc2VydmljZS13b3JrZXItcHVzaC1jb250YWluZXIgLnN1YnNjcmlwdGlvbi1pbmZvIHtcXG4gIGZvbnQtc2l6ZTogMTBweDtcXG4gIGhlaWdodDogMjQwcHg7XFxuICBtYXJnaW4tdG9wOiA4cHg7IH1cXG5cIiwgXCJcIiwge1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiL1VzZXJzL2loLXBwYzY0L3Byb2plY3RzL2dpdGh1Yl9pby9zcmMvYXBwL2NvbnRhaW5lcnMvbGFib3JhdG9yeS9zZXJ2aWNlX3dvcmtlci9wdXNoL2FwcC9jb250YWluZXJzL2xhYm9yYXRvcnkvc2VydmljZV93b3JrZXIvcHVzaC9zdHlsZS5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBRUksZ0JBQWUsRUFDaEI7O0FBSEg7RUFNSSxnQkFBZTtFQUNmLGNBQWE7RUFDYixnQkFBZSxFQUNoQlwiLFwiZmlsZVwiOlwic3R5bGUuc2Nzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIjc2VydmljZS13b3JrZXItcHVzaC1jb250YWluZXIge1xcbiAgLnJlcXVlc3QtcGVybWlzc2lvbi1idXR0b24ge1xcbiAgICBtYXJnaW4tdG9wOiA4cHg7XFxuICB9XFxuXFxuICAuc3Vic2NyaXB0aW9uLWluZm8ge1xcbiAgICBmb250LXNpemU6IDEwcHg7XFxuICAgIGhlaWdodDogMjQwcHg7XFxuICAgIG1hcmdpbi10b3A6IDhweDtcXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG5cbi8vIGV4cG9ydHNcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS0yIS4vc3R5bGUuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS0yIS4vc3R5bGUuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikodHJ1ZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIjc2VydmljZS13b3JrZXItYmFja2dyb3VuZC1zeW5jLWNvbnRhaW5lciBkaXYge1xcbiAgbWFyZ2luOiA0cHggMDsgfVxcblxcbiNzZXJ2aWNlLXdvcmtlci1iYWNrZ3JvdW5kLXN5bmMtY29udGFpbmVyIHRhYmxlIHtcXG4gIHdpZHRoOiAxMDAlOyB9XFxuICAjc2VydmljZS13b3JrZXItYmFja2dyb3VuZC1zeW5jLWNvbnRhaW5lciB0YWJsZSAudGFibGUtaWQtY29sdW1uIHtcXG4gICAgd2lkdGg6IDQwcHg7IH1cXG5cIiwgXCJcIiwge1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiL1VzZXJzL2loLXBwYzY0L3Byb2plY3RzL2dpdGh1Yl9pby9zcmMvYXBwL2NvbnRhaW5lcnMvbGFib3JhdG9yeS9zZXJ2aWNlX3dvcmtlci9iYWNrZ3JvdW5kX3N5bmMvYXBwL2NvbnRhaW5lcnMvbGFib3JhdG9yeS9zZXJ2aWNlX3dvcmtlci9iYWNrZ3JvdW5kX3N5bmMvc3R5bGUuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUVJLGNBQWEsRUFDZDs7QUFISDtFQU1JLFlBQVcsRUFLWjtFQVhIO0lBU00sWUFBVyxFQUNaXCIsXCJmaWxlXCI6XCJzdHlsZS5zY3NzXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIiNzZXJ2aWNlLXdvcmtlci1iYWNrZ3JvdW5kLXN5bmMtY29udGFpbmVyIHtcXG4gIGRpdiB7XFxuICAgIG1hcmdpbjogNHB4IDA7XFxuICB9XFxuXFxuICB0YWJsZSB7XFxuICAgIHdpZHRoOiAxMDAlO1xcblxcbiAgICAudGFibGUtaWQtY29sdW1uIHtcXG4gICAgICB3aWR0aDogNDBweDtcXG4gICAgfVxcbiAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcblxuLy8gZXhwb3J0c1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9pbmRleC5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS0yIS4vaW5kZXguc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9pbmRleC5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSh0cnVlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIiosICo6YmVmb3JlLCAqOmFmdGVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgYm9yZGVyOiAwIHNvbGlkICM4ODg7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgY29sb3I6ICMwMDA7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICBmb250LXdlaWdodDogbm9ybWFsO1xcbiAgbGluZS1oZWlnaHQ6IDEuNTtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7IH1cXG5cXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCB1bCwgb2wge1xcbiAgbWFyZ2luLXRvcDogMTZweDsgfVxcblxcbnAge1xcbiAgbWFyZ2luLXRvcDogOHB4OyB9XFxuXFxuaDEge1xcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gIGZvbnQtc2l6ZTogMjRweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxcblxcbmgyIHtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICBmb250LXNpemU6IDIwcHg7IH1cXG5cXG5oMyB7XFxuICBmb250LXdlaWdodDogNzAwO1xcbiAgZm9udC1zaXplOiAxOHB4OyB9XFxuXFxuaDQge1xcbiAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gIGZvbnQtc2l6ZTogMTRweDsgfVxcblxcbmg1IHtcXG4gIGZvbnQtd2VpZ2h0OiA4MDA7XFxuICBmb250LXNpemU6IDEycHg7IH1cXG5cXG5oNiB7XFxuICBmb250LXdlaWdodDogODAwO1xcbiAgZm9udC1zaXplOiAxMHB4OyB9XFxuXFxucCB7XFxuICBwYWRkaW5nLWxlZnQ6IDFlbTsgfVxcblxcbmEge1xcbiAgY29sb3I6ICMwMDkwNTA7XFxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxcblxcbnN0cm9uZyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgZm9udC13ZWlnaHQ6IDgwMDtcXG4gIG1hcmdpbjogMXB4IDRweDtcXG4gIHBhZGRpbmc6IDFweCA0cHg7IH1cXG5cXG5idXR0b246Zm9jdXMge1xcbiAgb3V0bGluZTogbm9uZTsgfVxcblxcbnRhYmxlIHtcXG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XFxuICBib3JkZXItc3BhY2luZzogMDtcXG4gIHRhYmxlLWxheW91dDogZml4ZWQ7IH1cXG4gIHRhYmxlIHRoLCB0YWJsZSB0ZCB7XFxuICAgIHBhZGRpbmc6IDRweCA4cHg7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICM4ODg7IH1cXG5cXG51bCwgb2wge1xcbiAgcGFkZGluZy1sZWZ0OiA0OHB4O1xcbiAgd2lkdGg6IDEwMCU7IH1cXG4gIHVsIGxpLCBvbCBsaSB7XFxuICAgIG1hcmdpbi10b3A6IDRweDsgfVxcblxcbi5mcmFtZSB7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xcbiAgbWFyZ2luOiAxNnB4O1xcbiAgcGFkZGluZzogMTZweDtcXG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAzMnB4KTsgfVxcblwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCIvVXNlcnMvaWgtcHBjNjQvcHJvamVjdHMvZ2l0aHViX2lvL3NyYy9hcHAvYXBwL2luZGV4LnNjc3NcIixcIi9Vc2Vycy9paC1wcGM2NC9wcm9qZWN0cy9naXRodWJfaW8vc3JjL2FwcC9hcHAvY29tbW9uL2NvbG9ycy5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUVBO0VBQ0UsOEJBQTZCO0VBQzdCLHFCQ0RTO0VERVQsdUJBQXNCO0VBQ3RCLFlDTlU7RURPVixnQkFBZTtFQUNmLG9CQUFtQjtFQUNuQixpQkFBZ0I7RUFDaEIsVUFBUztFQUNULFdBQVU7RUFDVixzQkFBcUI7RUFDckIsc0JBQXFCLEVBQ3RCOztBQUVEO0VBQ0UsaUJBQWdCLEVBQ2pCOztBQUVEO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBRUQ7RUFDRSxpQkFBZ0I7RUFDaEIsZ0JBQWU7RUFDZixtQkFBa0IsRUFDbkI7O0FBRUQ7RUFDRSxpQkFBZ0I7RUFDaEIsZ0JBQWUsRUFDaEI7O0FBRUQ7RUFDRSxpQkFBZ0I7RUFDaEIsZ0JBQWUsRUFDaEI7O0FBRUQ7RUFDRSxpQkFBZ0I7RUFDaEIsZ0JBQWUsRUFDaEI7O0FBRUQ7RUFDRSxpQkFBZ0I7RUFDaEIsZ0JBQWUsRUFDaEI7O0FBRUQ7RUFDRSxpQkFBZ0I7RUFDaEIsZ0JBQWUsRUFDaEI7O0FBRUQ7RUFDRSxrQkFBaUIsRUFDbEI7O0FBRUQ7RUFDRSxlQ3hEYTtFRHlEYiwyQkFBMEIsRUFDM0I7O0FBRUQ7RUFDRSx1QkMzRFc7RUQ0RFgsc0JBQXFCO0VBQ3JCLGlCQUFnQjtFQUNoQixnQkFBZTtFQUNmLGlCQUFnQixFQUNqQjs7QUFFRDtFQUNFLGNBQWEsRUFDZDs7QUFFRDtFQUNFLDBCQUF5QjtFQUN6QixrQkFBaUI7RUFDakIsb0JBQW1CLEVBTXBCO0VBVEQ7SUFNSSxpQkFBZ0I7SUFDaEIsdUJDaEZPLEVEaUZSOztBQUdIO0VBQ0UsbUJBQWtCO0VBQ2xCLFlBQVcsRUFLWjtFQVBEO0lBS0ksZ0JBQWUsRUFDaEI7O0FBR0g7RUFDRSx1QkMvRmU7RURnR2YsYUFBWTtFQUNaLGNBQWE7RUFDYix5QkFBd0IsRUFDekJcIixcImZpbGVcIjpcImluZGV4LnNjc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCAnLi9jb21tb24vY29sb3JzJztcXG5cXG4qLCAqOmJlZm9yZSwgKjphZnRlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIGJvcmRlcjogMCBzb2xpZCAkZ3JheTtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICBjb2xvcjogJGJsYWNrO1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcXG4gIGxpbmUtaGVpZ2h0OiAxLjU7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xcbn1cXG5cXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCB1bCwgb2wge1xcbiAgbWFyZ2luLXRvcDogMTZweDtcXG59XFxuXFxucCB7XFxuICBtYXJnaW4tdG9wOiA4cHg7XFxufVxcblxcbmgxIHtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICBmb250LXNpemU6IDI0cHg7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbmgyIHtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICBmb250LXNpemU6IDIwcHg7XFxufVxcblxcbmgzIHtcXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICBmb250LXNpemU6IDE4cHg7XFxufVxcblxcbmg0IHtcXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICBmb250LXNpemU6IDE0cHg7XFxufVxcblxcbmg1IHtcXG4gIGZvbnQtd2VpZ2h0OiA4MDA7XFxuICBmb250LXNpemU6IDEycHg7XFxufVxcblxcbmg2IHtcXG4gIGZvbnQtd2VpZ2h0OiA4MDA7XFxuICBmb250LXNpemU6IDEwcHg7XFxufVxcblxcbnAge1xcbiAgcGFkZGluZy1sZWZ0OiAxZW07XFxufVxcblxcbmEge1xcbiAgY29sb3I6ICRncmVlbjtcXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xcbn1cXG5cXG5zdHJvbmcge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogJHNpbHZlcjtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIGZvbnQtd2VpZ2h0OiA4MDA7XFxuICBtYXJnaW46IDFweCA0cHg7XFxuICBwYWRkaW5nOiAxcHggNHB4O1xcbn1cXG5cXG5idXR0b246Zm9jdXMge1xcbiAgb3V0bGluZTogbm9uZTtcXG59XFxuXFxudGFibGUge1xcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcXG4gIGJvcmRlci1zcGFjaW5nOiAwO1xcbiAgdGFibGUtbGF5b3V0OiBmaXhlZDtcXG5cXG4gIHRoLCB0ZCB7XFxuICAgIHBhZGRpbmc6IDRweCA4cHg7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmF5O1xcbiAgfVxcbn1cXG5cXG51bCwgb2wge1xcbiAgcGFkZGluZy1sZWZ0OiA0OHB4O1xcbiAgd2lkdGg6IDEwMCU7XFxuXFxuICBsaSB7XFxuICAgIG1hcmdpbi10b3A6IDRweDtcXG4gIH1cXG59XFxuXFxuLmZyYW1lIHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICRncmF5LWxpZ2h0O1xcbiAgbWFyZ2luOiAxNnB4O1xcbiAgcGFkZGluZzogMTZweDtcXG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAzMnB4KTtcXG59XCIsXCIkYmxhY2s6ICMwMDA7XFxuJGdyYXktZGFyazogIzMzMztcXG4kZ3JheS1saWdodDogI2NjYztcXG4kZ3JheTogIzg4ODtcXG4kZ3JlZW46ICMwMDkwNTA7XFxuJG9yYW5nZTogI2ZmNzcwMTtcXG4kc2lsdmVyOiAjZWVlO1xcbiR3aGl0ZTogI2ZmZjtcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcblxuLy8gZXhwb3J0c1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgRm9udEF3ZXNvbWVJY29uIH0gZnJvbSAnQGZvcnRhd2Vzb21lL3JlYWN0LWZvbnRhd2Vzb21lJztcbmltcG9ydCB7IGxpYnJhcnkgfSBmcm9tICdAZm9ydGF3ZXNvbWUvZm9udGF3ZXNvbWUtc3ZnLWNvcmUnO1xuaW1wb3J0IHtcbiAgZmFCYXJzLFxuICBmYVRpbWVzLFxuICBmYUVudmVsb3BlLFxufSBmcm9tICdAZm9ydGF3ZXNvbWUvZnJlZS1zb2xpZC1zdmctaWNvbnMnO1xuaW1wb3J0IHtcbiAgZmFiLFxufSBmcm9tICdAZm9ydGF3ZXNvbWUvZnJlZS1icmFuZHMtc3ZnLWljb25zJztcblxubGlicmFyeS5hZGQoZmFUaW1lcyk7XG5jb25zdCBDbG9zZUljb24gPSAoKSA9PiAoPEZvbnRBd2Vzb21lSWNvbiBpY29uPVwidGltZXNcIiAvPik7XG5cbmxpYnJhcnkuYWRkKGZhQmFycyk7XG5jb25zdCBNZW51SWNvbiA9ICgpID0+ICg8Rm9udEF3ZXNvbWVJY29uIGljb249XCJiYXJzXCIgLz4pO1xuXG5saWJyYXJ5LmFkZChmYUVudmVsb3BlKTtcbmNvbnN0IEVudmVsb3BlSWNvbiA9ICgpID0+ICg8Rm9udEF3ZXNvbWVJY29uIGljb249XCJlbnZlbG9wZVwiIC8+KTtcblxubGlicmFyeS5hZGQoZmFiKTtcbmNvbnN0IFR3aXR0ZXJJY29uID0gKCkgPT4gKDxGb250QXdlc29tZUljb24gaWNvbj17WydmYWInLCAndHdpdHRlciddfSAvPik7XG5cbmxpYnJhcnkuYWRkKGZhYik7XG5jb25zdCBHaXRIdWJJY29uID0gKCkgPT4gKDxGb250QXdlc29tZUljb24gaWNvbj17WydmYWInLCAnZ2l0aHViJ119IC8+KTtcblxuZXhwb3J0IHtcbiAgQ2xvc2VJY29uLFxuICBFbnZlbG9wZUljb24sXG4gIEdpdEh1Ykljb24sXG4gIE1lbnVJY29uLFxuICBUd2l0dGVySWNvbixcbn07XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgJy4vY29tbW9uX2ZyYW1lX21lbnVfaXRlbS5zY3NzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgbGV2ZWw6IG51bWJlcixcbiAgcGF0aDogc3RyaW5nLFxuICBzZWxlY3RlZDogYm9vbGVhbixcbiAgdGl0bGVFbjogc3RyaW5nLFxuICB0aXRsZUpwOiBzdHJpbmcsXG59O1xuXG5jb25zdCBDb21tb25GcmFtZU1lbnVJdGVtID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCB7XG4gICAgbGV2ZWwsXG4gICAgc2VsZWN0ZWQsXG4gICAgcGF0aCxcbiAgICB0aXRsZUpwLFxuICAgIHRpdGxlRW4sXG4gIH0gPSBwcm9wcztcblxuICBjb25zdCBjb250ZW50ID0gKFxuICAgIDxkaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlLWpwXCI+XG4gICAgICAgIHt0aXRsZUpwfVxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlLWVuXCI+XG4gICAgICAgIHt0aXRsZUVufVxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG5cbiAgaWYgKHNlbGVjdGVkKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29tbW9uLWZyYW1lLW1lbnUtaXRlbVwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YG1lbnUtYnV0dG9uIGxldmVsJHtsZXZlbH0gbWFya2VkYH0+XG4gICAgICAgICAge2NvbnRlbnR9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJjb21tb24tZnJhbWUtbWVudS1pdGVtXCI+XG4gICAgICA8TGlua1xuICAgICAgICB0bz17cGF0aH1cbiAgICAgICAgY2xhc3NOYW1lPXtgbWVudS1idXR0b24gbGV2ZWwke2xldmVsfWB9XG4gICAgICA+XG4gICAgICAgIHtjb250ZW50fVxuICAgICAgPC9MaW5rPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IHsgQ29tbW9uRnJhbWVNZW51SXRlbSB9O1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5jbGFzcyBBYnN0cmFjdENvbnRhaW5lcjxQLCBTPiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxQLCBTPiB7XG4gIHN0YXRlOiBTO1xuXG4gIHNldFN0YXRlPEsgZXh0ZW5kcyBrZXlvZiBTPihcbiAgICBzdGF0ZTpcbiAgICAgICgocHJldlN0YXRlOiBSZWFkb25seTxTPiwgcHJvcHM6IFApID0+IChQaWNrPFMsIEs+IHwgUyB8IG51bGwpKSB8XG4gICAgICAoUGljazxTLCBLPiB8IFMgfCBudWxsKSxcbiAgICBjYWxsYmFjaz86ICgpID0+IHZvaWQsXG4gICk6IHZvaWQge1xuICAgIGNvbnNvbGUubG9nKCdVcGRhdGUgc3RhdGU6Jywgc3RhdGUpO1xuICAgIHN1cGVyLnNldFN0YXRlKHN0YXRlLCBjYWxsYmFjayk7XG4gIH1cbn1cblxuZXhwb3J0IHsgQWJzdHJhY3RDb250YWluZXIgfTtcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAnLi90ZXh0X2FyZWEuc2Nzcyc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGNoaWxkcmVuOiBzdHJpbmcsXG4gIGNsYXNzTmFtZT86IHN0cmluZyxcbiAgbGFiZWw/OiBzdHJpbmcsXG4gIG9uQ2hhbmdlOiAoaW5wdXRUZXh0OiBzdHJpbmcpID0+IHZvaWQsXG59O1xuXG5jbGFzcyBUZXh0QXJlYSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxQcm9wcz4ge1xuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGNsYXNzTmFtZTogJycsXG4gICAgbGFiZWw6ICcnLFxuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBjaGlsZHJlbixcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIGxhYmVsLFxuICAgICAgb25DaGFuZ2UsXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9e2B0ZXh0LWFyZWEtcHJlc2VudGVyICR7Y2xhc3NOYW1lfWB9PlxuICAgICAgICB7bGFiZWwgJiYgKDxkaXYgY2xhc3NOYW1lPVwidGV4dC1hcmVhLWxhYmVsXCI+e2xhYmVsfTwvZGl2Pil9XG4gICAgICAgIDx0ZXh0YXJlYVxuICAgICAgICAgIG9uQ2hhbmdlPXsoZXZlbnQ6IGFueSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBldmVudC50YXJnZXQudmFsdWU7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBvbkNoYW5nZSh2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfX1cbiAgICAgICAgICB2YWx1ZT17Y2hpbGRyZW4gfHwgJyd9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9O1xufVxuXG5leHBvcnQge1xuICBUZXh0QXJlYSxcbn07XG4iLCJjb25zdCB7IGxvY2FsU3RvcmFnZSB9ID0gd2luZG93O1xuXG5jbGFzcyBTdG9yYWdlIHtcbiAgc3RhdGljIGdldCA9IChrZXk6IHN0cmluZyk6IChzdHJpbmcgfCBudWxsKSA9PiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KSk7XG4gIHN0YXRpYyBzZXQgPSAoa2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiB2b2lkID0+IChsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlKSk7XG4gIHN0YXRpYyByZW1vdmUgPSAoa2V5OiBzdHJpbmcpOiB2b2lkID0+IChsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpKTtcbn07XG5cbmV4cG9ydCB7IFN0b3JhZ2UgfTsiLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyBRckNvZGUgZnJvbSAncXJjb2RlJztcbmltcG9ydCB7IEFic3RyYWN0Q29udGFpbmVyIH0gZnJvbSAnLi4vLi4vYWJzdHJhY3RfY29udGFpbmVyJztcbmltcG9ydCAnLi9zdHlsZS5zY3NzJztcbmltcG9ydCB7IFRleHRBcmVhIH0gZnJvbSAnLi4vLi4vLi4vcHJlc2VudGVycy90ZXh0X2FyZWEnO1xuaW1wb3J0IHsgU3RvcmFnZSB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi9zdG9yYWdlJztcblxuY29uc3QgU3RvcmFnZUtleTogc3RyaW5nID0gJ3FyX2NvZGUvcXJUZXh0JztcblxuaW50ZXJmYWNlIFByb3BzIHt9XG5cbmludGVyZmFjZSBTdGF0ZSB7XG4gIHFyVGV4dDogc3RyaW5nLFxuICBxckltYWdlOiBzdHJpbmcsXG59XG5cbmNsYXNzIFFyQ29kZUNvbnRhaW5lciBleHRlbmRzIEFic3RyYWN0Q29udGFpbmVyPFByb3BzLCBTdGF0ZT4ge1xuICBzdGF0ZTogU3RhdGUgPSB7XG4gICAgcXJJbWFnZTogJycsXG4gICAgcXJUZXh0OiAnJyxcbiAgfTtcblxuICBjb21wb25lbnREaWRNb3VudCgpOiB2b2lkIHtcbiAgICBjb25zdCBxclRleHQ6IHN0cmluZyA9IFN0b3JhZ2UuZ2V0KFN0b3JhZ2VLZXkpIHx8IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICAgIHRoaXMub25DaGFuZ2VUZXh0KHFyVGV4dCk7XG4gIH1cblxuICBvbkNoYW5nZVRleHQgPSAocXJUZXh0OiBzdHJpbmcpOiB2b2lkID0+IHtcbiAgICBTdG9yYWdlLnNldChTdG9yYWdlS2V5LCBxclRleHQpO1xuICAgIHRoaXMuc2V0U3RhdGUoeyBxclRleHQgfSk7XG4gICAgaWYgKHFyVGV4dCAhPT0gJycpIHtcbiAgICAgIFFyQ29kZVxuICAgICAgICAudG9EYXRhVVJMKHFyVGV4dClcbiAgICAgICAgLnRoZW4oKHFySW1hZ2UpID0+IHtcbiAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgcXJJbWFnZSB9KTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1FyQ29kZSBnZW5lcmF0ZSBlcnJvcjonLCBlcnJvcik7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBxckltYWdlLCBxclRleHQgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBpZD1cInFyLWNvZGUtY29udGFpbmVyXCI+XG4gICAgICAgIDxoMT5RUiBDb2RlPC9oMT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmcmFtZVwiPlxuICAgICAgICAgIHtxckltYWdlICE9PSAnJyAmJiAoXG4gICAgICAgICAgICA8ZGl2IGlkPVwicXItY29kZS1pbWFnZS13cmFwcGVyXCI+XG4gICAgICAgICAgICAgIDxpbWdcbiAgICAgICAgICAgICAgICBzcmM9e3FySW1hZ2V9XG4gICAgICAgICAgICAgICAgYWx0PVwiUVIgQ29kZVwiXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApfVxuICAgICAgICAgIDxUZXh0QXJlYVxuICAgICAgICAgICAgbGFiZWw9XCJRUuOCs+ODvOODieOBq+WkieaPm+OBmeOCi+aWh+Wtl+WIl1wiXG4gICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5vbkNoYW5nZVRleHR9XG4gICAgICAgICAgPlxuICAgICAgICAgICAge3FyVGV4dH1cbiAgICAgICAgICA8L1RleHRBcmVhPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IHsgUXJDb2RlQ29udGFpbmVyIH07IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQWJzdHJhY3RDb250YWluZXIgfSBmcm9tICcuLi8uLi8uLi9hYnN0cmFjdF9jb250YWluZXInO1xuaW1wb3J0ICcuL3N0eWxlLnNjc3MnO1xuXG5jb25zdCBzdXBwb3J0U2VydmljZVdvcmtlcjogYm9vbGVhbiA9ICgnc2VydmljZVdvcmtlcicgaW4gbmF2aWdhdG9yKTtcblxuaW50ZXJmYWNlIFByb3BzIHt9XG5cbmludGVyZmFjZSBTdGF0ZSB7fVxuXG5jbGFzcyBTZXJ2aWNlV29ya2VyQ2FjaGVDb250YWluZXIgZXh0ZW5kcyBBYnN0cmFjdENvbnRhaW5lcjxQcm9wcywgU3RhdGU+IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGlkPVwic2VydmljZS13b3JrZXItY2FjaGUtY29udGFpbmVyXCI+XG4gICAgICAgIDxoMT7jgq3jg6Pjg4Pjgrfjg6VBUEk8L2gxPlxuXG4gICAgICAgIDxoMj7jgq3jg6Pjg4Pjgrfjg6VBUEnjgajjga/vvJ88L2gyPlxuICAgICAgICA8cD5TZXJ2aWNlIFdvcmtlciDjgafmj5DkvpvjgZXjgozjgabjgYTjgosgQVBJIOOBruS4gOOBpOOBp+OAgWZldGNoIOOBq+S7i+WFpeOBl+OAgeOCreODo+ODg+OCt+ODpeOBleOCjOOBn+ODquOCveODvOOCueOCkui/lOWNtOOBmeOCi+OBk+OBqOOBjOOBp+OBjeOBvuOBmeOAgjwvcD5cbiAgICAgICAgPHA+44Kt44Oj44OD44K344Ol44KS5L2/55So44GZ44KL44GL44Gp44GG44GL44Gv44CB44Kz44Oz44OI44Ot44O844Or5Y+v6IO944Gn44GZ44CCPC9wPlxuXG4gICAgICAgIDxoMj7jgYrkvb/jgYTjga7jg5bjg6njgqbjgrbjga7lr77lv5znirbms4E8L2gyPlxuICAgICAgICA8cD7jgYrkvb/jgYTjga7jg5bjg6njgqbjgrbjga9cbiAgICAgICAgICA8c3Ryb25nPntzdXBwb3J0U2VydmljZVdvcmtlciA/ICflr77lv5zjgZfjgabjgYTjgb7jgZknIDogJ+WvvuW/nOOBl+OBpuOBhOOBvuOBm+OCkyd9PC9zdHJvbmc+XG4gICAgICAgIDwvcD5cblxuICAgICAgICB7c3VwcG9ydFNlcnZpY2VXb3JrZXIgJiYgKFxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8aDI+5YuV5L2c56K66KqN44Gu5pa55rOVPC9oMj5cbiAgICAgICAgICAgIDxwPuWun+OBr+OAgeOBk+OBruODmuODvOOCuOOBq+W/heimgeOBquODquOCveODvOOCueOBr+WFqOOBpuOCreODo+OCt+ODpeOBleOCjOOBpuOBhOOBvuOBmeOAguS7peS4i+OBruaJi+mghuOBp+OCreODo+ODg+OCt+ODpeOBleOCjOOBpuOBhOOCi+OBk+OBqOOCkueiuuiqjeOBp+OBjeOBvuOBmeOAgjwvcD5cbiAgICAgICAgICAgIDxvbD5cbiAgICAgICAgICAgICAgPGxpPuOCpOODs+OCv+ODvOODjeODg+ODiOOBi+OCieWIh+OCiumbouOBl+OBvuOBmeOAgu+8iOS+i++8muapn+WGheODouODvOODieOBq+OBmeOCi+OAgVdpLUZp44KST2Zm44Gr44GZ44KL44CBTEFO44Kx44O844OW44Or44KS5oqc44GP44Gq44Gp77yJPC9saT5cbiAgICAgICAgICAgICAgPGxpPuOBk+OBruODmuODvOOCuOOCkuODquODreODvOODieOBl+OBpuOAgeato+W4uOOBq+ihqOekuuOBleOCjOOCi+OBk+OBqOOCkueiuuiqjeOBl+OBvuOBmeOAgjwvbGk+XG4gICAgICAgICAgICA8L29sPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgeyBTZXJ2aWNlV29ya2VyQ2FjaGVDb250YWluZXIgfTsiLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4vYnV0dG9uLnNjc3MnO1xuXG50eXBlIFByb3BzID0ge1xuICBhY3RpdmU/OiBib29sZWFuLFxuICBjbGFzc05hbWU/OiBzdHJpbmcsXG4gIGNoaWxkcmVuOiBzdHJpbmcsXG4gIG9uQ2xpY2s6ICgpID0+IHZvaWQsXG59O1xuXG5jbGFzcyBCdXR0b24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8UHJvcHM+IHtcbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBhY3RpdmU6IHRydWUsXG4gICAgY2xhc3NOYW1lOiAnJyxcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgYWN0aXZlLFxuICAgICAgY2hpbGRyZW4sXG4gICAgICBjbGFzc05hbWUsXG4gICAgICBvbkNsaWNrLFxuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxidXR0b25cbiAgICAgICAgY2xhc3NOYW1lPXtgYnV0dG9uLXByZXNlbnRlciAke2NsYXNzTmFtZX0gJHthY3RpdmUgPyAnJyA6ICdkaXNhYmxlJ31gfVxuICAgICAgICBvbkNsaWNrPXthY3RpdmUgPyBvbkNsaWNrIDogbnVsbH1cbiAgICAgID5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9idXR0b24+XG4gICAgKTtcbiAgfTtcbn1cblxuZXhwb3J0IHtcbiAgQnV0dG9uLFxufTtcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAnLi90ZXh0X2lucHV0LnNjc3MnO1xuXG50eXBlIFByb3BzID0ge1xuICBjbGFzc05hbWU/OiBzdHJpbmcsXG4gIGxhYmVsPzogc3RyaW5nLFxuICBtYXhMZW5ndGg6IG51bWJlcixcbiAgb25DaGFuZ2VUZXh0OiAoaW5wdXRWYWx1ZTogc3RyaW5nKSA9PiB2b2lkLFxuICBwYXNzd29yZD86IGJvb2xlYW4sXG4gIHBsYWNlSG9sZGVyPzogc3RyaW5nLFxuICB2YWx1ZTogc3RyaW5nLFxufTtcblxuY29uc3QgVGV4dElucHV0ID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCB7XG4gICAgY2xhc3NOYW1lLFxuICAgIGxhYmVsLFxuICAgIG1heExlbmd0aCxcbiAgICBvbkNoYW5nZVRleHQsXG4gICAgcGFzc3dvcmQsXG4gICAgcGxhY2VIb2xkZXIsXG4gICAgdmFsdWUsXG4gIH0gPSBwcm9wcztcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtgdGV4dC1pbnB1dCAke2NsYXNzTmFtZX1gfT5cbiAgICAgIHtsYWJlbCAmJiAoPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWlucHV0LWxhYmVsXCI+e2xhYmVsfTwvZGl2Pil9XG4gICAgICA8aW5wdXRcbiAgICAgICAgcGxhY2Vob2xkZXI9e3BsYWNlSG9sZGVyfVxuICAgICAgICB0eXBlPXtwYXNzd29yZCA/ICdwYXNzd29yZCcgOiAndGV4dCd9XG4gICAgICAgIG9uQ2hhbmdlPXsoZXZlbnQpID0+IG9uQ2hhbmdlVGV4dChldmVudC50YXJnZXQudmFsdWUpfVxuICAgICAgICBtYXhMZW5ndGg9e21heExlbmd0aH1cbiAgICAgICAgdmFsdWU9e3ZhbHVlIHx8ICcnfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCB7IFRleHRJbnB1dCB9O1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQWJzdHJhY3RDb250YWluZXIgfSBmcm9tICcuLi8uLi8uLi9hYnN0cmFjdF9jb250YWluZXInO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnLi4vLi4vLi4vLi4vcHJlc2VudGVycy9idXR0b24nO1xuaW1wb3J0IHsgVGV4dElucHV0IH0gZnJvbSAnLi4vLi4vLi4vLi4vcHJlc2VudGVycy90ZXh0X2lucHV0JztcbmltcG9ydCB7IFRleHRBcmVhIH0gZnJvbSAnLi4vLi4vLi4vLi4vcHJlc2VudGVycy90ZXh0X2FyZWEnO1xuaW1wb3J0ICcuL3N0eWxlLnNjc3MnO1xuXG5jb25zdCBzdXBwb3J0UHVzaE5vdGlmaWNhdGlvbjogYm9vbGVhbiA9ICgnc2VydmljZVdvcmtlcicgaW4gbmF2aWdhdG9yICYmICdQdXNoTWFuYWdlcicgaW4gd2luZG93KTtcbmNvbnN0IHNlcnZpY2VXb3JrZXIgPSAoc3VwcG9ydFB1c2hOb3RpZmljYXRpb24gPyBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlciA6IG51bGwpO1xuXG5pbnRlcmZhY2UgUHJvcHMge31cblxuaW50ZXJmYWNlIFN0YXRlIHt9XG5cbmludGVyZmFjZSBTdGF0ZSB7XG4gIHB1YmxpY0tleTogc3RyaW5nLFxuICBzdWJzY3JpcHRpb25JbmZvOiBzdHJpbmcsXG59XG5cbmNvbnN0IHVybEI2NFRvVWludDhBcnJheSA9IChiYXNlNjRTdHJpbmc6IHN0cmluZykgPT4ge1xuICBjb25zdCBwYWRkaW5nID0gJz0nLnJlcGVhdCgoNCAtIGJhc2U2NFN0cmluZy5sZW5ndGggJSA0KSAlIDQpO1xuICBjb25zdCBiYXNlNjQgPSAoYmFzZTY0U3RyaW5nICsgcGFkZGluZylcbiAgICAucmVwbGFjZSgvXFwtL2csICcrJylcbiAgICAucmVwbGFjZSgvXy9nLCAnLycpO1xuXG4gIGNvbnN0IHJhd0RhdGEgPSB3aW5kb3cuYXRvYihiYXNlNjQpO1xuICBjb25zdCBvdXRwdXRBcnJheSA9IG5ldyBVaW50OEFycmF5KHJhd0RhdGEubGVuZ3RoKTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHJhd0RhdGEubGVuZ3RoOyArK2kpIHtcbiAgICBvdXRwdXRBcnJheVtpXSA9IHJhd0RhdGEuY2hhckNvZGVBdChpKTtcbiAgfVxuICByZXR1cm4gb3V0cHV0QXJyYXk7XG59O1xuXG5jbGFzcyBTZXJ2aWNlV29ya2VyUHVzaENvbnRhaW5lciBleHRlbmRzIEFic3RyYWN0Q29udGFpbmVyPFByb3BzLCBTdGF0ZT4ge1xuICBzdGF0ZTogU3RhdGUgPSB7XG4gICAgcHVibGljS2V5OiAnJyxcbiAgICBzdWJzY3JpcHRpb25JbmZvOiAnJyxcbiAgfTtcblxuICByZXF1ZXN0UHVzaE5vdGlmaWNhdGlvbiA9IGFzeW5jICgpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgICBjb25zdCB7IHB1YmxpY0tleSB9ID0gdGhpcy5zdGF0ZTtcbiAgICBpZiAocHVibGljS2V5ID09PSAnJyB8fCBzZXJ2aWNlV29ya2VyID09IG51bGwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc29sZS5sb2coJ1NlcnZpY2VXb3JrZXIgYW5kIFB1c2ggaXMgU3VwcG9ydGVkJyk7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHN3UmVnaXN0cmF0aW9uID0gYXdhaXQgc2VydmljZVdvcmtlci5yZWdpc3RlcignL3NlcnZpY2Vfd29ya2VyLmpzJyk7XG4gICAgICBjb25zb2xlLmxvZygnU2VydmljZVdvcmtlciBpcyByZWdpc3RlcmVkJywgc3dSZWdpc3RyYXRpb24pO1xuICAgICAgY29uc3QgYXBwbGljYXRpb25TZXJ2ZXJLZXkgPSB1cmxCNjRUb1VpbnQ4QXJyYXkocHVibGljS2V5KTtcbiAgICAgIGF3YWl0IHN3UmVnaXN0cmF0aW9uLnB1c2hNYW5hZ2VyLmdldFN1YnNjcmlwdGlvbigpO1xuICAgICAgY29uc3QgcGFyYW1zID0geyB1c2VyVmlzaWJsZU9ubHk6IHRydWUsIGFwcGxpY2F0aW9uU2VydmVyS2V5IH07XG4gICAgICBzd1JlZ2lzdHJhdGlvbi5wdXNoTWFuYWdlci5zdWJzY3JpYmUocGFyYW1zKVxuICAgICAgICAgICAgICAgICAgICAudGhlbigoc3Vic2NyaXB0aW9uOiBhbnkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnVXNlciBpcyBzdWJzY3JpYmVkOicsIHN1YnNjcmlwdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHN1YnNjcmlwdGlvbkluZm86IEpTT04uc3RyaW5naWZ5KHN1YnNjcmlwdGlvbiwgbnVsbCwgJyAgJykgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdTZXJ2aWNlV29ya2VyIGVycm9yOicsIGVycm9yKTtcbiAgICB9XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgcHVibGljS2V5LCBzdWJzY3JpcHRpb25JbmZvIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgaWQ9XCJzZXJ2aWNlLXdvcmtlci1wdXNoLWNvbnRhaW5lclwiPlxuICAgICAgICA8aDE+U2VydmljZSBXb3JrZXIgLSBQdXNoIEFQSTwvaDE+XG5cbiAgICAgICAgPGgyPuapn+iDveamguimgTwvaDI+XG4gICAgICAgIDxwPuWQjeWJjeOBrumAmuOCiuOAgeODluODqeOCpuOCtuOBp+ODl+ODg+OCt+ODpemAmuefpeOBjOihjOOBiOOCi+apn+iDveOBq+OBquOCiuOBvuOBmeOAgjwvcD5cblxuICAgICAgICA8aDI+44GK5L2/44GE44Gu44OW44Op44Km44K244Gu5a++5b+c54q25rOBPC9oMj5cbiAgICAgICAgPHA+44GK5L2/44GE44Gu44OW44Op44Km44K244GvXG4gICAgICAgICAgPHN0cm9uZz57c3VwcG9ydFB1c2hOb3RpZmljYXRpb24gPyAn5a++5b+c44GX44Gm44GE44G+44GZJyA6ICflr77lv5zjgZfjgabjgYTjgb7jgZvjgpMnfTwvc3Ryb25nPlxuICAgICAgICA8L3A+XG5cbiAgICAgICAge3N1cHBvcnRQdXNoTm90aWZpY2F0aW9uICYmIChcbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPGgyPuWLleS9nOeiuuiqjeOBruaWueazlTwvaDI+XG4gICAgICAgICAgICA8b2w+XG4gICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICA8YVxuICAgICAgICAgICAgICAgICAgaHJlZj1cImh0dHBzOi8vd2ViLXB1c2gtY29kZWxhYi5nbGl0Y2gubWUvXCJcbiAgICAgICAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgUHVzaCBDb21wYW5pb24gKOWklumDqOOCteOCpOODiClcbiAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgKOKAuynjgpLplovjgY3jgb7jgZnjgIJcbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgPGxpPijigLsp44Gu44Oa44O844K45YaF44Gr44GC44KLPHN0cm9uZz5QdWJsaWMgS2V5PC9zdHJvbmc+44KS44Kz44OU44O844GX44G+44GZ44CCPC9saT5cbiAgICAgICAgICAgICAgPGxpPuS4i+OBrjxzdHJvbmc+5pON5L2c44OR44ON44OrPC9zdHJvbmc+44GuPHN0cm9uZz5QdWJsaWMgS2V5PC9zdHJvbmc+44Gr44Oa44O844K544OI44GX44G+44GZ44CCPC9saT5cbiAgICAgICAgICAgICAgPGxpPjxzdHJvbmc+5pON5L2c44OR44ON44OrPC9zdHJvbmc+44GuPHN0cm9uZz5SZXF1ZXN0IFBlcm1pc3Npb248L3N0cm9uZz7jgpLjgq/jg6rjg4Pjgq/jgZfjgb7jgZnjgII8L2xpPlxuICAgICAgICAgICAgICA8bGk+44OW44Op44Km44K244GL44KJ6YCa55+l44KS6Kix5Y+v44GZ44KL44GL5bCL44Gt44KJ44KM44KL44Gu44Gn44CB6Kix5Y+v44GX44G+44GZ44CCPC9saT5cbiAgICAgICAgICAgICAgPGxpPjxzdHJvbmc+5pON5L2c44OR44ON44OrPC9zdHJvbmc+44GuPHN0cm9uZz5TdWJzY3JpcHRpb24gSW5mbzwvc3Ryb25nPuOBq0pTT07mloflrZfliJfjgYzooajnpLrjgZXjgozjgovjga7jgafjgIHlhajjgabjgrPjg5Tjg7zjgZfjgb7jgZnjgIJcbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgPGxpPijigLsp44Gu44Oa44O844K444GuPHN0cm9uZz5TdWJzY3JpcHRpb24gdG8gU2VuZCBUbzwvc3Ryb25nPuOBq+ODmuODvOOCueODiOOBl+OBvuOBmeOAgjwvbGk+XG4gICAgICAgICAgICAgIDxsaT4o4oC7KeOBruODmuODvOOCuOOBrjxzdHJvbmc+VGV4dCB0byBTZW5kPC9zdHJvbmc+44Gr6YCa55+l44GX44Gf44GE44Oh44OD44K744O844K444KS6YGp5b2T44Gr5YWl44KM44G+44GZ44CCPC9saT5cbiAgICAgICAgICAgICAgPGxpPijigLsp44Gu44Oa44O844K444GuPHN0cm9uZz5TRU5EIFBVU0ggTUVTU0FHRTwvc3Ryb25nPuOCkuOCr+ODquODg+OCr+OBl+OBvuOBmeOAgjwvbGk+XG4gICAgICAgICAgICAgIDxsaT7jg5fjg4Pjgrfjg6XpgJrnn6XjgYzlsYrjgY/jgZPjgajjgpLnorroqo3jgZfjgb7jgZnjgII8L2xpPlxuICAgICAgICAgICAgPC9vbD5cblxuICAgICAgICAgICAgPGgyPuaTjeS9nOODkeODjeODqzwvaDI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZyYW1lXCI+XG4gICAgICAgICAgICAgIDxUZXh0SW5wdXRcbiAgICAgICAgICAgICAgICBsYWJlbD1cIlB1YmxpYyBLZXlcIlxuICAgICAgICAgICAgICAgIG1heExlbmd0aD17MTAwfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlVGV4dD17KGlucHV0VmFsdWU6IHN0cmluZykgPT4gdGhpcy5zZXRTdGF0ZSh7IHB1YmxpY0tleTogaW5wdXRWYWx1ZSB9KX1cbiAgICAgICAgICAgICAgICBwbGFjZUhvbGRlcj1cIlB1YmxpYyBLZXlcIlxuICAgICAgICAgICAgICAgIHZhbHVlPXtwdWJsaWNLZXl9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICBhY3RpdmU9e3B1YmxpY0tleSAhPT0gJyd9XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicmVxdWVzdC1wZXJtaXNzaW9uLWJ1dHRvblwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gdGhpcy5yZXF1ZXN0UHVzaE5vdGlmaWNhdGlvbigpfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgUmVxdWVzdCBQZXJtaXNzaW9uXG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICA8VGV4dEFyZWFcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJzdWJzY3JpcHRpb24taW5mb1wiXG4gICAgICAgICAgICAgICAgbGFiZWw9XCJTdWJzY3JpcHRpb24gSW5mb1wiXG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9eygpID0+IHVuZGVmaW5lZH1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHtzdWJzY3JpcHRpb25JbmZvfVxuICAgICAgICAgICAgICA8L1RleHRBcmVhPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCB7IFNlcnZpY2VXb3JrZXJQdXNoQ29udGFpbmVyIH07IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICcuL3N0eWxlLnNjc3MnO1xuaW1wb3J0IHsgQWJzdHJhY3RDb250YWluZXIgfSBmcm9tICcuLi8uLi8uLi9hYnN0cmFjdF9jb250YWluZXInO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnLi4vLi4vLi4vLi4vcHJlc2VudGVycy9idXR0b24nO1xuXG5jb25zdCBzZXJ2aWNlV29ya2VyID0gKCdzZXJ2aWNlV29ya2VyJyBpbiBuYXZpZ2F0b3IgPyBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlciA6IG51bGwpO1xuY29uc3QgaW5kZXhlZERiID0gKCdpbmRleGVkREInIGluIHdpbmRvdyA/IHdpbmRvdy5pbmRleGVkREIgOiBudWxsKTtcblxuaW50ZXJmYWNlIFByb3BzIHt9XG5cbmludGVyZmFjZSBTdGF0ZSB7XG4gIHN5bmNMaXN0OiBBcnJheTx7IGlkPzogbnVtYmVyLCBwYXRoOiBzdHJpbmcsIGJvZHk6IHN0cmluZywgcmVzdWx0OiBzdHJpbmcsIGNyZWF0ZWRBdD86IG51bWJlciB9PlxufVxuXG5jbGFzcyBTZXJ2aWNlV29ya2VyQmFja2dyb3VuZFN5bmNDb250YWluZXIgZXh0ZW5kcyBBYnN0cmFjdENvbnRhaW5lcjxQcm9wcywgU3RhdGU+IHtcbiAgaW50ZXJ2YWxJZDogKG51bGwgfCBOb2RlSlMuVGltZXIpID0gbnVsbDtcbiAgZGI6IChudWxsIHwgSURCRGF0YWJhc2UpID0gbnVsbDtcbiAgc3RhdGU6IFN0YXRlID0ge1xuICAgIHN5bmNMaXN0OiBbXSxcbiAgfTtcblxuICBhc3luYyBjb21wb25lbnRXaWxsTW91bnQoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgaWYgKGluZGV4ZWREYiA9PSBudWxsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGRiT2VwblJlcXVlc3Q6IElEQk9wZW5EQlJlcXVlc3QgPSBpbmRleGVkRGIub3Blbignc2VydmljZV93b3JrZXInLCAxKTtcbiAgICBkYk9lcG5SZXF1ZXN0Lm9udXBncmFkZW5lZWRlZCA9IChldmVudDogSURCVmVyc2lvbkNoYW5nZUV2ZW50KSA9PiB7XG4gICAgICBjb25zdCBkYjogSURCRGF0YWJhc2UgPSAoZXZlbnQudGFyZ2V0IGFzIElEQk9wZW5EQlJlcXVlc3QpLnJlc3VsdDtcbiAgICAgIGNvbnN0IHN0b3JlOiBJREJPYmplY3RTdG9yZSA9IGRiLmNyZWF0ZU9iamVjdFN0b3JlKFxuICAgICAgICAnYmFja2dyb3VuZF9zeW5jJyxcbiAgICAgICAgeyBrZXlQYXRoOiAnaWQnLCBhdXRvSW5jcmVtZW50OiB0cnVlIH0sXG4gICAgICApO1xuICAgICAgY29uc29sZS5sb2coJ1N1Y2Nlc3MgY3JlYXRlIHN0b3JlOicsIHN0b3JlKTtcbiAgICAgIHRoaXMuZGIgPSBkYjtcbiAgICB9O1xuICAgIGRiT2VwblJlcXVlc3Qub25lcnJvciA9IChlcnJvcikgPT4gY29uc29sZS5lcnJvcignRmFpbCBvcGVuIERCOicsIGVycm9yKTtcbiAgICBkYk9lcG5SZXF1ZXN0Lm9uc3VjY2VzcyA9IChldmVudCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ1N1Y2Nlc3Mgb3BlbiBEQjonLCBldmVudCk7XG4gICAgICB0aGlzLmRiID0gKGV2ZW50LnRhcmdldCBhcyBJREJPcGVuREJSZXF1ZXN0KS5yZXN1bHQ7XG4gICAgfTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCk6IHZvaWQge1xuICAgIHRoaXMucmVsb2FkU3luY0xpc3QoKTtcbiAgICB0aGlzLmludGVydmFsSWQgPSBzZXRJbnRlcnZhbCh0aGlzLnJlbG9hZFN5bmNMaXN0LCAxMDAwKTtcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmludGVydmFsSWQgIT0gbnVsbCkge1xuICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsSWQpO1xuICAgICAgdGhpcy5pbnRlcnZhbElkID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICByZWxvYWRTeW5jTGlzdCA9IGFzeW5jICgpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgICAvLyBjb25zdCB7IHN5bmNMaXN0IH0gPSB0aGlzLnN0YXRlO1xuICAgIC8vIGNvbnN0IG5ld1N5bmNMaXN0ID0gYXdhaXQgZ2V0QmFja2dyb3VuZFN5bmNSb3dzKCk7XG4gICAgLy8gaWYgKG5ld1N5bmNMaXN0Lmxlbmd0aCA9PT0gMCkge1xuICAgIC8vICAgcmV0dXJuO1xuICAgIC8vIH1cbiAgICAvL1xuICAgIC8vIGNvbnN0IGRpZmZlcmVudExlbmd0aDogYm9vbGVhbiA9IHN5bmNMaXN0Lmxlbmd0aCAhPT0gbmV3U3luY0xpc3QubGVuZ3RoO1xuICAgIC8vIGNvbnN0IHVwZGF0ZWQ6IGJvb2xlYW4gPSBkaWZmZXJlbnRMZW5ndGggfHxcbiAgICAvLyAgIG5ld1N5bmNMaXN0LmZpbmRJbmRleCgoZWxlbWVudCwgaW5kZXgpID0+IChlbGVtZW50LmlkICE9PSBzeW5jTGlzdFtpbmRleF0uaWQpKSAhPT0gLTE7XG4gICAgLy8gaWYgKHVwZGF0ZWQpIHtcbiAgICAvLyAgIHRoaXMuc2V0U3RhdGUoeyBzeW5jTGlzdDogbmV3U3luY0xpc3QgfSk7XG4gICAgLy8gfVxuICB9O1xuXG4gIGJhY2tncm91bmRTeW5jVGVzdCA9ICgpOiB2b2lkID0+IHtcbiAgICBpZiAoc2VydmljZVdvcmtlciA9PSBudWxsIHx8IHRoaXMuZGIgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBzeW5jRGF0YSA9IHsgcGF0aDogJy9leGFtcGxlLmpzb24nLCBib2R5OiAnJywgcmVzdWx0OiAnJyB9O1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uOiBJREJUcmFuc2FjdGlvbiA9IHRoaXMuZGIudHJhbnNhY3Rpb24oWydiYWNrZ3JvdW5kX3N5bmMnXSwgJ3JlYWR3cml0ZScpO1xuICAgIHRyYW5zYWN0aW9uLm9uZXJyb3IgPSAoZXJyb3IpID0+IGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZDonLCBlcnJvcik7XG5cbiAgICBjb25zdCByZXF1ZXN0OiBJREJSZXF1ZXN0ID0gdHJhbnNhY3Rpb24ub2JqZWN0U3RvcmUoJ2JhY2tncm91bmRfc3luYycpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmFkZChzeW5jRGF0YSk7XG4gICAgcmVxdWVzdC5vbmVycm9yID0gKGVycm9yKSA9PiBjb25zb2xlLmVycm9yKCdGYWlsZWQ6JywgZXJyb3IpO1xuICAgIHJlcXVlc3Qub25zdWNjZXNzID0gYXN5bmMgKGV2ZW50OiBFdmVudCkgPT4ge1xuICAgICAgY29uc3QgaWQ6IG51bWJlciA9IChldmVudC50YXJnZXQgYXMgSURCT3BlbkRCUmVxdWVzdCkucmVzdWx0O1xuICAgICAgY29uc3QgdGFnOiBzdHJpbmcgPSBgYmFja2dyb3VuZC1zeW5jOiR7aWR9YDtcbiAgICAgIGNvbnN0IHN3UmVnaXN0cmF0aW9uID0gYXdhaXQgc2VydmljZVdvcmtlci5yZWFkeTtcbiAgICAgIHN3UmVnaXN0cmF0aW9uLnN5bmMucmVnaXN0ZXIodGFnKTtcbiAgICAgIHRoaXMucmVsb2FkU3luY0xpc3QoKTtcbiAgICB9O1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IHN5bmNMaXN0IH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgaWQ9XCJzZXJ2aWNlLXdvcmtlci1iYWNrZ3JvdW5kLXN5bmMtY29udGFpbmVyXCI+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPEJ1dHRvbiBvbkNsaWNrPXsoKSA9PiB0aGlzLmJhY2tncm91bmRTeW5jVGVzdCgpfT5cbiAgICAgICAgICAgIEJhY2tncm91bmQgU3luYyBUZXN0XG4gICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDx0YWJsZT5cbiAgICAgICAgICAgIDx0aGVhZD5cbiAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJ0YWJsZS1pZC1jb2x1bW5cIj5JRDwvdGg+XG4gICAgICAgICAgICAgICAgPHRoPlBhdGg8L3RoPlxuICAgICAgICAgICAgICAgIDx0aD5SZXN1bHQ8L3RoPlxuICAgICAgICAgICAgICAgIDx0aD5DcmVhdGVkQXQ8L3RoPlxuICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgPC90aGVhZD5cbiAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgICAge3N5bmNMaXN0Lm1hcChzeW5jRGF0YSA9PiAoXG4gICAgICAgICAgICAgICAgPHRyIGtleT17c3luY0RhdGEuaWR9PlxuICAgICAgICAgICAgICAgICAgPHRkPntzeW5jRGF0YS5pZH08L3RkPlxuICAgICAgICAgICAgICAgICAgPHRkPntzeW5jRGF0YS5wYXRofTwvdGQ+XG4gICAgICAgICAgICAgICAgICA8dGQ+e3N5bmNEYXRhLnJlc3VsdCB8fCAnLSd9PC90ZD5cbiAgICAgICAgICAgICAgICAgIDx0ZD57c3luY0RhdGEuY3JlYXRlZEF0IHx8ICctJ308L3RkPlxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IHsgU2VydmljZVdvcmtlckJhY2tncm91bmRTeW5jQ29udGFpbmVyIH07IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtcbiAgSGFzaFJvdXRlciBhcyBSb3V0ZXIsXG4gIFJvdXRlLFxufSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IENvbW1vbkZyYW1lIH0gZnJvbSAnLi9jb250YWluZXJzL2NvbW1vbl9mcmFtZS9jb21tb25fZnJhbWUnO1xuaW1wb3J0IHsgQWJvdXRDb250YWluZXIgfSBmcm9tICcuL2NvbnRhaW5lcnMvYWJvdXQnO1xuaW1wb3J0IHsgTGFib3JhdG9yeUNvbnRhaW5lciB9IGZyb20gJy4vY29udGFpbmVycy9sYWJvcmF0b3J5JztcbmltcG9ydCB7IFFyQ29kZUNvbnRhaW5lciB9IGZyb20gJy4vY29udGFpbmVycy9sYWJvcmF0b3J5L3FyX2NvZGUnO1xuaW1wb3J0IHsgU2VydmljZVdvcmtlckNvbnRhaW5lciB9IGZyb20gJy4vY29udGFpbmVycy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyJztcbmltcG9ydCB7IFNlcnZpY2VXb3JrZXJDYWNoZUNvbnRhaW5lciB9IGZyb20gJy4vY29udGFpbmVycy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL2NhY2hlJztcbmltcG9ydCB7IFNlcnZpY2VXb3JrZXJQdXNoQ29udGFpbmVyIH0gZnJvbSAnLi9jb250YWluZXJzL2xhYm9yYXRvcnkvc2VydmljZV93b3JrZXIvcHVzaCc7XG5pbXBvcnQgeyBTZXJ2aWNlV29ya2VyQmFja2dyb3VuZFN5bmNDb250YWluZXIgfSBmcm9tICcuL2NvbnRhaW5lcnMvbGFib3JhdG9yeS9zZXJ2aWNlX3dvcmtlci9iYWNrZ3JvdW5kX3N5bmMnO1xuXG5jb25zdCBWaWV3czogQXJyYXk8e1xuICBrZXk6IHN0cmluZyxcbiAgcGF0aDogc3RyaW5nLFxuICB0aXRsZUpwOiBzdHJpbmcsXG4gIHRpdGxlRW46IHN0cmluZyxcbiAgY29tcG9uZW50OiBSZWFjdC5Db21wb25lbnRUeXBlPGFueT4sXG4gIGxldmVsOiBudW1iZXJcbn0+ID0gW1xuICB7XG4gICAga2V5OiAnYWJvdXQnLFxuICAgIHBhdGg6ICcvJyxcbiAgICB0aXRsZUpwOiAn44GT44Gu44K144Kk44OI44Gr44Gk44GE44GmJyxcbiAgICB0aXRsZUVuOiAnQWJvdXQgdGhpcyBzaXRlJyxcbiAgICBjb21wb25lbnQ6IEFib3V0Q29udGFpbmVyLFxuICAgIGxldmVsOiAxLFxuICB9LFxuICB7XG4gICAga2V5OiAnbGFib3JhdG9yeScsXG4gICAgcGF0aDogJy9sYWJvcmF0b3J5JyxcbiAgICB0aXRsZUpwOiAn5a6f6aiT5a6kJyxcbiAgICB0aXRsZUVuOiAnTGFib3JhdG9yeScsXG4gICAgY29tcG9uZW50OiBMYWJvcmF0b3J5Q29udGFpbmVyLFxuICAgIGxldmVsOiAxLFxuICB9LFxuICB7XG4gICAga2V5OiAnc2VydmljZV93b3JrZXInLFxuICAgIHBhdGg6ICcvbGFib3JhdG9yeS9zZXJ2aWNlX3dvcmtlcicsXG4gICAgdGl0bGVKcDogJ+OCteODvOODk+OCueODr+ODvOOCq+ODvCcsXG4gICAgdGl0bGVFbjogJ1NlcnZpY2UgV29ya2VyJyxcbiAgICBjb21wb25lbnQ6IFNlcnZpY2VXb3JrZXJDb250YWluZXIsXG4gICAgbGV2ZWw6IDIsXG4gIH0sXG4gIHtcbiAgICBrZXk6ICdzZXJ2aWNlX3dvcmtlcl9jYWNoZScsXG4gICAgcGF0aDogJy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL2NhY2hlJyxcbiAgICB0aXRsZUpwOiAn44Kt44Oj44OD44K344OlJyxcbiAgICB0aXRsZUVuOiAnQ2FjaGUgQVBJJyxcbiAgICBjb21wb25lbnQ6IFNlcnZpY2VXb3JrZXJDYWNoZUNvbnRhaW5lcixcbiAgICBsZXZlbDogMyxcbiAgfSxcbiAge1xuICAgIGtleTogJ3NlcnZpY2Vfd29ya2VyX3B1c2gnLFxuICAgIHBhdGg6ICcvbGFib3JhdG9yeS9zZXJ2aWNlX3dvcmtlci9wdXNoJyxcbiAgICB0aXRsZUpwOiAn44OX44OD44K344Ol6YCa55+lJyxcbiAgICB0aXRsZUVuOiAnUHVzaCBBUEknLFxuICAgIGNvbXBvbmVudDogU2VydmljZVdvcmtlclB1c2hDb250YWluZXIsXG4gICAgbGV2ZWw6IDMsXG4gIH0sXG4gIHtcbiAgICBrZXk6ICdzZXJ2aWNlX3dvcmtlcl9zeW5jJyxcbiAgICBwYXRoOiAnL2xhYm9yYXRvcnkvc2VydmljZV93b3JrZXIvYmFja2dyb3VuZF9zeW5jJyxcbiAgICB0aXRsZUpwOiAn44OQ44OD44Kv44Kw44Op44Km44Oz44OJ5ZCM5pyfJyxcbiAgICB0aXRsZUVuOiAnQmFja2dyb3VuZCBTeW5jIEFQSScsXG4gICAgY29tcG9uZW50OiBTZXJ2aWNlV29ya2VyQmFja2dyb3VuZFN5bmNDb250YWluZXIsXG4gICAgbGV2ZWw6IDMsXG4gIH0sXG4gIHtcbiAgICBrZXk6ICdxcl9jb2RlJyxcbiAgICBwYXRoOiAnL2xhYm9yYXRvcnkvcXJfY29kZScsXG4gICAgdGl0bGVKcDogJ1FS44Kz44O844OJJyxcbiAgICB0aXRsZUVuOiAnUVIgQ29kZScsXG4gICAgY29tcG9uZW50OiBRckNvZGVDb250YWluZXIsXG4gICAgbGV2ZWw6IDIsXG4gIH0sXG5dO1xuXG5jb25zdCBtZW51TGlzdCA9IFZpZXdzLm1hcCgodmlldykgPT4gKHtcbiAgcGF0aDogdmlldy5wYXRoLFxuICB0aXRsZUpwOiB2aWV3LnRpdGxlSnAsXG4gIHRpdGxlRW46IHZpZXcudGl0bGVFbixcbiAgbGV2ZWw6IHZpZXcubGV2ZWwsXG59KSk7XG5cbmNvbnN0IFJvdXRlcyA9IChcbiAgPFJvdXRlcj5cbiAgICA8Q29tbW9uRnJhbWUgbWVudUxpc3Q9e21lbnVMaXN0fT5cbiAgICAgIHtWaWV3cy5tYXAoKHZpZXcpID0+IChcbiAgICAgICAgPFJvdXRlXG4gICAgICAgICAgY29tcG9uZW50PXt2aWV3LmNvbXBvbmVudH1cbiAgICAgICAgICBleGFjdFxuICAgICAgICAgIGtleT17dmlldy5wYXRofVxuICAgICAgICAgIHBhdGg9e3ZpZXcucGF0aH1cbiAgICAgICAgICBzdHJpY3RcbiAgICAgICAgLz5cbiAgICAgICkpfVxuICAgIDwvQ29tbW9uRnJhbWU+XG4gIDwvUm91dGVyPlxuKTtcblxuY29uc3QgZXh0cmFjdFBhdGggPSAoa2V5OiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICBjb25zdCB2aWV3ID0gVmlld3MuZmluZCgodmlldykgPT4gdmlldy5rZXkgPT09IGtleSk7XG4gIGlmICh2aWV3ID09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYE5vdCBmb3VuZDogJHtrZXl9YCk7XG4gIH1cbiAgcmV0dXJuIGAke3ZpZXcucGF0aH1gO1xufTtcbmNvbnN0IFNlcnZpY2VXb3JrZXJQYXRoOiBzdHJpbmcgPSBleHRyYWN0UGF0aCgnc2VydmljZV93b3JrZXInKTtcbmNvbnN0IFNlcnZpY2VXb3JrZXJDYWNoZVBhdGg6IHN0cmluZyA9IGV4dHJhY3RQYXRoKCdzZXJ2aWNlX3dvcmtlcl9jYWNoZScpO1xuY29uc3QgU2VydmljZVdvcmtlclB1c2hQYXRoOiBzdHJpbmcgPSBleHRyYWN0UGF0aCgnc2VydmljZV93b3JrZXJfcHVzaCcpO1xuY29uc3QgU2VydmljZVdvcmtlclN5bmNQYXRoOiBzdHJpbmcgPSBleHRyYWN0UGF0aCgnc2VydmljZV93b3JrZXJfc3luYycpO1xuY29uc3QgUXJDb2RlUGF0aDogc3RyaW5nID0gZXh0cmFjdFBhdGgoJ3FyX2NvZGUnKTtcblxuZXhwb3J0IHtcbiAgUm91dGVzLFxuICBRckNvZGVQYXRoLFxuICBTZXJ2aWNlV29ya2VyQ2FjaGVQYXRoLFxuICBTZXJ2aWNlV29ya2VyUGF0aCxcbiAgU2VydmljZVdvcmtlclB1c2hQYXRoLFxuICBTZXJ2aWNlV29ya2VyU3luY1BhdGgsXG59O1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgQWJzdHJhY3RDb250YWluZXIgfSBmcm9tICcuLi9hYnN0cmFjdF9jb250YWluZXInO1xuaW1wb3J0IHsgU2VydmljZVdvcmtlclBhdGggfSBmcm9tICcuLi8uLi9yb3V0ZXMnO1xuaW1wb3J0ICcuL3N0eWxlLnNjc3MnO1xuXG5pbnRlcmZhY2UgUHJvcHMge31cblxuaW50ZXJmYWNlIFN0YXRlIHt9XG5cbmNsYXNzIEFib3V0Q29udGFpbmVyIGV4dGVuZHMgQWJzdHJhY3RDb250YWluZXI8UHJvcHMsIFN0YXRlPiB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPGgxPuOBk+OBruOCteOCpOODiOOBq+OBpOOBhOOBpjwvaDE+XG4gICAgICAgIDxoMj7nm67nmoQ8L2gyPlxuICAgICAgICA8cD7jgZPjga7jgrXjgqTjg4jjga/ku6XkuIvjga7nm67nmoTjgaflhazplovjgZfjgabjgYTjgb7jgZnjgII8L3A+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICA8bGk+5paw44GX44GE5oqA6KGT44Gu44OG44K544OIPC9saT5cbiAgICAgICAgICA8bGk+44K544Kt44Or44K744OD44OI44Gu5YWs6ZaLPC9saT5cbiAgICAgICAgPC91bD5cblxuICAgICAgICA8aDI+6YGL5Za26ICF44Gr44Gk44GE44GmPC9oMj5cbiAgICAgICAgPHA+PHN0cm9uZz5oeWlyb21vcmk8L3N0cm9uZz4g44Go44GE44GG5ZCN5YmN44Gn5rS75YuV44GX44Gm44GE44KL44CBKEZyb250ZW5kIOOBjOWlveOBjeOBqinjg5Xjg6vjgrnjgr/jg4Pjgq/jgqjjg7Pjgrjjg4vjgqLjgafjgZnjgII8L3A+XG4gICAgICAgIDxwPjxhIGhyZWY9XCJodHRwczovL3FpaXRhLmNvbS9oeWlyb21vcmlcIj5RaWl0YTwvYT4g44KC44Gh44KH44GT44Gj44Go44Gg44GR5pu444GE44Gm44G+44GZ44CCPC9wPlxuXG4gICAgICAgIDxoMj7jgZPjga7jgrXjgqTjg4jjga7jgr3jg7zjgrk8L2gyPlxuICAgICAgICA8cD48YSBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL2h5aXJvbW9yaS9oeWlyb21vcmkuZ2l0aHViLmlvXCI+R2l0SHViPC9hPiDjgavjgYLjgorjgb7jgZnjgII8L3A+XG4gICAgICAgIDxwPuaKgOihk+eahOOBqueJueW+tOOBqOOBl+OBpuOBr+OAgeS7peS4i+OBruOBqOOBiuOCiuOBp+OBmeOAgjwvcD5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIDxsaT48c3Ryb25nPlNQQTwvc3Ryb25nPuOBp+S9nOOCieOCjOOBpuOBhOOCi+OBruOBp+OAgeiqreOBv+i+vOOBv+WujOS6huW+jOOBr+ODmuODvOOCuOmBt+enu+OBjOaXqeOBhOOBp+OBmeOAgjwvbGk+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgPExpbmsgdG89e1NlcnZpY2VXb3JrZXJQYXRofT5TZXJ2aWNlIFdvcmtlcjwvTGluaz5cbiAgICAgICAgICAgIOOCkuS9v+eUqOOBl+OBpuOBiuOCiuOAgeW/heimgeOBquODquOCveODvOOCueOCkuOCreODo+ODg+OCt+ODpeOBl+OBpuOBhOOCi+OBruOBp+OAgeWvvuW/nOOBl+OBpuOBhOOCi+ODluODqeOCpuOCtuOBruWgtOWQiOOBr+OCquODleODqeOCpOODs+OBp+OCgumWsuimp+OBp+OBjeOBvuOBmeOAglxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAg6Ieq5YiG44Gu5oqA6KGT5Yqb5ZCR5LiK44Gu44Gf44KB44GrXG4gICAgICAgICAgICA8c3Ryb25nPlR5cGVTY3JpcHQ8L3N0cm9uZz5cbiAgICAgICAgICAgIDxzdHJvbmc+UmVhY3Q8L3N0cm9uZz5cbiAgICAgICAgICAgIDxzdHJvbmc+V2VicGFjazwvc3Ryb25nPlxuICAgICAgICAgICAg44Gq44Gp44Gu44OZ44O844K544Go44Gq44KL44KC44Gu5Lul5aSW44Gv44CB44Op44Kk44OW44Op44Oq44KE44OV44Os44O844Og44Ov44O844Kv44Gq44Gp44G744G85L2/55So44GX44Gm44GE44G+44Gb44KT44CCXG4gICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IHsgQWJvdXRDb250YWluZXIgfTsiLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgeyBBYnN0cmFjdENvbnRhaW5lciB9IGZyb20gJy4uL2Fic3RyYWN0X2NvbnRhaW5lcic7XG5pbXBvcnQge1xuICBTZXJ2aWNlV29ya2VyUGF0aCxcbiAgUXJDb2RlUGF0aCxcbn0gZnJvbSAnLi4vLi4vcm91dGVzJztcbmltcG9ydCAnLi9zdHlsZS5zY3NzJztcblxuaW50ZXJmYWNlIFByb3BzIHt9XG5cbmludGVyZmFjZSBTdGF0ZSB7fVxuXG5jbGFzcyBMYWJvcmF0b3J5Q29udGFpbmVyIGV4dGVuZHMgQWJzdHJhY3RDb250YWluZXI8UHJvcHMsIFN0YXRlPiB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBpZD1cImxhYm9yYXRvcnktY29udGFpbmVyXCI+XG4gICAgICAgIDxoMT7lrp/pqJPlrqQ8L2gxPlxuICAgICAgICA8cD7mlrDjgZfjgYTmioDooZPjgoTmsJfjgavjgarjgaPjgZ/mioDooZPjga7lrp/pqJPjgavkvb/jgaPjgZ/jgoLjga7jga7ntLnku4vjg5rjg7zjgrjjgafjgZnjgII8L3A+XG4gICAgICAgIDxoMj7lrp/pqJPkuIDopqc8L2gyPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPjxMaW5rIHRvPXtTZXJ2aWNlV29ya2VyUGF0aH0+U2VydmljZSBXb3JrZXI8L0xpbms+PC9saT5cbiAgICAgICAgICA8bGk+PExpbmsgdG89e1FyQ29kZVBhdGh9PlFSIENvZGU8L0xpbms+PC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IHsgTGFib3JhdG9yeUNvbnRhaW5lciB9OyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IEFic3RyYWN0Q29udGFpbmVyIH0gZnJvbSAnLi4vLi4vYWJzdHJhY3RfY29udGFpbmVyJztcbmltcG9ydCB7XG4gIFNlcnZpY2VXb3JrZXJDYWNoZVBhdGgsXG4gIFNlcnZpY2VXb3JrZXJQdXNoUGF0aCxcbiAgU2VydmljZVdvcmtlclN5bmNQYXRoLFxufSBmcm9tICcuLi8uLi8uLi9yb3V0ZXMnO1xuaW1wb3J0ICcuL3N0eWxlLnNjc3MnO1xuXG5pbnRlcmZhY2UgUHJvcHMge31cblxuaW50ZXJmYWNlIFN0YXRlIHt9XG5cbmNsYXNzIFNlcnZpY2VXb3JrZXJDb250YWluZXIgZXh0ZW5kcyBBYnN0cmFjdENvbnRhaW5lcjxQcm9wcywgU3RhdGU+IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGlkPVwic2VydmljZS13b3JrZXItY29udGFpbmVyXCI+XG4gICAgICAgIDxoMT5TZXJ2aWNlIFdvcmtlcjwvaDE+XG4gICAgICAgIDxoMj5TZXJ2aWNlIFdvcmtlciDjgajjga/vvJ88L2gyPlxuICAgICAgICA8cD5cbiAgICAgICAgICDjg5bjg6njgqbjgrbjga7jg5Djg4Pjgq/jgrDjg6njg7Pjg4njgaflrp/ooYzjgZXjgozjgosgSmF2YVNjcmlwdCDjga7lrp/ooYznkrDlooPjgafjgZnjgIJcbiAgICAgICAgICDjg5rjg7zjgrjjga7jg6njgqTjg5XjgrXjgqTjgq/jg6vjgajjga/jgIzliKXjgI3jga7jg6njgqTjg5XjgrXjgqTjgq/jg6vjgpLmjIHjgaHjgb7jgZnjgIJcbiAgICAgICAgPC9wPlxuICAgICAgICA8aDI+U2VydmljZSBXb3JrZXIg44Gu5qmf6IO9PC9oMj5cbiAgICAgICAgPHA+5Lul5LiL44GuQVBJ44GM5o+Q5L6b44GV44KM44Gm44GE44G+44GZ44CCPC9wPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPjxMaW5rIHRvPXtTZXJ2aWNlV29ya2VyQ2FjaGVQYXRofT5DYWNoZSBBUEk8L0xpbms+PC9saT5cbiAgICAgICAgICA8bGk+PExpbmsgdG89e1NlcnZpY2VXb3JrZXJQdXNoUGF0aH0+UHVzaCBBUEk8L0xpbms+PC9saT5cbiAgICAgICAgICA8bGk+PExpbmsgdG89e1NlcnZpY2VXb3JrZXJTeW5jUGF0aH0+QmFja2dyb3VuZCBTeW5jIEFQSTwvTGluaz48L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgICA8aDI+44KC44Gj44Go6Kmz44GX44GP55+l44KK44Gf44GE5aC05ZCIPC9oMj57JyAnfVxuICAgICAgICA8cD7ku6XkuIvjga4gUWlpdGEg44Gu6KiY5LqL44KS44GU6Kan44GP44Gg44GV44GE44CCPC9wPlxuICAgICAgICA8cD48YSBocmVmPVwiaHR0cHM6Ly9xaWl0YS5jb20vaHlpcm9tb3JpL2l0ZW1zLzc5ODZhNzI1NTQxYzk3ZGE4NzhkXCI+U2VydmljZSBXb3JrZXIg44Oh44OiIC0gUWlpdGE8L2E+PC9wPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgeyBTZXJ2aWNlV29ya2VyQ29udGFpbmVyIH07IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtcbiAgQ2xvc2VJY29uLFxuICBFbnZlbG9wZUljb24sXG4gIEdpdEh1Ykljb24sXG4gIE1lbnVJY29uLFxuICBUd2l0dGVySWNvbixcbn0gZnJvbSAnLi4vLi4vcHJlc2VudGVycy9pY29uJztcbmltcG9ydCB7IENvbW1vbkZyYW1lTWVudUl0ZW0gfSBmcm9tICcuL2NvbW1vbl9mcmFtZV9tZW51X2l0ZW0nO1xuaW1wb3J0ICcuL2NvbW1vbl9mcmFtZS5zY3NzJztcblxuaW50ZXJmYWNlIE1lbnUge1xuICBwYXRoOiBzdHJpbmcsXG4gIHRpdGxlSnA6IHN0cmluZyxcbiAgdGl0bGVFbjogc3RyaW5nLFxuICBsZXZlbDogbnVtYmVyXG59XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIGNoaWxkcmVuOiBBcnJheTxSZWFjdC5SZWFjdE5vZGU+LFxuICBtZW51TGlzdDogQXJyYXk8TWVudT5cbn1cblxuaW50ZXJmYWNlIFN0YXRlIHtcbiAgc2hvd01lbnU6IGJvb2xlYW4sXG59XG5cbmNsYXNzIENvbW1vbkZyYW1lIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PFByb3BzLCBTdGF0ZT4ge1xuICBzdGF0ZTogU3RhdGUgPSB7IHNob3dNZW51OiBmYWxzZSB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGNoaWxkcmVuLCBtZW51TGlzdCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IHNob3dNZW51IH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgY29uc3QgY3VycmVudFBhdGg6IHN0cmluZyA9IHdpbmRvdy5sb2NhdGlvbi5oYXNoLnN1YnN0cigxKTtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBpZD1cImNvbW1vbi1mcmFtZVwiPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgaWQ9XCJjb21tb24tZnJhbWUtY29udGVudFwiXG4gICAgICAgICAgY2xhc3NOYW1lPXtzaG93TWVudSA/ICdzaG93LW1lbnUnIDogJyd9XG4gICAgICAgID5cbiAgICAgICAgICA8ZGl2IGlkPVwiY29tbW9uLWZyYW1lLWNvbnRlbnQtaW5uZXJcIj5cbiAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHshc2hvd01lbnUgJiYgKFxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImNvbW1vbi1mcmFtZS1oZWFkZXItbWVudS1idXR0b25cIlxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gdGhpcy5zZXRTdGF0ZSh7IHNob3dNZW51OiB0cnVlIH0pfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxNZW51SWNvbiAvPlxuICAgICAgICAgICAgPHNwYW4+TWVudTwvc3Bhbj5cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgKX1cbiAgICAgICAge3Nob3dNZW51ICYmIChcbiAgICAgICAgICA8ZGl2IGlkPVwiY29tbW9uLWZyYW1lLW1lbnVcIj5cbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY29tbW9uLWZyYW1lLWhlYWRlci1tZW51LWJ1dHRvblwiXG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHRoaXMuc2V0U3RhdGUoeyBzaG93TWVudTogZmFsc2UgfSl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxDbG9zZUljb24gLz5cbiAgICAgICAgICAgICAgPHNwYW4+Q2xvc2U8L3NwYW4+XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIHttZW51TGlzdC5tYXAoKG1lbnU6IE1lbnUpID0+IChcbiAgICAgICAgICAgICAgPENvbW1vbkZyYW1lTWVudUl0ZW1cbiAgICAgICAgICAgICAgICBrZXk9e21lbnUucGF0aH1cbiAgICAgICAgICAgICAgICBsZXZlbD17bWVudS5sZXZlbH1cbiAgICAgICAgICAgICAgICBzZWxlY3RlZD17Y3VycmVudFBhdGggPT09IG1lbnUucGF0aH1cbiAgICAgICAgICAgICAgICBwYXRoPXttZW51LnBhdGh9XG4gICAgICAgICAgICAgICAgdGl0bGVKcD17bWVudS50aXRsZUpwfVxuICAgICAgICAgICAgICAgIHRpdGxlRW49e21lbnUudGl0bGVFbn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuICAgICAgICA8ZGl2IGlkPVwiY29tbW9uLWZyYW1lLWZvb3RlclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGVmdC1jb250ZW50XCI+XG4gICAgICAgICAgICB7Lyo8VHdpdHRlckljb24gLz4qL31cbiAgICAgICAgICAgIDxhIGhyZWY9XCJtYWlsdG86aHlpcm9tb3JpQGdtYWlsLmNvbVwiPlxuICAgICAgICAgICAgICA8RW52ZWxvcGVJY29uIC8+XG4gICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICA8YVxuICAgICAgICAgICAgICBocmVmPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9oeWlyb21vcmlcIlxuICAgICAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8VHdpdHRlckljb24gLz5cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDxhXG4gICAgICAgICAgICAgIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vaHlpcm9tb3JpXCJcbiAgICAgICAgICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPEdpdEh1Ykljb24gLz5cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJpZ2h0LWNvbnRlbnRcIj4oQykgMjAxOCBoeWlyb21vcmk8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9O1xufVxuXG5leHBvcnQge1xuICBDb21tb25GcmFtZSxcbn07XG4iLCJpbXBvcnQgeyByZW5kZXIgfSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IHsgUm91dGVzIH0gZnJvbSAnLi9yb3V0ZXMnO1xuaW1wb3J0ICcuL2luZGV4LnNjc3MnO1xuXG5pZiAoJ3NlcnZpY2VXb3JrZXInIGluIG5hdmlnYXRvcikge1xuICBuYXZpZ2F0b3JcbiAgICAuc2VydmljZVdvcmtlclxuICAgIC5yZWdpc3RlcignL3NlcnZpY2Vfd29ya2VyLmpzJylcbiAgICAudGhlbigocmVnaXN0cmF0aW9uOiBhbnkpID0+IGNvbnNvbGUubG9nKCdTZXJ2aWNlV29ya2VyIHNjb3BlOicsIHJlZ2lzdHJhdGlvbi5zY29wZSkpXG4gICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmxvZygnU2VydmljZVdvcmtlciByZWdpc3RyYXRpb24gZmFpbGVkOiAnLCBlcnJvcikpO1xufVxuXG5yZW5kZXIoUm91dGVzLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBwJykpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==