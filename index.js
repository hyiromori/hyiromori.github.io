!function(e){function n(n){for(var r,a,i=n[0],c=n[1],s=n[2],u=0,p=[];u<i.length;u++)a=i[u],o[a]&&p.push(o[a][0]),o[a]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(e[r]=c[r]);for(m&&m(n);p.length;)p.shift()();return l.push.apply(l,s||[]),t()}function t(){for(var e,n=0;n<l.length;n++){for(var t=l[n],r=!0,i=1;i<t.length;i++){var c=t[i];0!==o[c]&&(r=!1)}r&&(l.splice(n--,1),e=a(a.s=t[0]))}return e}var r={},o={0:0},l=[];function a(n){if(r[n])return r[n].exports;var t=r[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.m=e,a.c=r,a.d=function(e,n,t){a.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,n){if(1&n&&(e=a(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)a.d(t,r,function(n){return e[n]}.bind(null,r));return t},a.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(n,"a",n),n},a.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},a.p="";var i=window.webpackJsonp=window.webpackJsonp||[],c=i.push.bind(i);i.push=n,i=i.slice();for(var s=0;s<i.length;s++)n(i[s]);var m=c;l.push([91,1]),t()}({42:function(e,n,t){var r=t(43);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},43:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#common-frame {\n  bottom: 0;\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0; }\n  #common-frame .common-frame-header-menu-button {\n    background-color: #fff;\n    border-radius: 4px;\n    box-shadow: -8px 8px 8px 0 #fff;\n    height: 28px;\n    padding: 8px 12px 0 0;\n    position: absolute;\n    right: 0;\n    top: 0; }\n    #common-frame .common-frame-header-menu-button span {\n      margin-left: 4px; }\n  #common-frame #common-frame-menu {\n    background-color: #fff;\n    border-left: 1px solid #888;\n    bottom: 32px;\n    max-width: 320px;\n    opacity: 0.95;\n    overflow-y: scroll;\n    padding: 42px 16px 8px 16px;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 100%; }\n    #common-frame #common-frame-menu .menu-item .menu-button {\n      display: block;\n      padding: 6px 16px;\n      text-decoration: none; }\n      #common-frame #common-frame-menu .menu-item .menu-button.level1 .title-jp, #common-frame #common-frame-menu .menu-item .menu-button.level1 .title-en, #common-frame #common-frame-menu .menu-item .menu-button.level2 .title-jp, #common-frame #common-frame-menu .menu-item .menu-button.level2 .title-en, #common-frame #common-frame-menu .menu-item .menu-button.level3 .title-jp, #common-frame #common-frame-menu .menu-item .menu-button.level3 .title-en {\n        line-height: calc(1em + 2px); }\n      #common-frame #common-frame-menu .menu-item .menu-button .title-en {\n        color: #888; }\n      #common-frame #common-frame-menu .menu-item .menu-button.level1 {\n        padding-left: 8px; }\n        #common-frame #common-frame-menu .menu-item .menu-button.level1 .title-jp {\n          font-size: 18px; }\n        #common-frame #common-frame-menu .menu-item .menu-button.level1 .title-en {\n          font-size: 14px; }\n      #common-frame #common-frame-menu .menu-item .menu-button.level2 {\n        padding-left: 24px; }\n        #common-frame #common-frame-menu .menu-item .menu-button.level2 .title-jp {\n          font-size: 16px; }\n        #common-frame #common-frame-menu .menu-item .menu-button.level2 .title-en {\n          font-size: 12px; }\n      #common-frame #common-frame-menu .menu-item .menu-button.level3 {\n        padding-left: 42px; }\n        #common-frame #common-frame-menu .menu-item .menu-button.level3 .title-jp {\n          font-size: 14px; }\n        #common-frame #common-frame-menu .menu-item .menu-button.level3 .title-en {\n          font-size: 10px; }\n      #common-frame #common-frame-menu .menu-item .menu-button.marked {\n        background-color: #ff7701; }\n        #common-frame #common-frame-menu .menu-item .menu-button.marked .title-jp {\n          color: #fff; }\n        #common-frame #common-frame-menu .menu-item .menu-button.marked .title-en {\n          color: #fff; }\n  #common-frame #common-frame-content {\n    bottom: 48px;\n    left: 0;\n    padding: 24px 16px 16px 16px;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    position: absolute;\n    right: 0;\n    top: 0; }\n    #common-frame #common-frame-content #common-frame-content-inner {\n      margin: 0 auto;\n      font-size: 16px;\n      max-width: 50em;\n      width: 100%; }\n  #common-frame #common-frame-footer {\n    background-color: #333;\n    bottom: 0;\n    height: 48px;\n    left: 0;\n    padding: 0 16px;\n    position: absolute;\n    right: 0; }\n    #common-frame #common-frame-footer .left-content {\n      float: left; }\n      #common-frame #common-frame-footer .left-content a {\n        background-color: #fff;\n        border-radius: 50%;\n        color: #fff;\n        display: inline-block;\n        font-size: 22px;\n        height: 32px;\n        line-height: 32px;\n        margin: 8px 8px 8px 0;\n        text-align: center;\n        width: 32px; }\n    #common-frame #common-frame-footer .right-content {\n      float: right;\n      font-size: 12px;\n      color: #fff;\n      line-height: 48px; }\n","",{version:3,sources:["/Users/moriya_private/projects/github_io/src/app/containers/common_frame/app/containers/common_frame/index.scss","/Users/moriya_private/projects/github_io/src/app/containers/common_frame/app/common/colors.scss"],names:[],mappings:"AAEA;EACE,UAAS;EACT,QAAO;EACP,gBAAe;EACf,SAAQ;EACR,OAAM,EAwJP;EA7JD;IAQI,uBCHQ;IDIR,mBAAkB;IAClB,gCCLQ;IDMR,aAAY;IACZ,sBAAqB;IACrB,mBAAkB;IAClB,SAAQ;IACR,OAAM,EAKP;IApBH;MAkBM,iBAAgB,EACjB;EAnBL;IAuBI,uBClBQ;IDmBR,4BCvBO;IDwBP,aAAY;IACZ,iBAAgB;IAChB,cAAa;IACb,mBAAkB;IAClB,4BAA2B;IAC3B,mBAAkB;IAClB,SAAQ;IACR,OAAM;IACN,YAAW,EAuEZ;IAxGH;MAqCQ,eAAc;MACd,kBAAiB;MACjB,sBAAqB,EA+DtB;MAtGP;QA0CU,6BAA4B,EAC7B;MA3CT;QA8CU,YC7CC,ED8CF;MA/CT;QAkDU,kBAAiB,EAWlB;QA7DT;UAsDY,gBAAe,EAChB;QAvDX;UA2DY,gBAAe,EAChB;MA5DX;QAgEU,mBAAkB,EAWnB;QA3ET;UAoEY,gBAAe,EAChB;QArEX;UAyEY,gBAAe,EAChB;MA1EX;QA8EU,mBAAkB,EAWnB;QAzFT;UAkFY,gBAAe,EAChB;QAnFX;UAuFY,gBAAe,EAChB;MAxFX;QA4FU,0BCzFM,EDkGP;QArGT;UA+FY,YC1FA,ED2FD;QAhGX;UAmGY,YC9FA,ED+FD;EApGX;IA2GI,aAAY;IACZ,QAAO;IACP,6BAA4B;IAC5B,mBAAkB;IAClB,mBAAkB;IAClB,mBAAkB;IAClB,SAAQ;IACR,OAAM,EAQP;IA1HH;MAqHM,eAAc;MACd,gBAAe;MACf,gBAAe;MACf,YAAW,EACZ;EAzHL;IA6HI,uBC9HY;ID+HZ,UAAS;IACT,aAAY;IACZ,QAAO;IACP,gBAAe;IACf,mBAAkB;IAClB,SAAQ,EAyBT;IA5JH;MAsIM,YAAW,EAcZ;MApJL;QAyIQ,uBCpII;QDqIJ,mBAAkB;QAClB,YCtII;QDuIJ,sBAAqB;QACrB,gBAAe;QACf,aAAY;QACZ,kBAAiB;QACjB,sBAAqB;QACrB,mBAAkB;QAClB,YAAW,EACZ;IAnJP;MAuJM,aAAY;MACZ,gBAAe;MACf,YCpJM;MDqJN,kBAAiB,EAClB",file:"index.scss",sourcesContent:["@import '../../common/colors';\n\n#common-frame {\n  bottom: 0;\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0;\n\n  .common-frame-header-menu-button {\n    background-color: $white;\n    border-radius: 4px;\n    box-shadow: -8px 8px 8px 0 $white;\n    height: 28px;\n    padding: 8px 12px 0 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n\n    span {\n      margin-left: 4px;\n    }\n  }\n\n  #common-frame-menu {\n    background-color: $white;\n    border-left: 1px solid $gray;\n    bottom: 32px;\n    max-width: 320px;\n    opacity: 0.95;\n    overflow-y: scroll;\n    padding: 42px 16px 8px 16px;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 100%;\n\n    .menu-item {\n      .menu-button {\n        display: block;\n        padding: 6px 16px;\n        text-decoration: none;\n\n        %title-line-height {\n          line-height: calc(1em + 2px);\n        }\n\n        .title-en {\n          color: $gray;\n        }\n\n        &.level1 {\n          padding-left: 8px;\n\n          .title-jp {\n            @extend %title-line-height;\n            font-size: 18px;\n          }\n\n          .title-en {\n            @extend %title-line-height;\n            font-size: 14px;\n          }\n        }\n\n        &.level2 {\n          padding-left: 24px;\n\n          .title-jp {\n            @extend %title-line-height;\n            font-size: 16px;\n          }\n\n          .title-en {\n            @extend %title-line-height;\n            font-size: 12px;\n          }\n        }\n\n        &.level3 {\n          padding-left: 42px;\n\n          .title-jp {\n            @extend %title-line-height;\n            font-size: 14px;\n          }\n\n          .title-en {\n            @extend %title-line-height;\n            font-size: 10px;\n          }\n        }\n\n        &.marked {\n          background-color: $orange;\n\n          .title-jp {\n            color: $white;\n          }\n\n          .title-en {\n            color: $white;\n          }\n        }\n      }\n    }\n  }\n\n  #common-frame-content {\n    bottom: 48px;\n    left: 0;\n    padding: 24px 16px 16px 16px;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    position: absolute;\n    right: 0;\n    top: 0;\n\n    #common-frame-content-inner {\n      margin: 0 auto;\n      font-size: 16px;\n      max-width: 50em;\n      width: 100%;\n    }\n  }\n\n  #common-frame-footer {\n    background-color: $gray-dark;\n    bottom: 0;\n    height: 48px;\n    left: 0;\n    padding: 0 16px;\n    position: absolute;\n    right: 0;\n\n    .left-content {\n      float: left;\n\n      a {\n        background-color: $white;\n        border-radius: 50%;\n        color: $white;\n        display: inline-block;\n        font-size: 22px;\n        height: 32px;\n        line-height: 32px;\n        margin: 8px 8px 8px 0;\n        text-align: center;\n        width: 32px;\n      }\n    }\n\n    .right-content {\n      float: right;\n      font-size: 12px;\n      color: $white;\n      line-height: 48px;\n    }\n  }\n}\n\n","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},45:function(e,n,t){var r=t(46);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},46:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"","",{version:3,sources:[],names:[],mappings:"",file:"style.scss",sourceRoot:""}])},47:function(e,n,t){var r=t(48);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},48:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"","",{version:3,sources:[],names:[],mappings:"",file:"style.scss",sourceRoot:""}])},49:function(e,n,t){var r=t(50);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},50:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#laboratory-container h2 {\n  text-align: center; }\n","",{version:3,sources:["/Users/moriya_private/projects/github_io/src/app/containers/laboratory/app/containers/laboratory/style.scss"],names:[],mappings:"AAAA;EAEI,mBAAkB,EACnB",file:"style.scss",sourcesContent:["#laboratory-container {\n  h2 {\n    text-align: center;\n  }\n}\n"],sourceRoot:""}])},72:function(e,n,t){var r=t(73);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},73:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#qr-code-container #qr-code-image-wrapper {\n  text-align: center; }\n","",{version:3,sources:["/Users/moriya_private/projects/github_io/src/app/containers/laboratory/qr_code/app/containers/laboratory/qr_code/style.scss"],names:[],mappings:"AAEA;EAEI,mBAAkB,EACnB",file:"style.scss",sourcesContent:["@import '../../../common/colors';\n\n#qr-code-container {\n  #qr-code-image-wrapper {\n    text-align: center;\n  }\n}\n"],sourceRoot:""}])},74:function(e,n,t){var r=t(75);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},75:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,".text-area-presenter .text-area-label {\n  height: 24px; }\n\n.text-area-presenter textarea {\n  background-color: #fff;\n  border: 1px solid #888;\n  min-height: calc(100% - 24px);\n  padding: 4px 8px;\n  resize: vertical;\n  width: 100%; }\n","",{version:3,sources:["/Users/moriya_private/projects/github_io/src/app/presenters/app/presenters/text_area.scss","/Users/moriya_private/projects/github_io/src/app/presenters/app/common/colors.scss"],names:[],mappings:"AAEA;EAEI,aAAY,EACb;;AAHH;EAMI,uBCDQ;EDER,uBCNO;EDOP,8BAA6B;EAC7B,iBAAgB;EAChB,iBAAgB;EAChB,YAAW,EACZ",file:"text_area.scss",sourcesContent:["@import '../common/colors';\n\n.text-area-presenter {\n  .text-area-label {\n    height: 24px;\n  }\n\n  textarea {\n    background-color: $white;\n    border: 1px solid $gray;\n    min-height: calc(100% - 24px);\n    padding: 4px 8px;\n    resize: vertical;\n    width: 100%;\n  }\n}\n","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},76:function(e,n,t){var r=t(77);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},77:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"","",{version:3,sources:[],names:[],mappings:"",file:"style.scss",sourceRoot:""}])},78:function(e,n,t){var r=t(79);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},79:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"","",{version:3,sources:[],names:[],mappings:"",file:"style.scss",sourceRoot:""}])},80:function(e,n,t){var r=t(81);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},81:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,".button-presenter {\n  background-color: #ff7701;\n  border-radius: 0;\n  border: 1px solid #ff7701;\n  color: #fff;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 14px;\n  height: 28px;\n  line-height: 28px;\n  margin: 0;\n  padding: 0 16px;\n  position: relative;\n  text-align: center; }\n  .button-presenter.disable {\n    opacity: 0.5; }\n","",{version:3,sources:["/Users/moriya_private/projects/github_io/src/app/presenters/app/presenters/button.scss","/Users/moriya_private/projects/github_io/src/app/presenters/app/common/colors.scss"],names:[],mappings:"AAEA;EACE,0BCEc;EDDd,iBAAgB;EAChB,0BCAc;EDCd,YCCU;EDAV,gBAAe;EACf,sBAAqB;EACrB,gBAAe;EACf,aAAY;EACZ,kBAAiB;EACjB,UAAS;EACT,gBAAe;EACf,mBAAkB;EAClB,mBAAkB,EAKnB;EAlBD;IAgBI,aAAY,EACb",file:"button.scss",sourcesContent:["@import '../common/colors';\n\n.button-presenter {\n  background-color: $orange;\n  border-radius: 0;\n  border: 1px solid $orange;\n  color: $white;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 14px;\n  height: 28px;\n  line-height: 28px;\n  margin: 0;\n  padding: 0 16px;\n  position: relative;\n  text-align: center;\n\n  &.disable {\n    opacity: 0.5;\n  }\n}","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},82:function(e,n,t){var r=t(83);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},83:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,".text-input {\n  width: 100%; }\n  .text-input .text-input-label, .text-input input {\n    width: 100%; }\n  .text-input .text-input-label {\n    padding: 0 4px 2px 4px; }\n  .text-input input {\n    border-radius: 4px;\n    border: 1px solid #ccc;\n    font-size: 14px;\n    padding: 4px 8px; }\n","",{version:3,sources:["/Users/moriya_private/projects/github_io/src/app/presenters/app/presenters/text_input.scss","/Users/moriya_private/projects/github_io/src/app/presenters/app/common/colors.scss"],names:[],mappings:"AAEA;EACE,YAAW,EAgBZ;EAjBD;IAII,YAAW,EACZ;EALH;IAQI,uBAAsB,EACvB;EATH;IAYI,mBAAkB;IAClB,uBCba;IDcb,gBAAe;IACf,iBAAgB,EACjB",file:"text_input.scss",sourcesContent:["@import '../common/colors';\n\n.text-input {\n  width: 100%;\n\n  .text-input-label, input {\n    width: 100%;\n  }\n\n  .text-input-label {\n    padding: 0 4px 2px 4px;\n  }\n\n  input {\n    border-radius: 4px;\n    border: 1px solid $gray-light;\n    font-size: 14px;\n    padding: 4px 8px;\n  }\n}","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},84:function(e,n,t){var r=t(85);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},85:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#service-worker-push-container .request-permission-button {\n  margin-top: 8px; }\n\n#service-worker-push-container .subscription-info {\n  font-size: 10px;\n  height: 240px;\n  margin-top: 8px; }\n","",{version:3,sources:["/Users/moriya_private/projects/github_io/src/app/containers/laboratory/service_worker/push_notification/app/containers/laboratory/service_worker/push_notification/style.scss"],names:[],mappings:"AAAA;EAEI,gBAAe,EAChB;;AAHH;EAMI,gBAAe;EACf,cAAa;EACb,gBAAe,EAChB",file:"style.scss",sourcesContent:["#service-worker-push-container {\n  .request-permission-button {\n    margin-top: 8px;\n  }\n\n  .subscription-info {\n    font-size: 10px;\n    height: 240px;\n    margin-top: 8px;\n  }\n}\n"],sourceRoot:""}])},86:function(e,n,t){var r=t(87);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},87:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#service-worker-background-sync-container div {\n  margin: 4px 0; }\n\n#service-worker-background-sync-container table {\n  width: 100%; }\n  #service-worker-background-sync-container table .table-id-column {\n    width: 40px; }\n","",{version:3,sources:["/Users/moriya_private/projects/github_io/src/app/containers/laboratory/service_worker/background_sync/app/containers/laboratory/service_worker/background_sync/style.scss"],names:[],mappings:"AAAA;EAEI,cAAa,EACd;;AAHH;EAMI,YAAW,EAKZ;EAXH;IASM,YAAW,EACZ",file:"style.scss",sourcesContent:["#service-worker-background-sync-container {\n  div {\n    margin: 4px 0;\n  }\n\n  table {\n    width: 100%;\n\n    .table-id-column {\n      width: 40px;\n    }\n  }\n}\n"],sourceRoot:""}])},89:function(e,n,t){var r=t(90);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},90:function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"*, *:before, *:after {\n  background-color: transparent;\n  border: 0 solid #888;\n  box-sizing: border-box;\n  color: #000;\n  font-size: 16px;\n  font-weight: normal;\n  line-height: 1.5;\n  margin: 0;\n  padding: 0;\n  text-decoration: none;\n  word-wrap: break-word; }\n\nh1, h2, h3, h4, h5, h6, ul, ol {\n  margin-top: 16px; }\n\np {\n  margin-top: 8px; }\n\nh1 {\n  font-weight: 600;\n  font-size: 24px;\n  text-align: center; }\n\nh2 {\n  font-weight: 600;\n  font-size: 20px; }\n\nh3 {\n  font-weight: 700;\n  font-size: 18px; }\n\nh4 {\n  font-weight: 700;\n  font-size: 14px; }\n\nh5 {\n  font-weight: 800;\n  font-size: 12px; }\n\nh6 {\n  font-weight: 800;\n  font-size: 10px; }\n\np {\n  padding-left: 1em; }\n\na {\n  color: #009050;\n  text-decoration: underline; }\n\nstrong {\n  background-color: #eee;\n  display: inline-block;\n  font-weight: 800;\n  margin: 1px 4px;\n  padding: 1px 4px; }\n\nbutton:focus {\n  outline: none; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  table-layout: fixed; }\n  table th, table td {\n    padding: 4px 8px;\n    border: 1px solid #888; }\n\nul, ol {\n  padding-left: 24px;\n  width: 100%; }\n  ul li, ol li {\n    margin-top: 4px; }\n\n.frame {\n  border: 1px solid #ccc;\n  margin: 16px;\n  padding: 16px;\n  width: calc(100% - 32px); }\n","",{version:3,sources:["/Users/moriya_private/projects/github_io/src/app/app/index.scss","/Users/moriya_private/projects/github_io/src/app/app/common/colors.scss"],names:[],mappings:"AAEA;EACE,8BAA6B;EAC7B,qBCDS;EDET,uBAAsB;EACtB,YCNU;EDOV,gBAAe;EACf,oBAAmB;EACnB,iBAAgB;EAChB,UAAS;EACT,WAAU;EACV,sBAAqB;EACrB,sBAAqB,EACtB;;AAED;EACE,iBAAgB,EACjB;;AAED;EACE,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe;EACf,mBAAkB,EACnB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,kBAAiB,EAClB;;AAED;EACE,eCxDa;EDyDb,2BAA0B,EAC3B;;AAED;EACE,uBC3DW;ED4DX,sBAAqB;EACrB,iBAAgB;EAChB,gBAAe;EACf,iBAAgB,EACjB;;AAED;EACE,cAAa,EACd;;AAED;EACE,0BAAyB;EACzB,kBAAiB;EACjB,oBAAmB,EAMpB;EATD;IAMI,iBAAgB;IAChB,uBChFO,EDiFR;;AAGH;EACE,mBAAkB;EAClB,YAAW,EAKZ;EAPD;IAKI,gBAAe,EAChB;;AAGH;EACE,uBC/Fe;EDgGf,aAAY;EACZ,cAAa;EACb,yBAAwB,EACzB",file:"index.scss",sourcesContent:["@import './common/colors';\n\n*, *:before, *:after {\n  background-color: transparent;\n  border: 0 solid $gray;\n  box-sizing: border-box;\n  color: $black;\n  font-size: 16px;\n  font-weight: normal;\n  line-height: 1.5;\n  margin: 0;\n  padding: 0;\n  text-decoration: none;\n  word-wrap: break-word;\n}\n\nh1, h2, h3, h4, h5, h6, ul, ol {\n  margin-top: 16px;\n}\n\np {\n  margin-top: 8px;\n}\n\nh1 {\n  font-weight: 600;\n  font-size: 24px;\n  text-align: center;\n}\n\nh2 {\n  font-weight: 600;\n  font-size: 20px;\n}\n\nh3 {\n  font-weight: 700;\n  font-size: 18px;\n}\n\nh4 {\n  font-weight: 700;\n  font-size: 14px;\n}\n\nh5 {\n  font-weight: 800;\n  font-size: 12px;\n}\n\nh6 {\n  font-weight: 800;\n  font-size: 10px;\n}\n\np {\n  padding-left: 1em;\n}\n\na {\n  color: $green;\n  text-decoration: underline;\n}\n\nstrong {\n  background-color: $silver;\n  display: inline-block;\n  font-weight: 800;\n  margin: 1px 4px;\n  padding: 1px 4px;\n}\n\nbutton:focus {\n  outline: none;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  table-layout: fixed;\n\n  th, td {\n    padding: 4px 8px;\n    border: 1px solid $gray;\n  }\n}\n\nul, ol {\n  padding-left: 24px;\n  width: 100%;\n\n  li {\n    margin-top: 4px;\n  }\n}\n\n.frame {\n  border: 1px solid $gray-light;\n  margin: 16px;\n  padding: 16px;\n  width: calc(100% - 32px);\n}","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},91:function(e,n,t){"use strict";t.r(n);var r=t(27),o=t(0),l=t(94),a=t(93),i=t(92),c=t(11),s=t(7),m=t(14),u=t(18);s.b.add(m.c);const p=()=>o.createElement(c.a,{icon:"times"});s.b.add(m.a);const A=()=>o.createElement(c.a,{icon:"bars"});s.b.add(m.b);const d=()=>o.createElement(c.a,{icon:"envelope"});s.b.add(u.a);const h=()=>o.createElement(c.a,{icon:["fab","twitter"]});s.b.add(u.a);const E=()=>o.createElement(c.a,{icon:["fab","github"]});var g=t(28);const f=()=>{const e=g.os.family;return"iOS"===e||"Android"===e};t(42);class x extends o.Component{setState(e,n){console.log("Update state:",e),super.setState(e,n)}}t(45);t(47);t(49);var b=t(29);t(72),t(74);class B extends o.Component{render(){const{children:e,className:n,label:t,onChange:r}=this.props;return o.createElement("div",{className:`text-area-presenter ${n}`},t&&o.createElement("div",{className:"text-area-label"},t),o.createElement("textarea",{onChange:e=>{const n=e.target.value;"string"==typeof n&&r(n)},value:e||""}))}}B.defaultProps={className:"",label:""};class v{}v.get=(e=>localStorage.getItem(e)),v.set=((e,n)=>localStorage.setItem(e,n)),v.remove=(e=>localStorage.removeItem(e));const C="qr_code/qrText";t(76);t(78);const y="serviceWorker"in navigator;t(80);class k extends o.Component{render(){const{active:e,children:n,className:t,onClick:r}=this.props;return o.createElement("button",{className:`button-presenter ${t} ${e?"":"disable"}`,onClick:e?r:null},n)}}k.defaultProps={active:!0,className:""};t(82);const w=e=>{const{className:n,label:t,maxLength:r,onChangeText:l,password:a,placeHolder:i,value:c}=e;return o.createElement("div",{className:`text-input ${n}`},t&&o.createElement("div",{className:"text-input-label"},t),o.createElement("input",{placeholder:i,type:a?"password":"text",onChange:e=>l(e.target.value),maxLength:r,value:c||""}))};t(84);var I=function(e,n,t,r){return new(t||(t=Promise))(function(o,l){function a(e){try{c(r.next(e))}catch(e){l(e)}}function i(e){try{c(r.throw(e))}catch(e){l(e)}}function c(e){e.done?o(e.value):new t(function(n){n(e.value)}).then(a,i)}c((r=r.apply(e,n||[])).next())})};const _="serviceWorker"in navigator&&"PushManager"in window,S=_?navigator.serviceWorker:null,$=e=>{const n=(e+"=".repeat((4-e.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),t=window.atob(n),r=new Uint8Array(t.length);for(let e=0;e<t.length;++e)r[e]=t.charCodeAt(e);return r};t(86);var D=function(e,n,t,r){return new(t||(t=Promise))(function(o,l){function a(e){try{c(r.next(e))}catch(e){l(e)}}function i(e){try{c(r.throw(e))}catch(e){l(e)}}function c(e){e.done?o(e.value):new t(function(n){n(e.value)}).then(a,i)}c((r=r.apply(e,n||[])).next())})};const M="serviceWorker"in navigator?navigator.serviceWorker:null,P="indexedDB"in window?window.indexedDB:null;const Q=[{key:"about_this",path:"/",titleJp:"このサイトについて",titleEn:"About this",component:class extends x{render(){return o.createElement("div",null,o.createElement("h1",null,"このサイトについて"),o.createElement("h2",null,"目的"),o.createElement("p",null,"このサイトは以下の目的で公開しています。"),o.createElement("ul",null,o.createElement("li",null,"新しい技術のテスト"),o.createElement("li",null,"スキルセットの公開")),o.createElement("h2",null,"このサイトのソース"),o.createElement("p",null,o.createElement("a",{href:"https://github.com/hyiromori/hyiromori.github.io"},"GitHub")," にあります。"),o.createElement("p",null,"技術的な特徴としては、以下のとおりです。"),o.createElement("ul",null,o.createElement("li",null,o.createElement("strong",null,"SPA"),"で作られているので、読み込み完了後はページ遷移が早いです。"),o.createElement("li",null,o.createElement(i.a,{to:R},"Service Worker"),"を使用しており、必要なリソースをキャッシュしているので、対応しているブラウザの場合はオフラインでも閲覧できます。"),o.createElement("li",null,"自分の技術力向上のために",o.createElement("strong",null,"TypeScript"),o.createElement("strong",null,"React"),o.createElement("strong",null,"Webpack"),"などのベースとなるもの以外は、ライブラリやフレームワークなどほぼ使用していません。")),o.createElement("h2",null,"動作確認について"),o.createElement("p",null,"以下の環境で動作確認を行っています。"),o.createElement("ul",null,o.createElement("li",null,"Mac OS X + Chrome 最新版"),o.createElement("li",null,"Mac OS X + Safari 最新版"),o.createElement("li",null,"iPhone SE + Safari 最新版")),o.createElement("p",null,"もし不具合などありましたら、左下のメール、または Twitter でご報告いただけるとありがたいです。"))}},level:1},{key:"about_author",path:"/author",titleJp:"運営者について",titleEn:"About author",component:class extends x{render(){return o.createElement("div",null,o.createElement("h1",null,"運営者について"),o.createElement("h2",null,"自己紹介"),o.createElement("p",null,o.createElement("strong",null,"hyiromori")," という名前で活動している、一応フルスタックエンジニアです。"),o.createElement("h2",null,"スキル"),o.createElement("p",null,"Frontend 好きですが、一人でサービスを立ち上げるぐらいのことはできる感じです。"),o.createElement("h3",null,"Frontend関係"),o.createElement("ul",null,o.createElement("li",null,o.createElement("strong",null,"ES2015"),o.createElement("br",null),"モダンなFrontend開発では当たり前のように使ってます。"),o.createElement("li",null,o.createElement("strong",null,"TypeScript"),o.createElement("br",null),"最近は UI が複雑になってきているので、型付け言語だとかなり開発が楽になります。 なかなか既存のソースには入れられないですが、個人的には必ず使うようにしています。 このサイトのソースも TypeScript で書いてます。"),o.createElement("li",null,o.createElement("strong",null,"React"),o.createElement("br",null),"業務でも、個人的にも、このサイトでも使用している、一番良く使うフロントエンドフレームワークです。",o.createElement("ul",null,o.createElement("li",null,o.createElement("strong",null,"+ Redux"),o.createElement("br",null),"定番の組み合わせで、よく使ってきました。 が、最近は何でも入れれば良いとは思っていません。 使い所が大事だな〜、と感じています。"))),o.createElement("li",null,o.createElement("strong",null,"Webpack")),o.createElement("li",null,o.createElement("strong",null,"CSS (SCSS)"))),o.createElement("h3",null,"Backend関係"),o.createElement("ul",null,o.createElement("li",null,o.createElement("strong",null,"Ruby on Rails"),o.createElement("br",null),"仕事で２年ぐらい使用しています。",o.createElement("ul",null,o.createElement("li",null,o.createElement("strong",null,"Rspec"),o.createElement("br",null),"Ruby のテストフレームワークの定番ですね。 だいぶキレイに書けるようになってきましたが、",o.createElement("a",{href:"https://qiita.com/jnchito/items/a90b3b09d008227d3d60"},"このQiitaの記事"),"も共感できます。"))),o.createElement("li",null,o.createElement("strong",null,"Express"),o.createElement("br",null),"個人的に作る際にはミニマルで勉強になるので、よく使っています。"),o.createElement("li",null,o.createElement("strong",null,"自作Webサーバ"),o.createElement("br",null),"なんちゃって Web サーバを Java で作ったこともありました。 実運用に耐えられるレベルではないですが、HTTP の主な仕様とかを学ぶのに良かったので紹介しておきます。")),o.createElement("h3",null,"Infra関係"),o.createElement("ul",null,o.createElement("li",null,o.createElement("strong",null,"AWS")),o.createElement("li",null,o.createElement("strong",null,"Docker"))),o.createElement("h2",null,"ブログとかSNSとか"),o.createElement("ul",null,o.createElement("li",null,o.createElement("a",{href:"https://qiita.com/hyiromori"},"Qiita")),o.createElement("li",null,o.createElement("a",{href:"https://twitter.com/hyiromori"},"Twitter")),o.createElement("li",null,o.createElement("a",{href:"https://github.com/hyiromori"},"GitHub"))))}},level:1},{key:"laboratory",path:"/laboratory",titleJp:"実験室",titleEn:"Laboratory",component:class extends x{render(){return o.createElement("div",{id:"laboratory-container"},o.createElement("h1",null,"実験室"),o.createElement("p",null,"新しい技術や気になった技術の実験に使ったものの紹介ページです。"),o.createElement("h2",null,"実験一覧"),o.createElement("ul",null,o.createElement("li",null,o.createElement(i.a,{to:R},"Service Worker")),o.createElement("li",null,o.createElement(i.a,{to:T},"QR Code"))))}},level:1},{key:"service_worker",path:"/laboratory/service_worker",titleJp:"サービスワーカー",titleEn:"Service Worker",component:class extends x{render(){return o.createElement("div",{id:"service-worker-container"},o.createElement("h1",null,"サービスワーカー"),o.createElement("h2",null,"サービスワーカーとは？"),o.createElement("p",null,"ブラウザのバックグランドで実行される JavaScript の実行環境です。 ページのライフサイクルとは「別」のライフサイクルを持ちます。"),o.createElement("h2",null,"サービスワーカーの機能"),o.createElement("p",null,"以下のAPIが提供されています。"),o.createElement("ul",null,o.createElement("li",null,o.createElement(i.a,{to:U},"キャッシュAPI")),o.createElement("li",null,o.createElement(i.a,{to:N},"プッシュ通知API")),o.createElement("li",null,o.createElement(i.a,{to:W},"バックグラウンド同期API"))),o.createElement("h2",null,"もっと詳しく知りたい場合")," ",o.createElement("p",null,"以下の Qiita の記事をご覧ください。"),o.createElement("p",null,o.createElement("a",{href:"https://qiita.com/hyiromori/items/7986a725541c97da878d"},"Service Worker メモ - Qiita")))}},level:2},{key:"service_worker_cache",path:"/laboratory/service_worker/cache",titleJp:"キャッシュAPI",titleEn:"Cache API",component:class extends x{render(){return o.createElement("div",{id:"service-worker-cache-container"},o.createElement("h1",null,"キャッシュAPI"),o.createElement("h2",null,"キャッシュAPIとは？"),o.createElement("p",null,"サービスワーカーで提供されている API の一つで、fetch に介入し、キャッシュされたリソースを返却することができます。"),o.createElement("p",null,"キャッシュを使用するかどうかは、コントロール可能です。"),o.createElement("h2",null,"お使いのブラウザの対応状況"),o.createElement("p",null,y?"○ 対応しています":"× 非対応です"),y&&o.createElement("div",null,o.createElement("h2",null,"動作確認の方法"),o.createElement("p",null,"実は、このページに必要なリソースは全てキャシュされています。以下の手順でキャッシュされていることを確認できます。"),o.createElement("ol",null,o.createElement("li",null,"インターネットから切り離します。（例：機内モードにする、Wi-FiをOffにする、LANケーブルを抜くなど）"),o.createElement("li",null,"このページをリロードして、正常に表示されることを確認します。"))))}},level:3},{key:"service_worker_push_notification",path:"/laboratory/service_worker/push_notification",titleJp:"プッシュ通知API",titleEn:"Push Notification API",component:class extends x{constructor(){super(...arguments),this.state={publicKey:"",subscriptionInfo:""},this.requestPushNotification=(()=>I(this,void 0,void 0,function*(){const{publicKey:e}=this.state;if(""!==e&&null!=S){console.log("ServiceWorker and Push is Supported");try{const n=yield S.register("/service_worker.js");console.log("ServiceWorker is registered",n);const t=$(e);yield n.pushManager.getSubscription();const r={userVisibleOnly:!0,applicationServerKey:t};n.pushManager.subscribe(r).then(e=>{console.log("User is subscribed:",e),this.setState({subscriptionInfo:JSON.stringify(e,null,"  ")})})}catch(e){console.error("ServiceWorker error:",e)}}}))}render(){const{publicKey:e,subscriptionInfo:n}=this.state;return o.createElement("div",{id:"service-worker-push-container"},o.createElement("h1",null,"プッシュ通知API"),o.createElement("h2",null,"プッシュ通知APIとは？"),o.createElement("p",null,"サービスワーカーで提供されている API の一つで、名前の通り、ブラウザにプッシュ通知が行える機能になります。"),o.createElement("h2",null,"お使いのブラウザの対応状況"),o.createElement("p",null,_?"○ 対応しています":"× 非対応です"),_&&o.createElement("div",null,o.createElement("h2",null,"動作確認の方法"),o.createElement("ol",null,o.createElement("li",null,o.createElement("a",{href:"https://web-push-codelab.glitch.me/",target:"_blank"},"Push Companion (外部サイト)"),"(※)を開きます。"),o.createElement("li",null,"(※)のページ内にある",o.createElement("strong",null,"Public Key"),"をコピーします。"),o.createElement("li",null,"下の",o.createElement("strong",null,"操作パネル"),"の",o.createElement("strong",null,"Public Key"),"にペーストします。"),o.createElement("li",null,o.createElement("strong",null,"操作パネル"),"の",o.createElement("strong",null,"Request Permission"),"をクリックします。"),o.createElement("li",null,"ブラウザから通知を許可するか尋ねられるので、許可します。"),o.createElement("li",null,o.createElement("strong",null,"操作パネル"),"の",o.createElement("strong",null,"Subscription Info"),"にJSON文字列が表示されるので、全てコピーします。"),o.createElement("li",null,"(※)のページの",o.createElement("strong",null,"Subscription to Send To"),"にペーストします。"),o.createElement("li",null,"(※)のページの",o.createElement("strong",null,"Text to Send"),"に通知したいメッセージを適当に入れます。"),o.createElement("li",null,"(※)のページの",o.createElement("strong",null,"SEND PUSH MESSAGE"),"をクリックします。"),o.createElement("li",null,"プッシュ通知が届くことを確認します。")),o.createElement("h2",null,"操作パネル"),o.createElement("div",{className:"frame"},o.createElement(w,{label:"Public Key",maxLength:100,onChangeText:e=>this.setState({publicKey:e}),placeHolder:"Public Key",value:e}),o.createElement(k,{active:""!==e,className:"request-permission-button",onClick:()=>this.requestPushNotification()},"Request Permission"),o.createElement(B,{className:"subscription-info",label:"Subscription Info",onChange:()=>void 0},n))))}},level:3},{key:"service_worker_background_sync",path:"/laboratory/service_worker/background_sync",titleJp:"バックグラウンド同期API",titleEn:"Background Sync API",component:class extends x{constructor(){super(...arguments),this.intervalId=null,this.db=null,this.state={syncList:[],supportBackgroundSync:!1},this.reloadSyncList=(()=>{if(null==this.db)return;const{syncList:e}=this.state,n=this.db.transaction(["background_sync"],"readwrite");n.onerror=(e=>console.error("Failed:",e));const t=n.objectStore("background_sync").getAll();t.onerror=(e=>console.error("Failed:",e)),t.onsuccess=(n=>{const t=n.target.result.reverse().slice(0,30);if(0===t.length)return;const r=e.length!==t.length,o=r?void 0:t.find((n,t)=>n.id!==e[t].id||n.result!==e[t].result);(r||null!=o)&&this.setState({syncList:t})})}),this.backgroundSyncTest=(()=>{if(null==M||null==this.db)return;const e={path:"/example.json",result:"",createdAt:(new Date).getTime()},n=this.db.transaction(["background_sync"],"readwrite");n.onerror=(e=>console.error("Failed:",e));const t=n.objectStore("background_sync").add(e);t.onerror=(e=>console.error("Failed:",e)),t.onsuccess=(e=>D(this,void 0,void 0,function*(){const n=yield M.ready;if("sync"in n){const t=`background-sync:${e.target.result}`;n.sync.register(t),this.reloadSyncList()}}))})}componentWillMount(){if(null==P||null==M)return;M.ready.then(e=>{"sync"in e&&this.setState({supportBackgroundSync:!0})});const e=P.open("service_worker",1);e.onupgradeneeded=(e=>{const n=e.target.result;n.createObjectStore("background_sync",{keyPath:"id",autoIncrement:!0}),this.db=n}),e.onerror=(e=>console.error("Failed:",e)),e.onsuccess=(e=>{this.db=e.target.result})}componentDidMount(){this.reloadSyncList(),this.intervalId=setInterval(this.reloadSyncList,1e3)}componentWillUnmount(){null!=this.intervalId&&(clearInterval(this.intervalId),this.intervalId=null)}render(){const{syncList:e,supportBackgroundSync:n}=this.state;return o.createElement("div",{id:"service-worker-background-sync-container"},o.createElement("h1",null,"バックグランド同期API"),o.createElement("h2",null,"バックグランド同期APIとは？"),o.createElement("p",null,"サービスワーカーで提供されている API の一つで、ネットワークがオフラインの場合、オンラインになった時点で通信を行えるようにできる機能です。"),o.createElement("p",null,"IndexedDB も使用して実現します。"),o.createElement("h2",null,"お使いのブラウザの対応状況"),o.createElement("p",null,n?"○ 対応しています":"× 非対応です"),n&&o.createElement("div",null,o.createElement("h2",null,"動作確認の方法"),o.createElement("ol",null,o.createElement("li",null,"インターネットから切り離します。（例：機内モードにする、Wi-FiをOffにする、LANケーブルを抜くなど）"),o.createElement("li",null,"下の",o.createElement("strong",null,"操作パネル"),"の",o.createElement("strong",null,"Background Sync Test"),"をクリックします。"),o.createElement("li",null,"下の",o.createElement("strong",null,"操作パネル"),"の",o.createElement("strong",null,"同期結果"),"に１行追加され",o.createElement("strong",null,"Result"),"欄が空であることを確認します。"),o.createElement("li",null,"インターネットに接続します。"),o.createElement("li",null,"下の",o.createElement("strong",null,"操作パネル"),"の",o.createElement("strong",null,"同期結果"),"の",o.createElement("strong",null,"Result"),"欄に同期結果が表示されることを確認します。")),o.createElement("h2",null,"操作パネル"),o.createElement("div",{className:"frame"},o.createElement(k,{onClick:()=>this.backgroundSyncTest()},"Background Sync Test"),o.createElement("p",null,"同期結果"),o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",{className:"table-id-column"},"ID"),o.createElement("th",null,"Path"),o.createElement("th",null,"Result"),o.createElement("th",null,"CreatedAt"))),o.createElement("tbody",null,e.map(e=>o.createElement("tr",{key:e.id},o.createElement("td",null,e.id),o.createElement("td",null,e.path),o.createElement("td",null,e.result||"-"),o.createElement("td",null,e.createdAt||"-"))))))))}},level:3},{key:"qr_code",path:"/laboratory/qr_code",titleJp:"QRコード",titleEn:"QR Code",component:class extends x{constructor(){super(...arguments),this.state={qrImage:"",qrText:""},this.onChangeText=(e=>{v.set(C,e),this.setState({qrText:e}),""!==e&&b.toDataURL(e).then(e=>{this.setState({qrImage:e})}).catch(e=>{console.error("QrCode generate error:",e)})})}componentDidMount(){const e=v.get(C)||window.location.href;this.onChangeText(e)}render(){const{qrImage:e,qrText:n}=this.state;return o.createElement("div",{id:"qr-code-container"},o.createElement("h1",null,"QR Code"),o.createElement("div",{className:"frame"},""!==e&&o.createElement("div",{id:"qr-code-image-wrapper"},o.createElement("img",{src:e,alt:"QR Code"})),o.createElement(B,{label:"QRコードに変換する文字列",onChange:this.onChangeText},n)),o.createElement("h2",null,"このページについて"),o.createElement("p",null,"QRコードをただ生成するだけのページです。サービスワーカーと組み合わせることでオフラインアプリ的に使えるかな、と思って作成してみました。"),o.createElement("p",null,"いずれは、自分で生成するところまでやってみたい。"))}},level:2}],j=Q.map(e=>({path:e.path,titleJp:e.titleJp,titleEn:e.titleEn,level:e.level})),z=o.createElement(l.a,null,o.createElement(class extends o.Component{constructor(){super(...arguments),this.state={showMenu:!1},this.closeMenuIfMobileDevice=(()=>{f()&&this.setState({showMenu:!1})})}renderMenuItem(e,n){const{level:t,path:r,titleJp:l,titleEn:a}=e,c=o.createElement("div",null,o.createElement("div",{className:"title-jp"},l),o.createElement("div",{className:"title-en"},a));return n?o.createElement("div",{className:`menu-button level${t} marked`},c):o.createElement(i.a,{to:r,className:`menu-button level${t}`,onClick:this.closeMenuIfMobileDevice},c)}render(){const{children:e,menuList:n}=this.props,{showMenu:t}=this.state,r=window.location.hash.substr(1);return o.createElement("div",{id:"common-frame"},o.createElement("div",{id:"common-frame-content",className:t?"show-menu":""},o.createElement("div",{id:"common-frame-content-inner"},e)),t?o.createElement("div",{id:"common-frame-menu"},o.createElement("button",{className:"common-frame-header-menu-button",onClick:()=>this.setState({showMenu:!1})},o.createElement(p,null),o.createElement("span",null,"Close")),n.map(e=>o.createElement("div",{key:e.path,className:"menu-item"},this.renderMenuItem(e,r===e.path)))):o.createElement("button",{className:"common-frame-header-menu-button",onClick:()=>this.setState({showMenu:!0})},o.createElement(A,null),o.createElement("span",null,"Menu")),o.createElement("div",{id:"common-frame-footer"},o.createElement("div",{className:"left-content"},o.createElement("a",{href:"mailto:hyiromori@gmail.com"},o.createElement(d,null)),o.createElement("a",{href:"https://twitter.com/hyiromori",target:"_blank"},o.createElement(h,null)),o.createElement("a",{href:"https://github.com/hyiromori",target:"_blank"},o.createElement(E,null))),o.createElement("div",{className:"right-content"},"(C) 2018 hyiromori")))}},{menuList:j},Q.map(e=>o.createElement(a.a,{component:e.component,exact:!0,key:e.path,path:e.path,strict:!0})))),q=e=>{const n=Q.find(n=>n.key===e);if(null==n)throw new Error(`Not found: ${e}`);return`${n.path}`},R=q("service_worker"),U=q("service_worker_cache"),N=q("service_worker_push_notification"),W=q("service_worker_background_sync"),T=q("qr_code");t(89);"serviceWorker"in navigator&&navigator.serviceWorker.register("/service_worker.js").then(e=>console.log("ServiceWorker scope:",e.scope)).catch(e=>console.log("ServiceWorker registration failed: ",e)),Object(r.render)(z,document.getElementById("app"))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbnRhaW5lcnMvY29tbW9uX2ZyYW1lL2luZGV4LnNjc3M/ZmE2ZiIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9jb21tb25fZnJhbWUvaW5kZXguc2NzcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9hYm91dF90aGlzL3N0eWxlLnNjc3M/MzE3MyIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9hYm91dF90aGlzL3N0eWxlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbnRhaW5lcnMvYWJvdXRfYXV0aG9yL3N0eWxlLnNjc3M/NGM4YSIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9hYm91dF9hdXRob3Ivc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3N0eWxlLnNjc3M/NjNlNSIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3N0eWxlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbnRhaW5lcnMvbGFib3JhdG9yeS9xcl9jb2RlL3N0eWxlLnNjc3M/YmZmMyIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3FyX2NvZGUvc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly8vLi9hcHAvcHJlc2VudGVycy90ZXh0X2FyZWEuc2Nzcz8wNGI3Iiwid2VicGFjazovLy8uL2FwcC9wcmVzZW50ZXJzL3RleHRfYXJlYS5zY3NzIiwid2VicGFjazovLy8uL2FwcC9jb250YWluZXJzL2xhYm9yYXRvcnkvc2VydmljZV93b3JrZXIvc3R5bGUuc2Nzcz81YmI4Iiwid2VicGFjazovLy8uL2FwcC9jb250YWluZXJzL2xhYm9yYXRvcnkvc2VydmljZV93b3JrZXIvc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL2NhY2hlL3N0eWxlLnNjc3M/YjliZCIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL2NhY2hlL3N0eWxlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXBwL3ByZXNlbnRlcnMvYnV0dG9uLnNjc3M/MTk5ZSIsIndlYnBhY2s6Ly8vLi9hcHAvcHJlc2VudGVycy9idXR0b24uc2NzcyIsIndlYnBhY2s6Ly8vLi9hcHAvcHJlc2VudGVycy90ZXh0X2lucHV0LnNjc3M/YzIxNiIsIndlYnBhY2s6Ly8vLi9hcHAvcHJlc2VudGVycy90ZXh0X2lucHV0LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbnRhaW5lcnMvbGFib3JhdG9yeS9zZXJ2aWNlX3dvcmtlci9wdXNoX25vdGlmaWNhdGlvbi9zdHlsZS5zY3NzPzZkMDIiLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbnRhaW5lcnMvbGFib3JhdG9yeS9zZXJ2aWNlX3dvcmtlci9wdXNoX25vdGlmaWNhdGlvbi9zdHlsZS5zY3NzIiwid2VicGFjazovLy8uL2FwcC9jb250YWluZXJzL2xhYm9yYXRvcnkvc2VydmljZV93b3JrZXIvYmFja2dyb3VuZF9zeW5jL3N0eWxlLnNjc3M/NWQ2NCIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL2JhY2tncm91bmRfc3luYy9zdHlsZS5zY3NzIiwid2VicGFjazovLy8uL2FwcC9pbmRleC5zY3NzPzI1ZTgiLCJ3ZWJwYWNrOi8vLy4vYXBwL2luZGV4LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXBwL3ByZXNlbnRlcnMvaWNvbi50c3giLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbW1vbi9wbGF0Zm9ybS50cyIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9hYnN0cmFjdF9jb250YWluZXIudHN4Iiwid2VicGFjazovLy8uL2FwcC9wcmVzZW50ZXJzL3RleHRfYXJlYS50c3giLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbW1vbi9zdG9yYWdlLnRzIiwid2VicGFjazovLy8uL2FwcC9jb250YWluZXJzL2xhYm9yYXRvcnkvcXJfY29kZS9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbnRhaW5lcnMvbGFib3JhdG9yeS9zZXJ2aWNlX3dvcmtlci9jYWNoZS9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vYXBwL3ByZXNlbnRlcnMvYnV0dG9uLnRzeCIsIndlYnBhY2s6Ly8vLi9hcHAvcHJlc2VudGVycy90ZXh0X2lucHV0LnRzeCIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL3B1c2hfbm90aWZpY2F0aW9uL2luZGV4LnRzeCIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL2JhY2tncm91bmRfc3luYy9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vYXBwL3JvdXRlcy50c3giLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbnRhaW5lcnMvYWJvdXRfdGhpcy9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vYXBwL2NvbnRhaW5lcnMvYWJvdXRfYXV0aG9yL2luZGV4LnRzeCIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L2luZGV4LnRzeCIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL2luZGV4LnRzeCIsIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9jb21tb25fZnJhbWUvaW5kZXgudHN4Iiwid2VicGFjazovLy8uL2FwcC9pbmRleC50cyJdLCJuYW1lcyI6WyJ3ZWJwYWNrSnNvbnBDYWxsYmFjayIsImRhdGEiLCJtb2R1bGVJZCIsImNodW5rSWQiLCJjaHVua0lkcyIsIm1vcmVNb2R1bGVzIiwiZXhlY3V0ZU1vZHVsZXMiLCJpIiwicmVzb2x2ZXMiLCJsZW5ndGgiLCJpbnN0YWxsZWRDaHVua3MiLCJwdXNoIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibW9kdWxlcyIsInBhcmVudEpzb25wRnVuY3Rpb24iLCJzaGlmdCIsImRlZmVycmVkTW9kdWxlcyIsImFwcGx5IiwiY2hlY2tEZWZlcnJlZE1vZHVsZXMiLCJyZXN1bHQiLCJkZWZlcnJlZE1vZHVsZSIsImZ1bGZpbGxlZCIsImoiLCJkZXBJZCIsInNwbGljZSIsIl9fd2VicGFja19yZXF1aXJlX18iLCJzIiwiaW5zdGFsbGVkTW9kdWxlcyIsIjAiLCJleHBvcnRzIiwibW9kdWxlIiwibCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwIiwianNvbnBBcnJheSIsIndpbmRvdyIsIm9sZEpzb25wRnVuY3Rpb24iLCJzbGljZSIsImNvbnRlbnQiLCJvcHRpb25zIiwiaG1yIiwidHJhbnNmb3JtIiwiaW5zZXJ0SW50byIsInVuZGVmaW5lZCIsImxvY2FscyIsInZlcnNpb24iLCJzb3VyY2VzIiwibmFtZXMiLCJtYXBwaW5ncyIsImZpbGUiLCJzb3VyY2VzQ29udGVudCIsInNvdXJjZVJvb3QiLCJmb250YXdlc29tZV9zdmdfY29yZV9pbmRleF9lcyIsImFkZCIsImZyZWVfc29saWRfc3ZnX2ljb25zX2luZGV4X2VzIiwiQ2xvc2VJY29uIiwicmVhY3QiLCJpbmRleF9lcyIsImljb24iLCJNZW51SWNvbiIsIkVudmVsb3BlSWNvbiIsImZyZWVfYnJhbmRzX3N2Z19pY29uc19pbmRleF9lcyIsIlR3aXR0ZXJJY29uIiwiR2l0SHViSWNvbiIsImlzTW9iaWxlRGV2aWNlIiwib3NGYW1pbHkiLCJwbGF0Zm9ybSIsImZhbWlseSIsImFic3RyYWN0X2NvbnRhaW5lcl9BYnN0cmFjdENvbnRhaW5lciIsIltvYmplY3QgT2JqZWN0XSIsInN0YXRlIiwiY2FsbGJhY2siLCJjb25zb2xlIiwibG9nIiwic3VwZXIiLCJzZXRTdGF0ZSIsInRleHRfYXJlYV9UZXh0QXJlYSIsImNoaWxkcmVuIiwiY2xhc3NOYW1lIiwibGFiZWwiLCJvbkNoYW5nZSIsInRoaXMiLCJwcm9wcyIsImV2ZW50IiwidGFyZ2V0IiwiZGVmYXVsdFByb3BzIiwiU3RvcmFnZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJzZXQiLCJzZXRJdGVtIiwicmVtb3ZlIiwicmVtb3ZlSXRlbSIsIlN0b3JhZ2VLZXkiLCJzdXBwb3J0U2VydmljZVdvcmtlciIsIm5hdmlnYXRvciIsImJ1dHRvbl9CdXR0b24iLCJhY3RpdmUiLCJvbkNsaWNrIiwiVGV4dElucHV0IiwibWF4TGVuZ3RoIiwib25DaGFuZ2VUZXh0IiwicGFzc3dvcmQiLCJwbGFjZUhvbGRlciIsInBsYWNlaG9sZGVyIiwidHlwZSIsInN1cHBvcnRQdXNoTm90aWZpY2F0aW9uIiwic2VydmljZVdvcmtlciIsInVybEI2NFRvVWludDhBcnJheSIsImJhc2U2NFN0cmluZyIsImJhc2U2NCIsInJlcGVhdCIsInJlcGxhY2UiLCJyYXdEYXRhIiwiYXRvYiIsIm91dHB1dEFycmF5IiwiVWludDhBcnJheSIsImNoYXJDb2RlQXQiLCJiYWNrZ3JvdW5kX3N5bmNfc2VydmljZVdvcmtlciIsImluZGV4ZWREYiIsImluZGV4ZWREQiIsIlZpZXdzIiwicGF0aCIsInRpdGxlSnAiLCJ0aXRsZUVuIiwiY29tcG9uZW50IiwiaHJlZiIsIkxpbmsiLCJ0byIsIlNlcnZpY2VXb3JrZXJQYXRoIiwibGV2ZWwiLCJpZCIsIlFyQ29kZVBhdGgiLCJTZXJ2aWNlV29ya2VyQ2FjaGVQYXRoIiwiU2VydmljZVdvcmtlclB1c2hOb3RpZmljYXRpb25QYXRoIiwiU2VydmljZVdvcmtlckJhY2tncm91bmRTeW5jUGF0aCIsInB1YmxpY0tleSIsInN1YnNjcmlwdGlvbkluZm8iLCJyZXF1ZXN0UHVzaE5vdGlmaWNhdGlvbiIsIl9fYXdhaXRlciIsInN3UmVnaXN0cmF0aW9uIiwicmVnaXN0ZXIiLCJhcHBsaWNhdGlvblNlcnZlcktleSIsInB1c2hNYW5hZ2VyIiwiZ2V0U3Vic2NyaXB0aW9uIiwicGFyYW1zIiwidXNlclZpc2libGVPbmx5Iiwic3Vic2NyaWJlIiwidGhlbiIsInN1YnNjcmlwdGlvbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJlcnJvciIsImlucHV0VmFsdWUiLCJpbnRlcnZhbElkIiwiZGIiLCJzeW5jTGlzdCIsInN1cHBvcnRCYWNrZ3JvdW5kU3luYyIsInJlbG9hZFN5bmNMaXN0IiwidHJhbnNhY3Rpb24iLCJvbmVycm9yIiwicmVxdWVzdCIsIm9iamVjdFN0b3JlIiwiZ2V0QWxsIiwib25zdWNjZXNzIiwibmV3U3luY0xpc3QiLCJyZXZlcnNlIiwiZGlmZmVyZW50TGVuZ3RoIiwiZGlmZkVsZW1lbnQiLCJmaW5kIiwiZWxlbWVudCIsImluZGV4IiwiYmFja2dyb3VuZFN5bmNUZXN0Iiwic3luY0RhdGEiLCJjcmVhdGVkQXQiLCJEYXRlIiwiZ2V0VGltZSIsImJhY2tncm91bmRfc3luY19hd2FpdGVyIiwicmVhZHkiLCJ0YWciLCJzeW5jIiwiZGJPZXBuUmVxdWVzdCIsIm9wZW4iLCJvbnVwZ3JhZGVuZWVkZWQiLCJjcmVhdGVPYmplY3RTdG9yZSIsImtleVBhdGgiLCJhdXRvSW5jcmVtZW50Iiwic2V0SW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwibWFwIiwicXJJbWFnZSIsInFyVGV4dCIsImJyb3dzZXIiLCJjYXRjaCIsImxvY2F0aW9uIiwic3JjIiwiYWx0Iiwicm91dGVzX21lbnVMaXN0IiwidmlldyIsIlJvdXRlcyIsIkhhc2hSb3V0ZXIiLCJzaG93TWVudSIsImNsb3NlTWVudUlmTW9iaWxlRGV2aWNlIiwibWVudSIsInNlbGVjdGVkIiwibWVudUxpc3QiLCJjdXJyZW50UGF0aCIsImhhc2giLCJzdWJzdHIiLCJyZW5kZXJNZW51SXRlbSIsIlJvdXRlIiwiZXhhY3QiLCJzdHJpY3QiLCJleHRyYWN0UGF0aCIsIkVycm9yIiwicmVnaXN0cmF0aW9uIiwic2NvcGUiLCJyZWFjdF9kb20iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIl0sIm1hcHBpbmdzIjoiYUFDQSxTQUFBQSxFQUFBQyxHQVFBLElBUEEsSUFNQUMsRUFBQUMsRUFOQUMsRUFBQUgsRUFBQSxHQUNBSSxFQUFBSixFQUFBLEdBQ0FLLEVBQUFMLEVBQUEsR0FJQU0sRUFBQSxFQUFBQyxLQUNRRCxFQUFBSCxFQUFBSyxPQUFvQkYsSUFDNUJKLEVBQUFDLEVBQUFHLEdBQ0FHLEVBQUFQLElBQ0FLLEVBQUFHLEtBQUFELEVBQUFQLEdBQUEsSUFFQU8sRUFBQVAsR0FBQSxFQUVBLElBQUFELEtBQUFHLEVBQ0FPLE9BQUFDLFVBQUFDLGVBQUFDLEtBQUFWLEVBQUFILEtBQ0FjLEVBQUFkLEdBQUFHLEVBQUFILElBS0EsSUFGQWUsS0FBQWhCLEdBRUFPLEVBQUFDLFFBQ0FELEVBQUFVLE9BQUFWLEdBT0EsT0FIQVcsRUFBQVIsS0FBQVMsTUFBQUQsRUFBQWIsT0FHQWUsSUFFQSxTQUFBQSxJQUVBLElBREEsSUFBQUMsRUFDQWYsRUFBQSxFQUFpQkEsRUFBQVksRUFBQVYsT0FBNEJGLElBQUEsQ0FHN0MsSUFGQSxJQUFBZ0IsRUFBQUosRUFBQVosR0FDQWlCLEdBQUEsRUFDQUMsRUFBQSxFQUFrQkEsRUFBQUYsRUFBQWQsT0FBMkJnQixJQUFBLENBQzdDLElBQUFDLEVBQUFILEVBQUFFLEdBQ0EsSUFBQWYsRUFBQWdCLEtBQUFGLEdBQUEsR0FFQUEsSUFDQUwsRUFBQVEsT0FBQXBCLElBQUEsR0FDQWUsRUFBQU0sSUFBQUMsRUFBQU4sRUFBQSxLQUdBLE9BQUFELEVBSUEsSUFBQVEsS0FLQXBCLEdBQ0FxQixFQUFBLEdBR0FaLEtBR0EsU0FBQVMsRUFBQTFCLEdBR0EsR0FBQTRCLEVBQUE1QixHQUNBLE9BQUE0QixFQUFBNUIsR0FBQThCLFFBR0EsSUFBQUMsRUFBQUgsRUFBQTVCLElBQ0FLLEVBQUFMLEVBQ0FnQyxHQUFBLEVBQ0FGLFlBVUEsT0FOQWhCLEVBQUFkLEdBQUFhLEtBQUFrQixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBSixHQUdBSyxFQUFBQyxHQUFBLEVBR0FELEVBQUFELFFBS0FKLEVBQUFPLEVBQUFuQixFQUdBWSxFQUFBUSxFQUFBTixFQUdBRixFQUFBUyxFQUFBLFNBQUFMLEVBQUFNLEVBQUFDLEdBQ0FYLEVBQUFZLEVBQUFSLEVBQUFNLElBQ0ExQixPQUFBNkIsZUFBQVQsRUFBQU0sR0FBMENJLFlBQUEsRUFBQUMsSUFBQUosS0FLMUNYLEVBQUFnQixFQUFBLFNBQUFaLEdBQ0Esb0JBQUFhLGVBQUFDLGFBQ0FsQyxPQUFBNkIsZUFBQVQsRUFBQWEsT0FBQUMsYUFBd0RDLE1BQUEsV0FFeERuQyxPQUFBNkIsZUFBQVQsRUFBQSxjQUFpRGUsT0FBQSxLQVFqRG5CLEVBQUFvQixFQUFBLFNBQUFELEVBQUFFLEdBRUEsR0FEQSxFQUFBQSxJQUFBRixFQUFBbkIsRUFBQW1CLElBQ0EsRUFBQUUsRUFBQSxPQUFBRixFQUNBLEtBQUFFLEdBQUEsaUJBQUFGLFFBQUFHLFdBQUEsT0FBQUgsRUFDQSxJQUFBSSxFQUFBdkMsT0FBQXdDLE9BQUEsTUFHQSxHQUZBeEIsRUFBQWdCLEVBQUFPLEdBQ0F2QyxPQUFBNkIsZUFBQVUsRUFBQSxXQUF5Q1QsWUFBQSxFQUFBSyxVQUN6QyxFQUFBRSxHQUFBLGlCQUFBRixFQUFBLFFBQUFNLEtBQUFOLEVBQUFuQixFQUFBUyxFQUFBYyxFQUFBRSxFQUFBLFNBQUFBLEdBQWdILE9BQUFOLEVBQUFNLElBQXFCQyxLQUFBLEtBQUFELElBQ3JJLE9BQUFGLEdBSUF2QixFQUFBMkIsRUFBQSxTQUFBdEIsR0FDQSxJQUFBTSxFQUFBTixLQUFBaUIsV0FDQSxXQUEyQixPQUFBakIsRUFBQSxTQUMzQixXQUFpQyxPQUFBQSxHQUVqQyxPQURBTCxFQUFBUyxFQUFBRSxFQUFBLElBQUFBLEdBQ0FBLEdBSUFYLEVBQUFZLEVBQUEsU0FBQWdCLEVBQUFDLEdBQXNELE9BQUE3QyxPQUFBQyxVQUFBQyxlQUFBQyxLQUFBeUMsRUFBQUMsSUFHdEQ3QixFQUFBOEIsRUFBQSxHQUVBLElBQUFDLEVBQUFDLE9BQUEsYUFBQUEsT0FBQSxpQkFDQUMsRUFBQUYsRUFBQWhELEtBQUEyQyxLQUFBSyxHQUNBQSxFQUFBaEQsS0FBQVgsRUFDQTJELElBQUFHLFFBQ0EsUUFBQXZELEVBQUEsRUFBZ0JBLEVBQUFvRCxFQUFBbEQsT0FBdUJGLElBQUFQLEVBQUEyRCxFQUFBcEQsSUFDdkMsSUFBQVUsRUFBQTRDLEVBSUExQyxFQUFBUixNQUFBLE9BRUFVLHlCQ3JKQSxJQUFBMEMsRUFBQW5DLEVBQUEsSUFFQSxpQkFBQW1DLFFBQUE5QixFQUFBMUIsRUFBQXdELEVBQUEsTUFPQSxJQUFBQyxHQUFlQyxLQUFBLEVBRWZDLGVBUEFBLEVBUUFDLGdCQUFBQyxHQUVBeEMsRUFBQSxFQUFBQSxDQUFBbUMsRUFBQUMsR0FFQUQsRUFBQU0sU0FBQXBDLEVBQUFELFFBQUErQixFQUFBTSw2QkNqQkFwQyxFQUFBRCxRQUFBSixFQUFBLEVBQUFBLEVBQUEsSUFLQWpCLE1BQUFzQixFQUFBMUIsRUFBQSxtMUhBQXcySCxJQUFVK0QsUUFBQSxFQUFBQyxTQUFBLHFOQUFBQyxTQUFBQyxTQUFBLCtwQ0FBNjRDQyxLQUFBLGFBQUFDLGdCQUFBLDA5RkFBOGdHLDRJQUE2SUMsV0FBQSwwQkNKMTVRLElBQUFiLEVBQUFuQyxFQUFBLElBRUEsaUJBQUFtQyxRQUFBOUIsRUFBQTFCLEVBQUF3RCxFQUFBLE1BT0EsSUFBQUMsR0FBZUMsS0FBQSxFQUVmQyxlQVBBQSxFQVFBQyxnQkFBQUMsR0FFQXhDLEVBQUEsRUFBQUEsQ0FBQW1DLEVBQUFDLEdBRUFELEVBQUFNLFNBQUFwQyxFQUFBRCxRQUFBK0IsRUFBQU0sNkJDakJBcEMsRUFBQUQsUUFBQUosRUFBQSxFQUFBQSxFQUFBLElBS0FqQixNQUFBc0IsRUFBQTFCLEVBQUEsT0FBa0MrRCxRQUFBLEVBQUFDLFdBQUFDLFNBQUFDLFNBQUEsR0FBQUMsS0FBQSxhQUFBRSxXQUFBLDBCQ0psQyxJQUFBYixFQUFBbkMsRUFBQSxJQUVBLGlCQUFBbUMsUUFBQTlCLEVBQUExQixFQUFBd0QsRUFBQSxNQU9BLElBQUFDLEdBQWVDLEtBQUEsRUFFZkMsZUFQQUEsRUFRQUMsZ0JBQUFDLEdBRUF4QyxFQUFBLEVBQUFBLENBQUFtQyxFQUFBQyxHQUVBRCxFQUFBTSxTQUFBcEMsRUFBQUQsUUFBQStCLEVBQUFNLDZCQ2pCQXBDLEVBQUFELFFBQUFKLEVBQUEsRUFBQUEsRUFBQSxJQUtBakIsTUFBQXNCLEVBQUExQixFQUFBLE9BQWtDK0QsUUFBQSxFQUFBQyxXQUFBQyxTQUFBQyxTQUFBLEdBQUFDLEtBQUEsYUFBQUUsV0FBQSwwQkNKbEMsSUFBQWIsRUFBQW5DLEVBQUEsSUFFQSxpQkFBQW1DLFFBQUE5QixFQUFBMUIsRUFBQXdELEVBQUEsTUFPQSxJQUFBQyxHQUFlQyxLQUFBLEVBRWZDLGVBUEFBLEVBUUFDLGdCQUFBQyxHQUVBeEMsRUFBQSxFQUFBQSxDQUFBbUMsRUFBQUMsR0FFQUQsRUFBQU0sU0FBQXBDLEVBQUFELFFBQUErQixFQUFBTSw2QkNqQkFwQyxFQUFBRCxRQUFBSixFQUFBLEVBQUFBLEVBQUEsSUFLQWpCLE1BQUFzQixFQUFBMUIsRUFBQSx3REFBNkUsSUFBVStELFFBQUEsRUFBQUMsU0FBQSwrR0FBQUMsU0FBQUMsU0FBQSx5QkFBa0tDLEtBQUEsYUFBQUMsZ0JBQUEsc0VBQTBIQyxXQUFBLDBCQ0puWCxJQUFBYixFQUFBbkMsRUFBQSxJQUVBLGlCQUFBbUMsUUFBQTlCLEVBQUExQixFQUFBd0QsRUFBQSxNQU9BLElBQUFDLEdBQWVDLEtBQUEsRUFFZkMsZUFQQUEsRUFRQUMsZ0JBQUFDLEdBRUF4QyxFQUFBLEVBQUFBLENBQUFtQyxFQUFBQyxHQUVBRCxFQUFBTSxTQUFBcEMsRUFBQUQsUUFBQStCLEVBQUFNLDZCQ2pCQXBDLEVBQUFELFFBQUFKLEVBQUEsRUFBQUEsRUFBQSxJQUtBakIsTUFBQXNCLEVBQUExQixFQUFBLHlFQUE4RixJQUFVK0QsUUFBQSxFQUFBQyxTQUFBLCtIQUFBQyxTQUFBQyxTQUFBLHlCQUFrTEMsS0FBQSxhQUFBQyxnQkFBQSw0SEFBZ0xDLFdBQUEsMEJDSjFjLElBQUFiLEVBQUFuQyxFQUFBLElBRUEsaUJBQUFtQyxRQUFBOUIsRUFBQTFCLEVBQUF3RCxFQUFBLE1BT0EsSUFBQUMsR0FBZUMsS0FBQSxFQUVmQyxlQVBBQSxFQVFBQyxnQkFBQUMsR0FFQXhDLEVBQUEsRUFBQUEsQ0FBQW1DLEVBQUFDLEdBRUFELEVBQUFNLFNBQUFwQyxFQUFBRCxRQUFBK0IsRUFBQU0sNkJDakJBcEMsRUFBQUQsUUFBQUosRUFBQSxFQUFBQSxFQUFBLElBS0FqQixNQUFBc0IsRUFBQTFCLEVBQUEsc1BBQTJRLElBQVUrRCxRQUFBLEVBQUFDLFNBQUEsa0xBQUFDLFNBQUFDLFNBQUEsd0dBQXNUQyxLQUFBLGlCQUFBQyxnQkFBQSxpU0FBd1YsNElBQTJJQyxXQUFBLDBCQ0o5aUMsSUFBQWIsRUFBQW5DLEVBQUEsSUFFQSxpQkFBQW1DLFFBQUE5QixFQUFBMUIsRUFBQXdELEVBQUEsTUFPQSxJQUFBQyxHQUFlQyxLQUFBLEVBRWZDLGVBUEFBLEVBUUFDLGdCQUFBQyxHQUVBeEMsRUFBQSxFQUFBQSxDQUFBbUMsRUFBQUMsR0FFQUQsRUFBQU0sU0FBQXBDLEVBQUFELFFBQUErQixFQUFBTSw2QkNqQkFwQyxFQUFBRCxRQUFBSixFQUFBLEVBQUFBLEVBQUEsSUFLQWpCLE1BQUFzQixFQUFBMUIsRUFBQSxPQUFrQytELFFBQUEsRUFBQUMsV0FBQUMsU0FBQUMsU0FBQSxHQUFBQyxLQUFBLGFBQUFFLFdBQUEsMEJDSmxDLElBQUFiLEVBQUFuQyxFQUFBLElBRUEsaUJBQUFtQyxRQUFBOUIsRUFBQTFCLEVBQUF3RCxFQUFBLE1BT0EsSUFBQUMsR0FBZUMsS0FBQSxFQUVmQyxlQVBBQSxFQVFBQyxnQkFBQUMsR0FFQXhDLEVBQUEsRUFBQUEsQ0FBQW1DLEVBQUFDLEdBRUFELEVBQUFNLFNBQUFwQyxFQUFBRCxRQUFBK0IsRUFBQU0sNkJDakJBcEMsRUFBQUQsUUFBQUosRUFBQSxFQUFBQSxFQUFBLElBS0FqQixNQUFBc0IsRUFBQTFCLEVBQUEsT0FBa0MrRCxRQUFBLEVBQUFDLFdBQUFDLFNBQUFDLFNBQUEsR0FBQUMsS0FBQSxhQUFBRSxXQUFBLDBCQ0psQyxJQUFBYixFQUFBbkMsRUFBQSxJQUVBLGlCQUFBbUMsUUFBQTlCLEVBQUExQixFQUFBd0QsRUFBQSxNQU9BLElBQUFDLEdBQWVDLEtBQUEsRUFFZkMsZUFQQUEsRUFRQUMsZ0JBQUFDLEdBRUF4QyxFQUFBLEVBQUFBLENBQUFtQyxFQUFBQyxHQUVBRCxFQUFBTSxTQUFBcEMsRUFBQUQsUUFBQStCLEVBQUFNLDZCQ2pCQXBDLEVBQUFELFFBQUFKLEVBQUEsRUFBQUEsRUFBQSxJQUtBakIsTUFBQXNCLEVBQUExQixFQUFBLHdXQUE2WCxJQUFVK0QsUUFBQSxFQUFBQyxTQUFBLCtLQUFBQyxTQUFBQyxTQUFBLHdMQUFtWUMsS0FBQSxjQUFBQyxnQkFBQSw2WEFBbWIsNElBQXlJQyxXQUFBLDBCQ0p0MEMsSUFBQWIsRUFBQW5DLEVBQUEsSUFFQSxpQkFBQW1DLFFBQUE5QixFQUFBMUIsRUFBQXdELEVBQUEsTUFPQSxJQUFBQyxHQUFlQyxLQUFBLEVBRWZDLGVBUEFBLEVBUUFDLGdCQUFBQyxHQUVBeEMsRUFBQSxFQUFBQSxDQUFBbUMsRUFBQUMsR0FFQUQsRUFBQU0sU0FBQXBDLEVBQUFELFFBQUErQixFQUFBTSw2QkNqQkFwQyxFQUFBRCxRQUFBSixFQUFBLEVBQUFBLEVBQUEsSUFLQWpCLE1BQUFzQixFQUFBMUIsRUFBQSw0U0FBaVUsSUFBVStELFFBQUEsRUFBQUMsU0FBQSxtTEFBQUMsU0FBQUMsU0FBQSw2SEFBMFVDLEtBQUEsa0JBQUFDLGdCQUFBLGdUQUE0Vyw0SUFBeUlDLFdBQUEsMEJDSjFvQyxJQUFBYixFQUFBbkMsRUFBQSxJQUVBLGlCQUFBbUMsUUFBQTlCLEVBQUExQixFQUFBd0QsRUFBQSxNQU9BLElBQUFDLEdBQWVDLEtBQUEsRUFFZkMsZUFQQUEsRUFRQUMsZ0JBQUFDLEdBRUF4QyxFQUFBLEVBQUFBLENBQUFtQyxFQUFBQyxHQUVBRCxFQUFBTSxTQUFBcEMsRUFBQUQsUUFBQStCLEVBQUFNLDZCQ2pCQXBDLEVBQUFELFFBQUFKLEVBQUEsRUFBQUEsRUFBQSxJQUtBakIsTUFBQXNCLEVBQUExQixFQUFBLHlNQUE4TixJQUFVK0QsUUFBQSxFQUFBQyxTQUFBLGlMQUFBQyxTQUFBQyxTQUFBLG9FQUFnUkMsS0FBQSxhQUFBQyxnQkFBQSxtTUFBc1BDLFdBQUEsMEJDSjl1QixJQUFBYixFQUFBbkMsRUFBQSxJQUVBLGlCQUFBbUMsUUFBQTlCLEVBQUExQixFQUFBd0QsRUFBQSxNQU9BLElBQUFDLEdBQWVDLEtBQUEsRUFFZkMsZUFQQUEsRUFRQUMsZ0JBQUFDLEdBRUF4QyxFQUFBLEVBQUFBLENBQUFtQyxFQUFBQyxHQUVBRCxFQUFBTSxTQUFBcEMsRUFBQUQsUUFBQStCLEVBQUFNLDZCQ2pCQXBDLEVBQUFELFFBQUFKLEVBQUEsRUFBQUEsRUFBQSxJQUtBakIsTUFBQXNCLEVBQUExQixFQUFBLHlPQUE4UCxJQUFVK0QsUUFBQSxFQUFBQyxTQUFBLDZLQUFBQyxTQUFBQyxTQUFBLCtEQUF5UUMsS0FBQSxhQUFBQyxnQkFBQSwrS0FBZ09DLFdBQUEsMEJDSmp2QixJQUFBYixFQUFBbkMsRUFBQSxJQUVBLGlCQUFBbUMsUUFBQTlCLEVBQUExQixFQUFBd0QsRUFBQSxNQU9BLElBQUFDLEdBQWVDLEtBQUEsRUFFZkMsZUFQQUEsRUFRQUMsZ0JBQUFDLEdBRUF4QyxFQUFBLEVBQUFBLENBQUFtQyxFQUFBQyxHQUVBRCxFQUFBTSxTQUFBcEMsRUFBQUQsUUFBQStCLEVBQUFNLDZCQ2pCQXBDLEVBQUFELFFBQUFKLEVBQUEsRUFBQUEsRUFBQSxJQUtBakIsTUFBQXNCLEVBQUExQixFQUFBLHN5Q0FBMnpDLElBQVUrRCxRQUFBLEVBQUFDLFNBQUEsNklBQUFDLFNBQUFDLFNBQUEsbXdCQUEwNkJDLEtBQUEsYUFBQUMsZ0JBQUEsbTFDQUEwNEMsNElBQXlJQyxXQUFBLHdIQ09sd0hDLEVBQUEsRUFBUUMsSUFBSUMsRUFBQSxHQUNaLE1BQU1DLEVBQVksSUFBT0MsRUFBQSxjQUFDQyxFQUFBLEdBQWdCQyxLQUFLLFVBRS9DTixFQUFBLEVBQVFDLElBQUlDLEVBQUEsR0FDWixNQUFNSyxFQUFXLElBQU9ILEVBQUEsY0FBQ0MsRUFBQSxHQUFnQkMsS0FBSyxTQUU5Q04sRUFBQSxFQUFRQyxJQUFJQyxFQUFBLEdBQ1osTUFBTU0sRUFBZSxJQUFPSixFQUFBLGNBQUNDLEVBQUEsR0FBZ0JDLEtBQUssYUFFbEROLEVBQUEsRUFBUUMsSUFBSVEsRUFBQSxHQUNaLE1BQU1DLEVBQWMsSUFBT04sRUFBQSxjQUFDQyxFQUFBLEdBQWdCQyxNQUFPLE1BQU8sYUFFMUROLEVBQUEsRUFBUUMsSUFBSVEsRUFBQSxHQUNaLE1BQU1FLEVBQWEsSUFBT1AsRUFBQSxjQUFDQyxFQUFBLEdBQWdCQyxNQUFPLE1BQU8sd0JDdkJ6RCxNQUFNTSxFQUFpQixLQUNyQixNQUFNQyxFQUFXQyxFQUFBLEdBQVlDLE9BQzdCLE1BQXFCLFFBQWJGLEdBQW1DLFlBQWJBLGVDRjFCRyxVQUFnQ1osRUFBQSxVQUdwQ2EsU0FDRUMsRUFHQUMsR0FFQUMsUUFBUUMsSUFBSSxnQkFBaUJILEdBQzdCSSxNQUFNQyxTQUFTTCxFQUFPQyxvRENGcEJLLFVBQWlCcEIsRUFBQSxVQU1yQmEsU0FDRSxNQUFNUSxTQUNKQSxFQUFRQyxVQUNSQSxFQUFTQyxNQUNUQSxFQUFLQyxTQUNMQSxHQUNFQyxLQUFLQyxNQUVULE9BQ0UxQixFQUFBLHFCQUFLc0IsaUNBQWtDQSxLQUNwQ0MsR0FBVXZCLEVBQUEscUJBQUtzQixVQUFVLG1CQUFtQkMsR0FDN0N2QixFQUFBLDBCQUNFd0IsU0FBV0csSUFDVCxNQUFNN0QsRUFBUTZELEVBQU1DLE9BQU85RCxNQUNOLGlCQUFWQSxHQUNUMEQsRUFBUzFELElBR2JBLE1BQU91RCxHQUFZLE9BdkJwQkQsRUFBQVMsY0FDTFAsVUFBVyxHQUNYQyxNQUFPLFVDYkxPLEdBQ0dBLEVBQUFwRSxJQUFNLENBQUNVLEdBQWtDMkQsYUFBYUMsUUFBUTVELElBQzlEMEQsRUFBQUcsSUFBTSxFQUFDN0QsRUFBYU4sSUFBeUJpRSxhQUFhRyxRQUFROUQsRUFBS04sSUFDdkVnRSxFQUFBSyxPQUFTLENBQUMvRCxHQUF1QjJELGFBQWFLLFdBQVdoRSxJQ0lsRSxNQUFNaUUsRUFBcUIsNkJDSDNCLE1BQU1DLEVBQWlDLGtCQUFtQkMsc0JDTXBEQyxVQUFleEMsRUFBQSxVQU1uQmEsU0FDRSxNQUFNNEIsT0FDSkEsRUFBTXBCLFNBQ05BLEVBQVFDLFVBQ1JBLEVBQVNvQixRQUNUQSxHQUNFakIsS0FBS0MsTUFFVCxPQUNFMUIsRUFBQSx3QkFDRXNCLDhCQUErQkEsS0FBYW1CLEVBQVMsR0FBSyxZQUMxREMsUUFBU0QsRUFBU0MsRUFBVSxNQUUzQnJCLElBbEJBbUIsRUFBQVgsY0FDTFksUUFBUSxFQUNSbkIsVUFBVyxVQ0FmLE1BQU1xQixFQUFhakIsSUFDakIsTUFBTUosVUFDSkEsRUFBU0MsTUFDVEEsRUFBS3FCLFVBQ0xBLEVBQVNDLGFBQ1RBLEVBQVlDLFNBQ1pBLEVBQVFDLFlBQ1JBLEVBQVdqRixNQUNYQSxHQUNFNEQsRUFFSixPQUNFMUIsRUFBQSxxQkFBS3NCLHdCQUF5QkEsS0FDM0JDLEdBQVV2QixFQUFBLHFCQUFLc0IsVUFBVSxvQkFBb0JDLEdBQzlDdkIsRUFBQSx1QkFDRWdELFlBQWFELEVBQ2JFLEtBQU1ILEVBQVcsV0FBYSxPQUM5QnRCLFNBQVdHLEdBQVVrQixFQUFhbEIsRUFBTUMsT0FBTzlELE9BQy9DOEUsVUFBV0EsRUFDWDlFLE1BQU9BLEdBQVMsc1JDekJ4QixNQUFNb0YsRUFBb0Msa0JBQW1CWCxXQUFhLGdCQUFpQjVELE9BQ3JGd0UsRUFBaUJELEVBQTBCWCxVQUFVWSxjQUFnQixLQVdyRUMsRUFBc0JDLElBQzFCLE1BQ01DLEdBQVVELEVBREEsSUFBSUUsUUFBUSxFQUFJRixFQUFhN0gsT0FBUyxHQUFLLElBRXhEZ0ksUUFBUSxNQUFPLEtBQ2ZBLFFBQVEsS0FBTSxLQUVYQyxFQUFVOUUsT0FBTytFLEtBQUtKLEdBQ3RCSyxFQUFjLElBQUlDLFdBQVdILEVBQVFqSSxRQUUzQyxJQUFLLElBQUlGLEVBQUksRUFBR0EsRUFBSW1JLEVBQVFqSSxTQUFVRixFQUNwQ3FJLEVBQVlySSxHQUFLbUksRUFBUUksV0FBV3ZJLEdBRXRDLE9BQU9xSSxrUkMxQlQsTUFBTUcsRUFBaUIsa0JBQW1CdkIsVUFBWUEsVUFBVVksY0FBZ0IsS0FDMUVZLEVBQWEsY0FBZXBGLE9BQVNBLE9BQU9xRixVQUFZLEtDUzlELE1BQU1DLElBU0Y3RixJQUFLLGFBQ0w4RixLQUFNLElBQ05DLFFBQVMsWUFDVEMsUUFBUyxhQUNUQyx3QkNsQjZCekQsRUFDL0JDLFNBQ0UsT0FDRWIsRUFBQSx5QkFDRUEsRUFBQSxxQ0FDQUEsRUFBQSw4QkFDQUEsRUFBQSwrQ0FDQUEsRUFBQSx3QkFDRUEsRUFBQSxxQ0FDQUEsRUFBQSxzQ0FHRkEsRUFBQSxxQ0FDQUEsRUFBQSx1QkFBR0EsRUFBQSxtQkFBR3NFLEtBQUssb0RBQWtELHFCQUM3RHRFLEVBQUEsK0NBQ0FBLEVBQUEsd0JBQ0VBLEVBQUEsd0JBQUlBLEVBQUEsb0VBQ0pBLEVBQUEsd0JBQ0VBLEVBQUEsY0FBQ3VFLEVBQUEsR0FBS0MsR0FBSUMsR0FBaUIsOEVBRzdCekUsRUFBQSx1Q0FFRUEsRUFBQSwwQ0FDQUEsRUFBQSxxQ0FDQUEsRUFBQSxxRkFLSkEsRUFBQSxvQ0FDQUEsRUFBQSw2Q0FDQUEsRUFBQSx3QkFDRUEsRUFBQSxpREFDQUEsRUFBQSxpREFDQUEsRUFBQSxtREFFRkEsRUFBQSxpRkRsQkowRSxNQUFPLElBR1B0RyxJQUFLLGVBQ0w4RixLQUFNLFVBQ05DLFFBQVMsVUFDVEMsUUFBUyxlQUNUQyx3QkUxQitCekQsRUFDakNDLFNBQ0UsT0FDRWIsRUFBQSx5QkFDRUEsRUFBQSxtQ0FFQUEsRUFBQSxnQ0FDQUEsRUFBQSx1QkFBR0EsRUFBQSwyRUFFSEEsRUFBQSwrQkFDQUEsRUFBQSxzRUFFQUEsRUFBQSxzQ0FDQUEsRUFBQSx3QkFDRUEsRUFBQSx3QkFDRUEsRUFBQSxzQ0FBdUJBLEVBQUEsMkRBR3pCQSxFQUFBLHdCQUNFQSxFQUFBLDBDQUEyQkEsRUFBQSw2SUFLN0JBLEVBQUEsd0JBQ0VBLEVBQUEscUNBQXNCQSxFQUFBLDRFQUV0QkEsRUFBQSx3QkFDRUEsRUFBQSx3QkFDRUEsRUFBQSx1Q0FBd0JBLEVBQUEsK0ZBTzlCQSxFQUFBLHdCQUFJQSxFQUFBLHdDQUNKQSxFQUFBLHdCQUFJQSxFQUFBLDRDQUVOQSxFQUFBLHFDQUNBQSxFQUFBLHdCQUNFQSxFQUFBLHdCQUNFQSxFQUFBLDZDQUE4QkEsRUFBQSw0Q0FFOUJBLEVBQUEsd0JBQ0VBLEVBQUEsd0JBQ0VBLEVBQUEscUNBQXNCQSxFQUFBLDBFQUVBQSxFQUFBLG1CQUFHc0UsS0FBSyx3REFBc0QsNEJBSTFGdEUsRUFBQSx3QkFDRUEsRUFBQSx1Q0FBd0JBLEVBQUEsNERBRzFCQSxFQUFBLHdCQUNFQSxFQUFBLHdDQUF5QkEsRUFBQSxxSEFLN0JBLEVBQUEsbUNBQ0FBLEVBQUEsd0JBQ0VBLEVBQUEsd0JBQUlBLEVBQUEsb0NBQ0pBLEVBQUEsd0JBQUlBLEVBQUEsd0NBR05BLEVBQUEsc0NBQ0FBLEVBQUEsd0JBQ0VBLEVBQUEsd0JBQUlBLEVBQUEsbUJBQUdzRSxLQUFLLCtCQUE2QixVQUN6Q3RFLEVBQUEsd0JBQUlBLEVBQUEsbUJBQUdzRSxLQUFLLGlDQUErQixZQUMzQ3RFLEVBQUEsd0JBQUlBLEVBQUEsbUJBQUdzRSxLQUFLLGdDQUE4QixlRjdDaERJLE1BQU8sSUFHUHRHLElBQUssYUFDTDhGLEtBQU0sY0FDTkMsUUFBUyxNQUNUQyxRQUFTLGFBQ1RDLHdCRy9COEJ6RCxFQUNoQ0MsU0FDRSxPQUNFYixFQUFBLHFCQUFLMkUsR0FBRyx3QkFDTjNFLEVBQUEsK0JBQ0FBLEVBQUEsMERBQ0FBLEVBQUEsZ0NBQ0FBLEVBQUEsd0JBQ0VBLEVBQUEsd0JBQUlBLEVBQUEsY0FBQ3VFLEVBQUEsR0FBS0MsR0FBSUMsR0FBaUIsbUJBQy9CekUsRUFBQSx3QkFBSUEsRUFBQSxjQUFDdUUsRUFBQSxHQUFLQyxHQUFJSSxHQUFVLGdCSHVCOUJGLE1BQU8sSUFHUHRHLElBQUssaUJBQ0w4RixLQUFNLDZCQUNOQyxRQUFTLFdBQ1RDLFFBQVMsaUJBQ1RDLHdCSXRDaUN6RCxFQUNuQ0MsU0FDRSxPQUNFYixFQUFBLHFCQUFLMkUsR0FBRyw0QkFDTjNFLEVBQUEsb0NBQ0FBLEVBQUEsdUNBQ0FBLEVBQUEsZ0dBSUFBLEVBQUEsdUNBQ0FBLEVBQUEsMkNBQ0FBLEVBQUEsd0JBQ0VBLEVBQUEsd0JBQUlBLEVBQUEsY0FBQ3VFLEVBQUEsR0FBS0MsR0FBSUssR0FBc0IsYUFDcEM3RSxFQUFBLHdCQUFJQSxFQUFBLGNBQUN1RSxFQUFBLEdBQUtDLEdBQUlNLEdBQWlDLGNBQy9DOUUsRUFBQSx3QkFBSUEsRUFBQSxjQUFDdUUsRUFBQSxHQUFLQyxHQUFJTyxHQUErQixtQkFFL0MvRSxFQUFBLHdDQUFzQixJQUN0QkEsRUFBQSxnREFDQUEsRUFBQSx1QkFBR0EsRUFBQSxtQkFBR3NFLEtBQUssMERBQXdELGlDSm9CdkVJLE1BQU8sSUFHUHRHLElBQUssdUJBQ0w4RixLQUFNLG1DQUNOQyxRQUFTLFdBQ1RDLFFBQVMsWUFDVEMsd0JMbERzQ3pELEVBQ3hDQyxTQUNFLE9BQ0ViLEVBQUEscUJBQUsyRSxHQUFHLGtDQUNOM0UsRUFBQSxvQ0FFQUEsRUFBQSx1Q0FDQUEsRUFBQSx5RkFDQUEsRUFBQSxzREFFQUEsRUFBQSx5Q0FDQUEsRUFBQSx1QkFBSXNDLEVBQXVCLFlBQWMsV0FFeENBLEdBQ0N0QyxFQUFBLHlCQUNFQSxFQUFBLG1DQUNBQSxFQUFBLG1GQUNBQSxFQUFBLHdCQUNFQSxFQUFBLGtGQUNBQSxFQUFBLCtES2dDVjBFLE1BQU8sSUFHUHRHLElBQUssbUNBQ0w4RixLQUFNLCtDQUNOQyxRQUFTLFlBQ1RDLFFBQVMsd0JBQ1RDLHdCRmxDaUR6RCxFQUFyREMsa0NBQ0VZLEtBQUFYLE9BQ0VrRSxVQUFXLEdBQ1hDLGlCQUFrQixJQUdwQnhELEtBQUF5RCx3QkFBMEIsS0FBMEJDLEVBQUExRCxVQUFBLHFCQUNsRCxNQUFNdUQsVUFBRUEsR0FBY3ZELEtBQUtYLE1BQzNCLEdBQWtCLEtBQWRrRSxHQUFxQyxNQUFqQjdCLEVBQXhCLENBR0FuQyxRQUFRQyxJQUFJLHVDQUNaLElBQ0UsTUFBTW1FLFFBQXVCakMsRUFBY2tDLFNBQVMsc0JBQ3BEckUsUUFBUUMsSUFBSSw4QkFBK0JtRSxHQUMzQyxNQUFNRSxFQUF1QmxDLEVBQW1CNEIsU0FDMUNJLEVBQWVHLFlBQVlDLGtCQUNqQyxNQUFNQyxHQUFXQyxpQkFBaUIsRUFBTUosd0JBQ3hDRixFQUFlRyxZQUFZSSxVQUFVRixHQUN0QkcsS0FBTUMsSUFDTDdFLFFBQVFDLElBQUksc0JBQXVCNEUsR0FDbkNwRSxLQUFLTixVQUFXOEQsaUJBQWtCYSxLQUFLQyxVQUFVRixFQUFjLEtBQU0sVUFFckYsTUFBT0csR0FDUGhGLFFBQVFnRixNQUFNLHVCQUF3QkEsUUFJMUNuRixTQUNFLE1BQU1tRSxVQUFFQSxFQUFTQyxpQkFBRUEsR0FBcUJ4RCxLQUFLWCxNQUU3QyxPQUNFZCxFQUFBLHFCQUFLMkUsR0FBRyxpQ0FDTjNFLEVBQUEscUNBRUFBLEVBQUEsd0NBQ0FBLEVBQUEsa0ZBRUFBLEVBQUEseUNBQ0FBLEVBQUEsdUJBQUlrRCxFQUEwQixZQUFjLFdBRTNDQSxHQUNDbEQsRUFBQSx5QkFDRUEsRUFBQSxtQ0FDQUEsRUFBQSx3QkFDRUEsRUFBQSx3QkFDRUEsRUFBQSxtQkFDRXNFLEtBQUssc0NBQ0wxQyxPQUFPLFVBQVEsdUNBTW5CNUIsRUFBQSxzQ0FBZUEsRUFBQSxzREFDZkEsRUFBQSw2QkFBTUEsRUFBQSx5Q0FBdUJBLEVBQUEsdURBQzdCQSxFQUFBLHdCQUFJQSxFQUFBLHlDQUF1QkEsRUFBQSwrREFDM0JBLEVBQUEsd0RBQ0FBLEVBQUEsd0JBQUlBLEVBQUEseUNBQXVCQSxFQUFBLCtFQUUzQkEsRUFBQSxtQ0FBWUEsRUFBQSxvRUFDWkEsRUFBQSxtQ0FBWUEsRUFBQSxvRUFDWkEsRUFBQSxtQ0FBWUEsRUFBQSw4REFDWkEsRUFBQSwrQ0FHRkEsRUFBQSxpQ0FDQUEsRUFBQSxxQkFBS3NCLFVBQVUsU0FDYnRCLEVBQUEsY0FBQzJDLEdBQ0NwQixNQUFNLGFBQ05xQixVQUFXLElBQ1hDLGFBQWVvRCxHQUF1QnhFLEtBQUtOLFVBQVc2RCxVQUFXaUIsSUFDakVsRCxZQUFZLGFBQ1pqRixNQUFPa0gsSUFFVGhGLEVBQUEsY0FBQ3dDLEdBQ0NDLE9BQXNCLEtBQWR1QyxFQUNSMUQsVUFBVSw0QkFDVm9CLFFBQVMsSUFBTWpCLEtBQUt5RCwyQkFBeUIsc0JBSS9DbEYsRUFBQSxjQUFDb0IsR0FDQ0UsVUFBVSxvQkFDVkMsTUFBTSxvQkFDTkMsU0FBVSxTQUFNckMsR0FFZjhGLFFFcERiUCxNQUFPLElBR1B0RyxJQUFLLGlDQUNMOEYsS0FBTSw2Q0FDTkMsUUFBUyxnQkFDVEMsUUFBUyxzQkFDVEMsd0JEM0QrQ3pELEVBQW5EQyxrQ0FDRVksS0FBQXlFLFdBQW9DLEtBQ3BDekUsS0FBQTBFLEdBQTJCLEtBQzNCMUUsS0FBQVgsT0FDRXNGLFlBQ0FDLHVCQUF1QixHQXlDekI1RSxLQUFBNkUsZUFBaUIsTUFDZixHQUFlLE1BQVg3RSxLQUFLMEUsR0FDUCxPQUVGLE1BQU1DLFNBQUVBLEdBQWEzRSxLQUFLWCxNQUVwQnlGLEVBQThCOUUsS0FBSzBFLEdBQUdJLGFBQWEsbUJBQW9CLGFBQzdFQSxFQUFZQyxRQUFVLENBQUNSLEdBQVVoRixRQUFRZ0YsTUFBTSxVQUFXQSxJQUUxRCxNQUFNUyxFQUFzQkYsRUFBWUcsWUFBWSxtQkFDWkMsU0FDeENGLEVBQVFELFFBQVUsQ0FBQ1IsR0FBVWhGLFFBQVFnRixNQUFNLFVBQVdBLElBQ3REUyxFQUFRRyxVQUFZLENBQUNqRixJQUNuQixNQUFNa0YsRUFBZ0NsRixFQUFNQyxPQUE0QnZGLE9BQ0F5SyxVQUNBakksTUFBTSxFQUFHLElBQ2pGLEdBQTJCLElBQXZCZ0ksRUFBWXJMLE9BQ2QsT0FHRixNQUFNdUwsRUFBMkJYLEVBQVM1SyxTQUFXcUwsRUFBWXJMLE9BQzNEd0wsRUFBc0NELE9BQWtCNUgsRUFDbEIwSCxFQUFZSSxLQUFLLENBQUNDLEVBQVNDLElBQ3pCRCxFQUFRdkMsS0FBT3lCLEVBQVNlLEdBQU94QyxJQUFNdUMsRUFBUTdLLFNBQVcrSixFQUFTZSxHQUFPOUssU0FHbEgwSyxHQUFrQyxNQUFmQyxJQUNyQnZGLEtBQUtOLFVBQVdpRixTQUFVUyxRQUtoQ3BGLEtBQUEyRixtQkFBcUIsTUFDbkIsR0FBcUIsTUFBakJ0RCxHQUFvQyxNQUFYckMsS0FBSzBFLEdBQ2hDLE9BRUYsTUFBTWtCLEdBQWFuRCxLQUFNLGdCQUFpQjdILE9BQVEsR0FBSWlMLFdBQVcsSUFBS0MsTUFBUUMsV0FDeEVqQixFQUE4QjlFLEtBQUswRSxHQUFHSSxhQUFhLG1CQUFvQixhQUM3RUEsRUFBWUMsUUFBVSxDQUFDUixHQUFVaEYsUUFBUWdGLE1BQU0sVUFBV0EsSUFFMUQsTUFBTVMsRUFBc0JGLEVBQVlHLFlBQVksbUJBQ1o3RyxJQUFJd0gsR0FDNUNaLEVBQVFELFFBQVUsQ0FBQ1IsR0FBVWhGLFFBQVFnRixNQUFNLFVBQVdBLElBQ3REUyxFQUFRRyxVQUFZLENBQU9qRixHQUFnQjhGLEVBQUFoRyxVQUFBLHFCQUN6QyxNQUFNMkQsUUFBdUJ0QixFQUFjNEQsTUFDM0MsR0FBSSxTQUFVdEMsRUFBZ0IsQ0FDNUIsTUFDTXVDLHFCQURjaEcsRUFBTUMsT0FBNEJ2RixTQUV0RCtJLEVBQWV3QyxLQUFLdkMsU0FBU3NDLEdBQzdCbEcsS0FBSzZFLHVCQXZGWHpGLHFCQUNFLEdBQWlCLE1BQWJrRCxHQUFzQyxNQUFqQkQsRUFDdkIsT0FHRkEsRUFDRzRELE1BQ0E5QixLQUFNUixJQUNELFNBQVVBLEdBQ1ozRCxLQUFLTixVQUFXa0YsdUJBQXVCLE1BSTdDLE1BQU13QixFQUFrQzlELEVBQVUrRCxLQUFLLGlCQUFrQixHQUN6RUQsRUFBY0UsZ0JBQWtCLENBQUNwRyxJQUMvQixNQUFNd0UsRUFBbUJ4RSxFQUFNQyxPQUE0QnZGLE9BRTNEOEosRUFBRzZCLGtCQUFrQixtQkFESEMsUUFBUyxLQUFNQyxlQUFlLElBRWhEekcsS0FBSzBFLEdBQUtBLElBRVowQixFQUFjckIsUUFBVSxDQUFDUixHQUFVaEYsUUFBUWdGLE1BQU0sVUFBV0EsSUFDNUQ2QixFQUFjakIsVUFBWSxDQUFDakYsSUFDekJGLEtBQUswRSxHQUFNeEUsRUFBTUMsT0FBNEJ2RixTQUlqRHdFLG9CQUNFWSxLQUFLNkUsaUJBQ0w3RSxLQUFLeUUsV0FBYWlDLFlBQVkxRyxLQUFLNkUsZUFBZ0IsS0FHckR6Rix1QkFDeUIsTUFBbkJZLEtBQUt5RSxhQUNQa0MsY0FBYzNHLEtBQUt5RSxZQUNuQnpFLEtBQUt5RSxXQUFhLE1BMER0QnJGLFNBQ0UsTUFBTXVGLFNBQUVBLEVBQVFDLHNCQUFFQSxHQUEwQjVFLEtBQUtYLE1BRWpELE9BQ0VkLEVBQUEscUJBQUsyRSxHQUFHLDRDQUNOM0UsRUFBQSx3Q0FFQUEsRUFBQSwyQ0FDQUEsRUFBQSxrR0FDQUEsRUFBQSxnREFFQUEsRUFBQSx5Q0FDQUEsRUFBQSx1QkFBSXFHLEVBQXdCLFlBQWMsV0FFekNBLEdBQ0NyRyxFQUFBLHlCQUNFQSxFQUFBLG1DQUNBQSxFQUFBLHdCQUNFQSxFQUFBLGtGQUNBQSxFQUFBLDZCQUFNQSxFQUFBLHlDQUF1QkEsRUFBQSxpRUFDN0JBLEVBQUEsNkJBQU1BLEVBQUEseUNBQXVCQSxFQUFBLDhDQUE0QkEsRUFBQSx5REFFekRBLEVBQUEsMENBQ0FBLEVBQUEsNkJBQU1BLEVBQUEseUNBQXVCQSxFQUFBLHdDQUFzQkEsRUFBQSxnRUFJckRBLEVBQUEsaUNBQ0FBLEVBQUEscUJBQUtzQixVQUFVLFNBQ2J0QixFQUFBLGNBQUN3QyxHQUFPRSxRQUFTLElBQU1qQixLQUFLMkYsc0JBQW9CLHdCQUdoRHBILEVBQUEsK0JBQ0FBLEVBQUEsMkJBQ0VBLEVBQUEsMkJBQ0VBLEVBQUEsd0JBQ0VBLEVBQUEsb0JBQUlzQixVQUFVLG1CQUFpQixNQUMvQnRCLEVBQUEsZ0NBQ0FBLEVBQUEsa0NBQ0FBLEVBQUEsdUNBR0pBLEVBQUEsMkJBQ0dvRyxFQUFTaUMsSUFBSWhCLEdBQ1pySCxFQUFBLG9CQUFJNUIsSUFBS2lKLEVBQVMxQyxJQUNoQjNFLEVBQUEsd0JBQUtxSCxFQUFTMUMsSUFDZDNFLEVBQUEsd0JBQUtxSCxFQUFTbkQsTUFDZGxFLEVBQUEsd0JBQUtxSCxFQUFTaEwsUUFBVSxLQUN4QjJELEVBQUEsd0JBQUtxSCxFQUFTQyxXQUFhLGNDeEY3QzVDLE1BQU8sSUFHUHRHLElBQUssVUFDTDhGLEtBQU0sc0JBQ05DLFFBQVMsUUFDVEMsUUFBUyxVQUNUQyx3Qk5wRTBCekQsRUFBOUJDLGtDQUNFWSxLQUFBWCxPQUNFd0gsUUFBUyxHQUNUQyxPQUFRLElBUVY5RyxLQUFBb0IsYUFBZSxDQUFDMEYsSUFDZHpHLEVBQVFHLElBQUlJLEVBQVlrRyxHQUN4QjlHLEtBQUtOLFVBQVdvSCxXQUNELEtBQVhBLEdBQ0ZDLEVBQUEsVUFDYUQsR0FDVjNDLEtBQU0wQyxJQUNMN0csS0FBS04sVUFBV21ILGNBRWpCRyxNQUFPekMsSUFDTmhGLFFBQVFnRixNQUFNLHlCQUEwQkEsT0FmaERuRixvQkFDRSxNQUFNMEgsRUFBaUJ6RyxFQUFRcEUsSUFBSTJFLElBQWUxRCxPQUFPK0osU0FBU3BFLEtBQ2xFN0MsS0FBS29CLGFBQWEwRixHQWtCcEIxSCxTQUNFLE1BQU15SCxRQUFFQSxFQUFPQyxPQUFFQSxHQUFXOUcsS0FBS1gsTUFFakMsT0FDRWQsRUFBQSxxQkFBSzJFLEdBQUcscUJBQ04zRSxFQUFBLG1DQUNBQSxFQUFBLHFCQUFLc0IsVUFBVSxTQUNBLEtBQVpnSCxHQUNDdEksRUFBQSxxQkFBSzJFLEdBQUcseUJBQ04zRSxFQUFBLHFCQUNFMkksSUFBS0wsRUFDTE0sSUFBSSxhQUlWNUksRUFBQSxjQUFDb0IsR0FDQ0csTUFBTSxnQkFDTkMsU0FBVUMsS0FBS29CLGNBRWQwRixJQUlMdkksRUFBQSxxQ0FDQUEsRUFBQSwrRkFDQUEsRUFBQSxzRE1rQkowRSxNQUFPLElBSUxtRSxFQUFXNUUsRUFBTW9FLElBQUtTLEtBQzFCNUUsS0FBTTRFLEVBQUs1RSxLQUNYQyxRQUFTMkUsRUFBSzNFLFFBQ2RDLFFBQVMwRSxFQUFLMUUsUUFDZE0sTUFBT29FLEVBQUtwRSxTQUdScUUsRUFDSi9JLEVBQUEsY0FBQ2dKLEVBQUEsRUFBTSxLQUNMaEosRUFBQSw0Qkt0RXNCQSxFQUFBLFVBQTFCYSxrQ0FDRVksS0FBQVgsT0FBaUJtSSxVQUFVLEdBRTNCeEgsS0FBQXlILHdCQUEwQixNQUNwQjFJLEtBQ0ZpQixLQUFLTixVQUFXOEgsVUFBVSxNQUk5QnBJLGVBQWVzSSxFQUFZQyxHQUN6QixNQUFNMUUsTUFDSkEsRUFBS1IsS0FDTEEsRUFBSUMsUUFDSkEsRUFBT0MsUUFDUEEsR0FDRStFLEVBRUVySyxFQUNKa0IsRUFBQSx5QkFDRUEsRUFBQSxxQkFBS3NCLFVBQVUsWUFDWjZDLEdBRUhuRSxFQUFBLHFCQUFLc0IsVUFBVSxZQUNaOEMsSUFLUCxPQUFJZ0YsRUFFQXBKLEVBQUEscUJBQUtzQiw4QkFBK0JvRCxZQUNqQzVGLEdBTUxrQixFQUFBLGNBQUN1RSxFQUFBLEdBQ0NDLEdBQUlOLEVBQ0o1Qyw4QkFBK0JvRCxJQUMvQmhDLFFBQVNqQixLQUFLeUgseUJBRWJwSyxHQUtQK0IsU0FDRSxNQUFNUSxTQUFFQSxFQUFRZ0ksU0FBRUEsR0FBYTVILEtBQUtDLE9BQzlCdUgsU0FBRUEsR0FBYXhILEtBQUtYLE1BQ3BCd0ksRUFBc0IzSyxPQUFPK0osU0FBU2EsS0FBS0MsT0FBTyxHQUV4RCxPQUNFeEosRUFBQSxxQkFBSzJFLEdBQUcsZ0JBQ04zRSxFQUFBLHFCQUNFMkUsR0FBRyx1QkFDSHJELFVBQVcySCxFQUFXLFlBQWMsSUFFcENqSixFQUFBLHFCQUFLMkUsR0FBRyw4QkFDTHRELElBR0o0SCxFQUdFakosRUFBQSxxQkFBSzJFLEdBQUcscUJBQ04zRSxFQUFBLHdCQUNFc0IsVUFBVSxrQ0FDVm9CLFFBQVMsSUFBTWpCLEtBQUtOLFVBQVc4SCxVQUFVLEtBRXpDakosRUFBQSxjQUFDRCxFQUFTLE1BQ1ZDLEVBQUEsb0NBRURxSixFQUFTaEIsSUFBS2MsR0FDYm5KLEVBQUEscUJBQ0U1QixJQUFLK0ssRUFBS2pGLEtBQ1Y1QyxVQUFVLGFBRVRHLEtBQUtnSSxlQUFlTixFQUFNRyxJQUFnQkgsRUFBS2pGLFNBS3REbEUsRUFBQSx3QkFDRXNCLFVBQVUsa0NBQ1ZvQixRQUFTLElBQU1qQixLQUFLTixVQUFXOEgsVUFBVSxLQUV6Q2pKLEVBQUEsY0FBQ0csRUFBUSxNQUNUSCxFQUFBLG1DQUtMQSxFQUFBLHFCQUFLMkUsR0FBRyx1QkFDTjNFLEVBQUEscUJBQUtzQixVQUFVLGdCQUNidEIsRUFBQSxtQkFBR3NFLEtBQUssOEJBQ050RSxFQUFBLGNBQUNJLEVBQVksT0FFZkosRUFBQSxtQkFDRXNFLEtBQUssZ0NBQ0wxQyxPQUFPLFVBRVA1QixFQUFBLGNBQUNNLEVBQVcsT0FFZE4sRUFBQSxtQkFDRXNFLEtBQUssK0JBQ0wxQyxPQUFPLFVBRVA1QixFQUFBLGNBQUNPLEVBQVUsUUFHZlAsRUFBQSxxQkFBS3NCLFVBQVUsaUJBQWUsMkJMekN2QitILFNBQVVSLEdBQ3BCNUUsRUFBTW9FLElBQUtTLEdBQ1Y5SSxFQUFBLGNBQUMwSixFQUFBLEdBQ0NyRixVQUFXeUUsRUFBS3pFLFVBQ2hCc0YsT0FBSyxFQUNMdkwsSUFBSzBLLEVBQUs1RSxLQUNWQSxLQUFNNEUsRUFBSzVFLEtBQ1gwRixRQUFNLE9BT1ZDLEVBQWV6TCxJQUNuQixNQUFNMEssRUFBTzdFLEVBQU1nRCxLQUFNNkIsR0FBU0EsRUFBSzFLLE1BQVFBLEdBQy9DLEdBQVksTUFBUjBLLEVBQ0YsTUFBTSxJQUFJZ0Isb0JBQW9CMUwsS0FFaEMsU0FBVTBLLEVBQUs1RSxRQUVYTyxFQUE0Qm9GLEVBQVksa0JBQ3hDaEYsRUFBaUNnRixFQUFZLHdCQUM3Qy9FLEVBQTRDK0UsRUFBWSxvQ0FDeEQ5RSxFQUEwQzhFLEVBQVksa0NBQ3REakYsRUFBcUJpRixFQUFZLGlCTXZIbkMsa0JBQW1CdEgsV0FDckJBLFVBQ0dZLGNBQ0FrQyxTQUFTLHNCQUNUTyxLQUFNbUUsR0FBc0IvSSxRQUFRQyxJQUFJLHVCQUF3QjhJLEVBQWFDLFFBQzdFdkIsTUFBT3pDLEdBQWVoRixRQUFRQyxJQUFJLHNDQUF1QytFLElBRzlFckssT0FBQXNPLEVBQUEsT0FBQXRPLENBQU9vTixFQUFRbUIsU0FBU0MsZUFBZSIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIGluc3RhbGwgYSBKU09OUCBjYWxsYmFjayBmb3IgY2h1bmsgbG9hZGluZ1xuIFx0ZnVuY3Rpb24gd2VicGFja0pzb25wQ2FsbGJhY2soZGF0YSkge1xuIFx0XHR2YXIgY2h1bmtJZHMgPSBkYXRhWzBdO1xuIFx0XHR2YXIgbW9yZU1vZHVsZXMgPSBkYXRhWzFdO1xuIFx0XHR2YXIgZXhlY3V0ZU1vZHVsZXMgPSBkYXRhWzJdO1xuXG4gXHRcdC8vIGFkZCBcIm1vcmVNb2R1bGVzXCIgdG8gdGhlIG1vZHVsZXMgb2JqZWN0LFxuIFx0XHQvLyB0aGVuIGZsYWcgYWxsIFwiY2h1bmtJZHNcIiBhcyBsb2FkZWQgYW5kIGZpcmUgY2FsbGJhY2tcbiBcdFx0dmFyIG1vZHVsZUlkLCBjaHVua0lkLCBpID0gMCwgcmVzb2x2ZXMgPSBbXTtcbiBcdFx0Zm9yKDtpIDwgY2h1bmtJZHMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRjaHVua0lkID0gY2h1bmtJZHNbaV07XG4gXHRcdFx0aWYoaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdKSB7XG4gXHRcdFx0XHRyZXNvbHZlcy5wdXNoKGluc3RhbGxlZENodW5rc1tjaHVua0lkXVswXSk7XG4gXHRcdFx0fVxuIFx0XHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IDA7XG4gXHRcdH1cbiBcdFx0Zm9yKG1vZHVsZUlkIGluIG1vcmVNb2R1bGVzKSB7XG4gXHRcdFx0aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vcmVNb2R1bGVzLCBtb2R1bGVJZCkpIHtcbiBcdFx0XHRcdG1vZHVsZXNbbW9kdWxlSWRdID0gbW9yZU1vZHVsZXNbbW9kdWxlSWRdO1xuIFx0XHRcdH1cbiBcdFx0fVxuIFx0XHRpZihwYXJlbnRKc29ucEZ1bmN0aW9uKSBwYXJlbnRKc29ucEZ1bmN0aW9uKGRhdGEpO1xuXG4gXHRcdHdoaWxlKHJlc29sdmVzLmxlbmd0aCkge1xuIFx0XHRcdHJlc29sdmVzLnNoaWZ0KCkoKTtcbiBcdFx0fVxuXG4gXHRcdC8vIGFkZCBlbnRyeSBtb2R1bGVzIGZyb20gbG9hZGVkIGNodW5rIHRvIGRlZmVycmVkIGxpc3RcbiBcdFx0ZGVmZXJyZWRNb2R1bGVzLnB1c2guYXBwbHkoZGVmZXJyZWRNb2R1bGVzLCBleGVjdXRlTW9kdWxlcyB8fCBbXSk7XG5cbiBcdFx0Ly8gcnVuIGRlZmVycmVkIG1vZHVsZXMgd2hlbiBhbGwgY2h1bmtzIHJlYWR5XG4gXHRcdHJldHVybiBjaGVja0RlZmVycmVkTW9kdWxlcygpO1xuIFx0fTtcbiBcdGZ1bmN0aW9uIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCkge1xuIFx0XHR2YXIgcmVzdWx0O1xuIFx0XHRmb3IodmFyIGkgPSAwOyBpIDwgZGVmZXJyZWRNb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG4gXHRcdFx0dmFyIGRlZmVycmVkTW9kdWxlID0gZGVmZXJyZWRNb2R1bGVzW2ldO1xuIFx0XHRcdHZhciBmdWxmaWxsZWQgPSB0cnVlO1xuIFx0XHRcdGZvcih2YXIgaiA9IDE7IGogPCBkZWZlcnJlZE1vZHVsZS5sZW5ndGg7IGorKykge1xuIFx0XHRcdFx0dmFyIGRlcElkID0gZGVmZXJyZWRNb2R1bGVbal07XG4gXHRcdFx0XHRpZihpbnN0YWxsZWRDaHVua3NbZGVwSWRdICE9PSAwKSBmdWxmaWxsZWQgPSBmYWxzZTtcbiBcdFx0XHR9XG4gXHRcdFx0aWYoZnVsZmlsbGVkKSB7XG4gXHRcdFx0XHRkZWZlcnJlZE1vZHVsZXMuc3BsaWNlKGktLSwgMSk7XG4gXHRcdFx0XHRyZXN1bHQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IGRlZmVycmVkTW9kdWxlWzBdKTtcbiBcdFx0XHR9XG4gXHRcdH1cbiBcdFx0cmV0dXJuIHJlc3VsdDtcbiBcdH1cblxuIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3NcbiBcdC8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuIFx0Ly8gUHJvbWlzZSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbiBcdHZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG4gXHRcdDA6IDBcbiBcdH07XG5cbiBcdHZhciBkZWZlcnJlZE1vZHVsZXMgPSBbXTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0dmFyIGpzb25wQXJyYXkgPSB3aW5kb3dbXCJ3ZWJwYWNrSnNvbnBcIl0gPSB3aW5kb3dbXCJ3ZWJwYWNrSnNvbnBcIl0gfHwgW107XG4gXHR2YXIgb2xkSnNvbnBGdW5jdGlvbiA9IGpzb25wQXJyYXkucHVzaC5iaW5kKGpzb25wQXJyYXkpO1xuIFx0anNvbnBBcnJheS5wdXNoID0gd2VicGFja0pzb25wQ2FsbGJhY2s7XG4gXHRqc29ucEFycmF5ID0ganNvbnBBcnJheS5zbGljZSgpO1xuIFx0Zm9yKHZhciBpID0gMDsgaSA8IGpzb25wQXJyYXkubGVuZ3RoOyBpKyspIHdlYnBhY2tKc29ucENhbGxiYWNrKGpzb25wQXJyYXlbaV0pO1xuIFx0dmFyIHBhcmVudEpzb25wRnVuY3Rpb24gPSBvbGRKc29ucEZ1bmN0aW9uO1xuXG5cbiBcdC8vIGFkZCBlbnRyeSBtb2R1bGUgdG8gZGVmZXJyZWQgbGlzdFxuIFx0ZGVmZXJyZWRNb2R1bGVzLnB1c2goWzkxLDFdKTtcbiBcdC8vIHJ1biBkZWZlcnJlZCBtb2R1bGVzIHdoZW4gcmVhZHlcbiBcdHJldHVybiBjaGVja0RlZmVycmVkTW9kdWxlcygpO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9pbmRleC5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS0yIS4vaW5kZXguc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9pbmRleC5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSh0cnVlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIiNjb21tb24tZnJhbWUge1xcbiAgYm90dG9tOiAwO1xcbiAgbGVmdDogMDtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHJpZ2h0OiAwO1xcbiAgdG9wOiAwOyB9XFxuICAjY29tbW9uLWZyYW1lIC5jb21tb24tZnJhbWUtaGVhZGVyLW1lbnUtYnV0dG9uIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgICBib3gtc2hhZG93OiAtOHB4IDhweCA4cHggMCAjZmZmO1xcbiAgICBoZWlnaHQ6IDI4cHg7XFxuICAgIHBhZGRpbmc6IDhweCAxMnB4IDAgMDtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICByaWdodDogMDtcXG4gICAgdG9wOiAwOyB9XFxuICAgICNjb21tb24tZnJhbWUgLmNvbW1vbi1mcmFtZS1oZWFkZXItbWVudS1idXR0b24gc3BhbiB7XFxuICAgICAgbWFyZ2luLWxlZnQ6IDRweDsgfVxcbiAgI2NvbW1vbi1mcmFtZSAjY29tbW9uLWZyYW1lLW1lbnUge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICM4ODg7XFxuICAgIGJvdHRvbTogMzJweDtcXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcXG4gICAgb3BhY2l0eTogMC45NTtcXG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xcbiAgICBwYWRkaW5nOiA0MnB4IDE2cHggOHB4IDE2cHg7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgcmlnaHQ6IDA7XFxuICAgIHRvcDogMDtcXG4gICAgd2lkdGg6IDEwMCU7IH1cXG4gICAgI2NvbW1vbi1mcmFtZSAjY29tbW9uLWZyYW1lLW1lbnUgLm1lbnUtaXRlbSAubWVudS1idXR0b24ge1xcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xcbiAgICAgIHBhZGRpbmc6IDZweCAxNnB4O1xcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxcbiAgICAgICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1tZW51IC5tZW51LWl0ZW0gLm1lbnUtYnV0dG9uLmxldmVsMSAudGl0bGUtanAsICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1tZW51IC5tZW51LWl0ZW0gLm1lbnUtYnV0dG9uLmxldmVsMSAudGl0bGUtZW4sICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1tZW51IC5tZW51LWl0ZW0gLm1lbnUtYnV0dG9uLmxldmVsMiAudGl0bGUtanAsICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1tZW51IC5tZW51LWl0ZW0gLm1lbnUtYnV0dG9uLmxldmVsMiAudGl0bGUtZW4sICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1tZW51IC5tZW51LWl0ZW0gLm1lbnUtYnV0dG9uLmxldmVsMyAudGl0bGUtanAsICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1tZW51IC5tZW51LWl0ZW0gLm1lbnUtYnV0dG9uLmxldmVsMyAudGl0bGUtZW4ge1xcbiAgICAgICAgbGluZS1oZWlnaHQ6IGNhbGMoMWVtICsgMnB4KTsgfVxcbiAgICAgICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1tZW51IC5tZW51LWl0ZW0gLm1lbnUtYnV0dG9uIC50aXRsZS1lbiB7XFxuICAgICAgICBjb2xvcjogIzg4ODsgfVxcbiAgICAgICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1tZW51IC5tZW51LWl0ZW0gLm1lbnUtYnV0dG9uLmxldmVsMSB7XFxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDhweDsgfVxcbiAgICAgICAgI2NvbW1vbi1mcmFtZSAjY29tbW9uLWZyYW1lLW1lbnUgLm1lbnUtaXRlbSAubWVudS1idXR0b24ubGV2ZWwxIC50aXRsZS1qcCB7XFxuICAgICAgICAgIGZvbnQtc2l6ZTogMThweDsgfVxcbiAgICAgICAgI2NvbW1vbi1mcmFtZSAjY29tbW9uLWZyYW1lLW1lbnUgLm1lbnUtaXRlbSAubWVudS1idXR0b24ubGV2ZWwxIC50aXRsZS1lbiB7XFxuICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDsgfVxcbiAgICAgICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1tZW51IC5tZW51LWl0ZW0gLm1lbnUtYnV0dG9uLmxldmVsMiB7XFxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDI0cHg7IH1cXG4gICAgICAgICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1tZW51IC5tZW51LWl0ZW0gLm1lbnUtYnV0dG9uLmxldmVsMiAudGl0bGUtanAge1xcbiAgICAgICAgICBmb250LXNpemU6IDE2cHg7IH1cXG4gICAgICAgICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1tZW51IC5tZW51LWl0ZW0gLm1lbnUtYnV0dG9uLmxldmVsMiAudGl0bGUtZW4ge1xcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7IH1cXG4gICAgICAjY29tbW9uLWZyYW1lICNjb21tb24tZnJhbWUtbWVudSAubWVudS1pdGVtIC5tZW51LWJ1dHRvbi5sZXZlbDMge1xcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA0MnB4OyB9XFxuICAgICAgICAjY29tbW9uLWZyYW1lICNjb21tb24tZnJhbWUtbWVudSAubWVudS1pdGVtIC5tZW51LWJ1dHRvbi5sZXZlbDMgLnRpdGxlLWpwIHtcXG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4OyB9XFxuICAgICAgICAjY29tbW9uLWZyYW1lICNjb21tb24tZnJhbWUtbWVudSAubWVudS1pdGVtIC5tZW51LWJ1dHRvbi5sZXZlbDMgLnRpdGxlLWVuIHtcXG4gICAgICAgICAgZm9udC1zaXplOiAxMHB4OyB9XFxuICAgICAgI2NvbW1vbi1mcmFtZSAjY29tbW9uLWZyYW1lLW1lbnUgLm1lbnUtaXRlbSAubWVudS1idXR0b24ubWFya2VkIHtcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjc3MDE7IH1cXG4gICAgICAgICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1tZW51IC5tZW51LWl0ZW0gLm1lbnUtYnV0dG9uLm1hcmtlZCAudGl0bGUtanAge1xcbiAgICAgICAgICBjb2xvcjogI2ZmZjsgfVxcbiAgICAgICAgI2NvbW1vbi1mcmFtZSAjY29tbW9uLWZyYW1lLW1lbnUgLm1lbnUtaXRlbSAubWVudS1idXR0b24ubWFya2VkIC50aXRsZS1lbiB7XFxuICAgICAgICAgIGNvbG9yOiAjZmZmOyB9XFxuICAjY29tbW9uLWZyYW1lICNjb21tb24tZnJhbWUtY29udGVudCB7XFxuICAgIGJvdHRvbTogNDhweDtcXG4gICAgbGVmdDogMDtcXG4gICAgcGFkZGluZzogMjRweCAxNnB4IDE2cHggMTZweDtcXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgcmlnaHQ6IDA7XFxuICAgIHRvcDogMDsgfVxcbiAgICAjY29tbW9uLWZyYW1lICNjb21tb24tZnJhbWUtY29udGVudCAjY29tbW9uLWZyYW1lLWNvbnRlbnQtaW5uZXIge1xcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcXG4gICAgICBtYXgtd2lkdGg6IDUwZW07XFxuICAgICAgd2lkdGg6IDEwMCU7IH1cXG4gICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1mb290ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xcbiAgICBib3R0b206IDA7XFxuICAgIGhlaWdodDogNDhweDtcXG4gICAgbGVmdDogMDtcXG4gICAgcGFkZGluZzogMCAxNnB4O1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHJpZ2h0OiAwOyB9XFxuICAgICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1mb290ZXIgLmxlZnQtY29udGVudCB7XFxuICAgICAgZmxvYXQ6IGxlZnQ7IH1cXG4gICAgICAjY29tbW9uLWZyYW1lICNjb21tb24tZnJhbWUtZm9vdGVyIC5sZWZ0LWNvbnRlbnQgYSB7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgICAgICAgY29sb3I6ICNmZmY7XFxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAgICAgICBmb250LXNpemU6IDIycHg7XFxuICAgICAgICBoZWlnaHQ6IDMycHg7XFxuICAgICAgICBsaW5lLWhlaWdodDogMzJweDtcXG4gICAgICAgIG1hcmdpbjogOHB4IDhweCA4cHggMDtcXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgICAgIHdpZHRoOiAzMnB4OyB9XFxuICAgICNjb21tb24tZnJhbWUgI2NvbW1vbi1mcmFtZS1mb290ZXIgLnJpZ2h0LWNvbnRlbnQge1xcbiAgICAgIGZsb2F0OiByaWdodDtcXG4gICAgICBmb250LXNpemU6IDEycHg7XFxuICAgICAgY29sb3I6ICNmZmY7XFxuICAgICAgbGluZS1oZWlnaHQ6IDQ4cHg7IH1cXG5cIiwgXCJcIiwge1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiL1VzZXJzL21vcml5YV9wcml2YXRlL3Byb2plY3RzL2dpdGh1Yl9pby9zcmMvYXBwL2NvbnRhaW5lcnMvY29tbW9uX2ZyYW1lL2FwcC9jb250YWluZXJzL2NvbW1vbl9mcmFtZS9pbmRleC5zY3NzXCIsXCIvVXNlcnMvbW9yaXlhX3ByaXZhdGUvcHJvamVjdHMvZ2l0aHViX2lvL3NyYy9hcHAvY29udGFpbmVycy9jb21tb25fZnJhbWUvYXBwL2NvbW1vbi9jb2xvcnMuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFFQTtFQUNFLFVBQVM7RUFDVCxRQUFPO0VBQ1AsZ0JBQWU7RUFDZixTQUFRO0VBQ1IsT0FBTSxFQXdKUDtFQTdKRDtJQVFJLHVCQ0hRO0lESVIsbUJBQWtCO0lBQ2xCLGdDQ0xRO0lETVIsYUFBWTtJQUNaLHNCQUFxQjtJQUNyQixtQkFBa0I7SUFDbEIsU0FBUTtJQUNSLE9BQU0sRUFLUDtJQXBCSDtNQWtCTSxpQkFBZ0IsRUFDakI7RUFuQkw7SUF1QkksdUJDbEJRO0lEbUJSLDRCQ3ZCTztJRHdCUCxhQUFZO0lBQ1osaUJBQWdCO0lBQ2hCLGNBQWE7SUFDYixtQkFBa0I7SUFDbEIsNEJBQTJCO0lBQzNCLG1CQUFrQjtJQUNsQixTQUFRO0lBQ1IsT0FBTTtJQUNOLFlBQVcsRUF1RVo7SUF4R0g7TUFxQ1EsZUFBYztNQUNkLGtCQUFpQjtNQUNqQixzQkFBcUIsRUErRHRCO01BdEdQO1FBMENVLDZCQUE0QixFQUM3QjtNQTNDVDtRQThDVSxZQzdDQyxFRDhDRjtNQS9DVDtRQWtEVSxrQkFBaUIsRUFXbEI7UUE3RFQ7VUFzRFksZ0JBQWUsRUFDaEI7UUF2RFg7VUEyRFksZ0JBQWUsRUFDaEI7TUE1RFg7UUFnRVUsbUJBQWtCLEVBV25CO1FBM0VUO1VBb0VZLGdCQUFlLEVBQ2hCO1FBckVYO1VBeUVZLGdCQUFlLEVBQ2hCO01BMUVYO1FBOEVVLG1CQUFrQixFQVduQjtRQXpGVDtVQWtGWSxnQkFBZSxFQUNoQjtRQW5GWDtVQXVGWSxnQkFBZSxFQUNoQjtNQXhGWDtRQTRGVSwwQkN6Rk0sRURrR1A7UUFyR1Q7VUErRlksWUMxRkEsRUQyRkQ7UUFoR1g7VUFtR1ksWUM5RkEsRUQrRkQ7RUFwR1g7SUEyR0ksYUFBWTtJQUNaLFFBQU87SUFDUCw2QkFBNEI7SUFDNUIsbUJBQWtCO0lBQ2xCLG1CQUFrQjtJQUNsQixtQkFBa0I7SUFDbEIsU0FBUTtJQUNSLE9BQU0sRUFRUDtJQTFISDtNQXFITSxlQUFjO01BQ2QsZ0JBQWU7TUFDZixnQkFBZTtNQUNmLFlBQVcsRUFDWjtFQXpITDtJQTZISSx1QkM5SFk7SUQrSFosVUFBUztJQUNULGFBQVk7SUFDWixRQUFPO0lBQ1AsZ0JBQWU7SUFDZixtQkFBa0I7SUFDbEIsU0FBUSxFQXlCVDtJQTVKSDtNQXNJTSxZQUFXLEVBY1o7TUFwSkw7UUF5SVEsdUJDcElJO1FEcUlKLG1CQUFrQjtRQUNsQixZQ3RJSTtRRHVJSixzQkFBcUI7UUFDckIsZ0JBQWU7UUFDZixhQUFZO1FBQ1osa0JBQWlCO1FBQ2pCLHNCQUFxQjtRQUNyQixtQkFBa0I7UUFDbEIsWUFBVyxFQUNaO0lBbkpQO01BdUpNLGFBQVk7TUFDWixnQkFBZTtNQUNmLFlDcEpNO01EcUpOLGtCQUFpQixFQUNsQlwiLFwiZmlsZVwiOlwiaW5kZXguc2Nzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0ICcuLi8uLi9jb21tb24vY29sb3JzJztcXG5cXG4jY29tbW9uLWZyYW1lIHtcXG4gIGJvdHRvbTogMDtcXG4gIGxlZnQ6IDA7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICByaWdodDogMDtcXG4gIHRvcDogMDtcXG5cXG4gIC5jb21tb24tZnJhbWUtaGVhZGVyLW1lbnUtYnV0dG9uIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICAgIGJveC1zaGFkb3c6IC04cHggOHB4IDhweCAwICR3aGl0ZTtcXG4gICAgaGVpZ2h0OiAyOHB4O1xcbiAgICBwYWRkaW5nOiA4cHggMTJweCAwIDA7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgcmlnaHQ6IDA7XFxuICAgIHRvcDogMDtcXG5cXG4gICAgc3BhbiB7XFxuICAgICAgbWFyZ2luLWxlZnQ6IDRweDtcXG4gICAgfVxcbiAgfVxcblxcbiAgI2NvbW1vbi1mcmFtZS1tZW51IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRncmF5O1xcbiAgICBib3R0b206IDMycHg7XFxuICAgIG1heC13aWR0aDogMzIwcHg7XFxuICAgIG9wYWNpdHk6IDAuOTU7XFxuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcXG4gICAgcGFkZGluZzogNDJweCAxNnB4IDhweCAxNnB4O1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICB0b3A6IDA7XFxuICAgIHdpZHRoOiAxMDAlO1xcblxcbiAgICAubWVudS1pdGVtIHtcXG4gICAgICAubWVudS1idXR0b24ge1xcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XFxuICAgICAgICBwYWRkaW5nOiA2cHggMTZweDtcXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG5cXG4gICAgICAgICV0aXRsZS1saW5lLWhlaWdodCB7XFxuICAgICAgICAgIGxpbmUtaGVpZ2h0OiBjYWxjKDFlbSArIDJweCk7XFxuICAgICAgICB9XFxuXFxuICAgICAgICAudGl0bGUtZW4ge1xcbiAgICAgICAgICBjb2xvcjogJGdyYXk7XFxuICAgICAgICB9XFxuXFxuICAgICAgICAmLmxldmVsMSB7XFxuICAgICAgICAgIHBhZGRpbmctbGVmdDogOHB4O1xcblxcbiAgICAgICAgICAudGl0bGUtanAge1xcbiAgICAgICAgICAgIEBleHRlbmQgJXRpdGxlLWxpbmUtaGVpZ2h0O1xcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcXG4gICAgICAgICAgfVxcblxcbiAgICAgICAgICAudGl0bGUtZW4ge1xcbiAgICAgICAgICAgIEBleHRlbmQgJXRpdGxlLWxpbmUtaGVpZ2h0O1xcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcblxcbiAgICAgICAgJi5sZXZlbDIge1xcbiAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDI0cHg7XFxuXFxuICAgICAgICAgIC50aXRsZS1qcCB7XFxuICAgICAgICAgICAgQGV4dGVuZCAldGl0bGUtbGluZS1oZWlnaHQ7XFxuICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xcbiAgICAgICAgICB9XFxuXFxuICAgICAgICAgIC50aXRsZS1lbiB7XFxuICAgICAgICAgICAgQGV4dGVuZCAldGl0bGUtbGluZS1oZWlnaHQ7XFxuICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuXFxuICAgICAgICAmLmxldmVsMyB7XFxuICAgICAgICAgIHBhZGRpbmctbGVmdDogNDJweDtcXG5cXG4gICAgICAgICAgLnRpdGxlLWpwIHtcXG4gICAgICAgICAgICBAZXh0ZW5kICV0aXRsZS1saW5lLWhlaWdodDtcXG4gICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XFxuICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgLnRpdGxlLWVuIHtcXG4gICAgICAgICAgICBAZXh0ZW5kICV0aXRsZS1saW5lLWhlaWdodDtcXG4gICAgICAgICAgICBmb250LXNpemU6IDEwcHg7XFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG5cXG4gICAgICAgICYubWFya2VkIHtcXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG9yYW5nZTtcXG5cXG4gICAgICAgICAgLnRpdGxlLWpwIHtcXG4gICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xcbiAgICAgICAgICB9XFxuXFxuICAgICAgICAgIC50aXRsZS1lbiB7XFxuICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgfVxcbiAgfVxcblxcbiAgI2NvbW1vbi1mcmFtZS1jb250ZW50IHtcXG4gICAgYm90dG9tOiA0OHB4O1xcbiAgICBsZWZ0OiAwO1xcbiAgICBwYWRkaW5nOiAyNHB4IDE2cHggMTZweCAxNnB4O1xcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XFxuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICByaWdodDogMDtcXG4gICAgdG9wOiAwO1xcblxcbiAgICAjY29tbW9uLWZyYW1lLWNvbnRlbnQtaW5uZXIge1xcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcXG4gICAgICBtYXgtd2lkdGg6IDUwZW07XFxuICAgICAgd2lkdGg6IDEwMCU7XFxuICAgIH1cXG4gIH1cXG5cXG4gICNjb21tb24tZnJhbWUtZm9vdGVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGdyYXktZGFyaztcXG4gICAgYm90dG9tOiAwO1xcbiAgICBoZWlnaHQ6IDQ4cHg7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHBhZGRpbmc6IDAgMTZweDtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICByaWdodDogMDtcXG5cXG4gICAgLmxlZnQtY29udGVudCB7XFxuICAgICAgZmxvYXQ6IGxlZnQ7XFxuXFxuICAgICAgYSB7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XFxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICAgICAgICBjb2xvcjogJHdoaXRlO1xcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgICAgICAgZm9udC1zaXplOiAyMnB4O1xcbiAgICAgICAgaGVpZ2h0OiAzMnB4O1xcbiAgICAgICAgbGluZS1oZWlnaHQ6IDMycHg7XFxuICAgICAgICBtYXJnaW46IDhweCA4cHggOHB4IDA7XFxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgICAgICB3aWR0aDogMzJweDtcXG4gICAgICB9XFxuICAgIH1cXG5cXG4gICAgLnJpZ2h0LWNvbnRlbnQge1xcbiAgICAgIGZsb2F0OiByaWdodDtcXG4gICAgICBmb250LXNpemU6IDEycHg7XFxuICAgICAgY29sb3I6ICR3aGl0ZTtcXG4gICAgICBsaW5lLWhlaWdodDogNDhweDtcXG4gICAgfVxcbiAgfVxcbn1cXG5cXG5cIixcIiRibGFjazogIzAwMDtcXG4kZ3JheS1kYXJrOiAjMzMzO1xcbiRncmF5LWxpZ2h0OiAjY2NjO1xcbiRncmF5OiAjODg4O1xcbiRncmVlbjogIzAwOTA1MDtcXG4kb3JhbmdlOiAjZmY3NzAxO1xcbiRzaWx2ZXI6ICNlZWU7XFxuJHdoaXRlOiAjZmZmO1xcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJcIixcImZpbGVcIjpcInN0eWxlLnNjc3NcIixcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJcIixcImZpbGVcIjpcInN0eWxlLnNjc3NcIixcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiI2xhYm9yYXRvcnktY29udGFpbmVyIGgyIHtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxcblwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCIvVXNlcnMvbW9yaXlhX3ByaXZhdGUvcHJvamVjdHMvZ2l0aHViX2lvL3NyYy9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L2FwcC9jb250YWluZXJzL2xhYm9yYXRvcnkvc3R5bGUuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUVJLG1CQUFrQixFQUNuQlwiLFwiZmlsZVwiOlwic3R5bGUuc2Nzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIjbGFib3JhdG9yeS1jb250YWluZXIge1xcbiAgaDIge1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiI3FyLWNvZGUtY29udGFpbmVyICNxci1jb2RlLWltYWdlLXdyYXBwZXIge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XFxuXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIi9Vc2Vycy9tb3JpeWFfcHJpdmF0ZS9wcm9qZWN0cy9naXRodWJfaW8vc3JjL2FwcC9jb250YWluZXJzL2xhYm9yYXRvcnkvcXJfY29kZS9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3FyX2NvZGUvc3R5bGUuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFFQTtFQUVJLG1CQUFrQixFQUNuQlwiLFwiZmlsZVwiOlwic3R5bGUuc2Nzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0ICcuLi8uLi8uLi9jb21tb24vY29sb3JzJztcXG5cXG4jcXItY29kZS1jb250YWluZXIge1xcbiAgI3FyLWNvZGUtaW1hZ2Utd3JhcHBlciB7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG5cbi8vIGV4cG9ydHNcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS0yIS4vdGV4dF9hcmVhLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi90ZXh0X2FyZWEuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi90ZXh0X2FyZWEuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikodHJ1ZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIudGV4dC1hcmVhLXByZXNlbnRlciAudGV4dC1hcmVhLWxhYmVsIHtcXG4gIGhlaWdodDogMjRweDsgfVxcblxcbi50ZXh0LWFyZWEtcHJlc2VudGVyIHRleHRhcmVhIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjODg4O1xcbiAgbWluLWhlaWdodDogY2FsYygxMDAlIC0gMjRweCk7XFxuICBwYWRkaW5nOiA0cHggOHB4O1xcbiAgcmVzaXplOiB2ZXJ0aWNhbDtcXG4gIHdpZHRoOiAxMDAlOyB9XFxuXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIi9Vc2Vycy9tb3JpeWFfcHJpdmF0ZS9wcm9qZWN0cy9naXRodWJfaW8vc3JjL2FwcC9wcmVzZW50ZXJzL2FwcC9wcmVzZW50ZXJzL3RleHRfYXJlYS5zY3NzXCIsXCIvVXNlcnMvbW9yaXlhX3ByaXZhdGUvcHJvamVjdHMvZ2l0aHViX2lvL3NyYy9hcHAvcHJlc2VudGVycy9hcHAvY29tbW9uL2NvbG9ycy5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUVBO0VBRUksYUFBWSxFQUNiOztBQUhIO0VBTUksdUJDRFE7RURFUix1QkNOTztFRE9QLDhCQUE2QjtFQUM3QixpQkFBZ0I7RUFDaEIsaUJBQWdCO0VBQ2hCLFlBQVcsRUFDWlwiLFwiZmlsZVwiOlwidGV4dF9hcmVhLnNjc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCAnLi4vY29tbW9uL2NvbG9ycyc7XFxuXFxuLnRleHQtYXJlYS1wcmVzZW50ZXIge1xcbiAgLnRleHQtYXJlYS1sYWJlbCB7XFxuICAgIGhlaWdodDogMjRweDtcXG4gIH1cXG5cXG4gIHRleHRhcmVhIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheTtcXG4gICAgbWluLWhlaWdodDogY2FsYygxMDAlIC0gMjRweCk7XFxuICAgIHBhZGRpbmc6IDRweCA4cHg7XFxuICAgIHJlc2l6ZTogdmVydGljYWw7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgfVxcbn1cXG5cIixcIiRibGFjazogIzAwMDtcXG4kZ3JheS1kYXJrOiAjMzMzO1xcbiRncmF5LWxpZ2h0OiAjY2NjO1xcbiRncmF5OiAjODg4O1xcbiRncmVlbjogIzAwOTA1MDtcXG4kb3JhbmdlOiAjZmY3NzAxO1xcbiRzaWx2ZXI6ICNlZWU7XFxuJHdoaXRlOiAjZmZmO1xcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJcIixcImZpbGVcIjpcInN0eWxlLnNjc3NcIixcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3N0eWxlLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJcIixcImZpbGVcIjpcInN0eWxlLnNjc3NcIixcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL2J1dHRvbi5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS0yIS4vYnV0dG9uLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS0yIS4vYnV0dG9uLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmJ1dHRvbi1wcmVzZW50ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNzcwMTtcXG4gIGJvcmRlci1yYWRpdXM6IDA7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjZmY3NzAxO1xcbiAgY29sb3I6ICNmZmY7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICBoZWlnaHQ6IDI4cHg7XFxuICBsaW5lLWhlaWdodDogMjhweDtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDAgMTZweDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxcbiAgLmJ1dHRvbi1wcmVzZW50ZXIuZGlzYWJsZSB7XFxuICAgIG9wYWNpdHk6IDAuNTsgfVxcblwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCIvVXNlcnMvbW9yaXlhX3ByaXZhdGUvcHJvamVjdHMvZ2l0aHViX2lvL3NyYy9hcHAvcHJlc2VudGVycy9hcHAvcHJlc2VudGVycy9idXR0b24uc2Nzc1wiLFwiL1VzZXJzL21vcml5YV9wcml2YXRlL3Byb2plY3RzL2dpdGh1Yl9pby9zcmMvYXBwL3ByZXNlbnRlcnMvYXBwL2NvbW1vbi9jb2xvcnMuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFFQTtFQUNFLDBCQ0VjO0VERGQsaUJBQWdCO0VBQ2hCLDBCQ0FjO0VEQ2QsWUNDVTtFREFWLGdCQUFlO0VBQ2Ysc0JBQXFCO0VBQ3JCLGdCQUFlO0VBQ2YsYUFBWTtFQUNaLGtCQUFpQjtFQUNqQixVQUFTO0VBQ1QsZ0JBQWU7RUFDZixtQkFBa0I7RUFDbEIsbUJBQWtCLEVBS25CO0VBbEJEO0lBZ0JJLGFBQVksRUFDYlwiLFwiZmlsZVwiOlwiYnV0dG9uLnNjc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCAnLi4vY29tbW9uL2NvbG9ycyc7XFxuXFxuLmJ1dHRvbi1wcmVzZW50ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogJG9yYW5nZTtcXG4gIGJvcmRlci1yYWRpdXM6IDA7XFxuICBib3JkZXI6IDFweCBzb2xpZCAkb3JhbmdlO1xcbiAgY29sb3I6ICR3aGl0ZTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGhlaWdodDogMjhweDtcXG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMCAxNnB4O1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcblxcbiAgJi5kaXNhYmxlIHtcXG4gICAgb3BhY2l0eTogMC41O1xcbiAgfVxcbn1cIixcIiRibGFjazogIzAwMDtcXG4kZ3JheS1kYXJrOiAjMzMzO1xcbiRncmF5LWxpZ2h0OiAjY2NjO1xcbiRncmF5OiAjODg4O1xcbiRncmVlbjogIzAwOTA1MDtcXG4kb3JhbmdlOiAjZmY3NzAxO1xcbiRzaWx2ZXI6ICNlZWU7XFxuJHdoaXRlOiAjZmZmO1xcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3RleHRfaW5wdXQuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL3RleHRfaW5wdXQuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi90ZXh0X2lucHV0LnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnRleHQtaW5wdXQge1xcbiAgd2lkdGg6IDEwMCU7IH1cXG4gIC50ZXh0LWlucHV0IC50ZXh0LWlucHV0LWxhYmVsLCAudGV4dC1pbnB1dCBpbnB1dCB7XFxuICAgIHdpZHRoOiAxMDAlOyB9XFxuICAudGV4dC1pbnB1dCAudGV4dC1pbnB1dC1sYWJlbCB7XFxuICAgIHBhZGRpbmc6IDAgNHB4IDJweCA0cHg7IH1cXG4gIC50ZXh0LWlucHV0IGlucHV0IHtcXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xcbiAgICBmb250LXNpemU6IDE0cHg7XFxuICAgIHBhZGRpbmc6IDRweCA4cHg7IH1cXG5cIiwgXCJcIiwge1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiL1VzZXJzL21vcml5YV9wcml2YXRlL3Byb2plY3RzL2dpdGh1Yl9pby9zcmMvYXBwL3ByZXNlbnRlcnMvYXBwL3ByZXNlbnRlcnMvdGV4dF9pbnB1dC5zY3NzXCIsXCIvVXNlcnMvbW9yaXlhX3ByaXZhdGUvcHJvamVjdHMvZ2l0aHViX2lvL3NyYy9hcHAvcHJlc2VudGVycy9hcHAvY29tbW9uL2NvbG9ycy5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUVBO0VBQ0UsWUFBVyxFQWdCWjtFQWpCRDtJQUlJLFlBQVcsRUFDWjtFQUxIO0lBUUksdUJBQXNCLEVBQ3ZCO0VBVEg7SUFZSSxtQkFBa0I7SUFDbEIsdUJDYmE7SURjYixnQkFBZTtJQUNmLGlCQUFnQixFQUNqQlwiLFwiZmlsZVwiOlwidGV4dF9pbnB1dC5zY3NzXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgJy4uL2NvbW1vbi9jb2xvcnMnO1xcblxcbi50ZXh0LWlucHV0IHtcXG4gIHdpZHRoOiAxMDAlO1xcblxcbiAgLnRleHQtaW5wdXQtbGFiZWwsIGlucHV0IHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICB9XFxuXFxuICAudGV4dC1pbnB1dC1sYWJlbCB7XFxuICAgIHBhZGRpbmc6IDAgNHB4IDJweCA0cHg7XFxuICB9XFxuXFxuICBpbnB1dCB7XFxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgJGdyYXktbGlnaHQ7XFxuICAgIGZvbnQtc2l6ZTogMTRweDtcXG4gICAgcGFkZGluZzogNHB4IDhweDtcXG4gIH1cXG59XCIsXCIkYmxhY2s6ICMwMDA7XFxuJGdyYXktZGFyazogIzMzMztcXG4kZ3JheS1saWdodDogI2NjYztcXG4kZ3JheTogIzg4ODtcXG4kZ3JlZW46ICMwMDkwNTA7XFxuJG9yYW5nZTogI2ZmNzcwMTtcXG4kc2lsdmVyOiAjZWVlO1xcbiR3aGl0ZTogI2ZmZjtcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcblxuLy8gZXhwb3J0c1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9zdHlsZS5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS0yIS4vc3R5bGUuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9zdHlsZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSh0cnVlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIiNzZXJ2aWNlLXdvcmtlci1wdXNoLWNvbnRhaW5lciAucmVxdWVzdC1wZXJtaXNzaW9uLWJ1dHRvbiB7XFxuICBtYXJnaW4tdG9wOiA4cHg7IH1cXG5cXG4jc2VydmljZS13b3JrZXItcHVzaC1jb250YWluZXIgLnN1YnNjcmlwdGlvbi1pbmZvIHtcXG4gIGZvbnQtc2l6ZTogMTBweDtcXG4gIGhlaWdodDogMjQwcHg7XFxuICBtYXJnaW4tdG9wOiA4cHg7IH1cXG5cIiwgXCJcIiwge1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiL1VzZXJzL21vcml5YV9wcml2YXRlL3Byb2plY3RzL2dpdGh1Yl9pby9zcmMvYXBwL2NvbnRhaW5lcnMvbGFib3JhdG9yeS9zZXJ2aWNlX3dvcmtlci9wdXNoX25vdGlmaWNhdGlvbi9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL3B1c2hfbm90aWZpY2F0aW9uL3N0eWxlLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFFSSxnQkFBZSxFQUNoQjs7QUFISDtFQU1JLGdCQUFlO0VBQ2YsY0FBYTtFQUNiLGdCQUFlLEVBQ2hCXCIsXCJmaWxlXCI6XCJzdHlsZS5zY3NzXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIiNzZXJ2aWNlLXdvcmtlci1wdXNoLWNvbnRhaW5lciB7XFxuICAucmVxdWVzdC1wZXJtaXNzaW9uLWJ1dHRvbiB7XFxuICAgIG1hcmdpbi10b3A6IDhweDtcXG4gIH1cXG5cXG4gIC5zdWJzY3JpcHRpb24taW5mbyB7XFxuICAgIGZvbnQtc2l6ZTogMTBweDtcXG4gICAgaGVpZ2h0OiAyNDBweDtcXG4gICAgbWFyZ2luLXRvcDogOHB4O1xcbiAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcblxuLy8gZXhwb3J0c1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9zdHlsZS5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS0yIS4vc3R5bGUuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9zdHlsZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSh0cnVlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIiNzZXJ2aWNlLXdvcmtlci1iYWNrZ3JvdW5kLXN5bmMtY29udGFpbmVyIGRpdiB7XFxuICBtYXJnaW46IDRweCAwOyB9XFxuXFxuI3NlcnZpY2Utd29ya2VyLWJhY2tncm91bmQtc3luYy1jb250YWluZXIgdGFibGUge1xcbiAgd2lkdGg6IDEwMCU7IH1cXG4gICNzZXJ2aWNlLXdvcmtlci1iYWNrZ3JvdW5kLXN5bmMtY29udGFpbmVyIHRhYmxlIC50YWJsZS1pZC1jb2x1bW4ge1xcbiAgICB3aWR0aDogNDBweDsgfVxcblwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCIvVXNlcnMvbW9yaXlhX3ByaXZhdGUvcHJvamVjdHMvZ2l0aHViX2lvL3NyYy9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL2JhY2tncm91bmRfc3luYy9hcHAvY29udGFpbmVycy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL2JhY2tncm91bmRfc3luYy9zdHlsZS5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBRUksY0FBYSxFQUNkOztBQUhIO0VBTUksWUFBVyxFQUtaO0VBWEg7SUFTTSxZQUFXLEVBQ1pcIixcImZpbGVcIjpcInN0eWxlLnNjc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiI3NlcnZpY2Utd29ya2VyLWJhY2tncm91bmQtc3luYy1jb250YWluZXIge1xcbiAgZGl2IHtcXG4gICAgbWFyZ2luOiA0cHggMDtcXG4gIH1cXG5cXG4gIHRhYmxlIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuXFxuICAgIC50YWJsZS1pZC1jb2x1bW4ge1xcbiAgICAgIHdpZHRoOiA0MHB4O1xcbiAgICB9XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL2luZGV4LnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTIhLi9pbmRleC5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtMiEuL2luZGV4LnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiKiwgKjpiZWZvcmUsICo6YWZ0ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBib3JkZXI6IDAgc29saWQgIzg4ODtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICBjb2xvcjogIzAwMDtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XFxuICBsaW5lLWhlaWdodDogMS41O1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDsgfVxcblxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHVsLCBvbCB7XFxuICBtYXJnaW4tdG9wOiAxNnB4OyB9XFxuXFxucCB7XFxuICBtYXJnaW4tdG9wOiA4cHg7IH1cXG5cXG5oMSB7XFxuICBmb250LXdlaWdodDogNjAwO1xcbiAgZm9udC1zaXplOiAyNHB4O1xcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XFxuXFxuaDIge1xcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gIGZvbnQtc2l6ZTogMjBweDsgfVxcblxcbmgzIHtcXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICBmb250LXNpemU6IDE4cHg7IH1cXG5cXG5oNCB7XFxuICBmb250LXdlaWdodDogNzAwO1xcbiAgZm9udC1zaXplOiAxNHB4OyB9XFxuXFxuaDUge1xcbiAgZm9udC13ZWlnaHQ6IDgwMDtcXG4gIGZvbnQtc2l6ZTogMTJweDsgfVxcblxcbmg2IHtcXG4gIGZvbnQtd2VpZ2h0OiA4MDA7XFxuICBmb250LXNpemU6IDEwcHg7IH1cXG5cXG5wIHtcXG4gIHBhZGRpbmctbGVmdDogMWVtOyB9XFxuXFxuYSB7XFxuICBjb2xvcjogIzAwOTA1MDtcXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XFxuXFxuc3Ryb25nIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICBmb250LXdlaWdodDogODAwO1xcbiAgbWFyZ2luOiAxcHggNHB4O1xcbiAgcGFkZGluZzogMXB4IDRweDsgfVxcblxcbmJ1dHRvbjpmb2N1cyB7XFxuICBvdXRsaW5lOiBub25lOyB9XFxuXFxudGFibGUge1xcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcXG4gIGJvcmRlci1zcGFjaW5nOiAwO1xcbiAgdGFibGUtbGF5b3V0OiBmaXhlZDsgfVxcbiAgdGFibGUgdGgsIHRhYmxlIHRkIHtcXG4gICAgcGFkZGluZzogNHB4IDhweDtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzg4ODsgfVxcblxcbnVsLCBvbCB7XFxuICBwYWRkaW5nLWxlZnQ6IDI0cHg7XFxuICB3aWR0aDogMTAwJTsgfVxcbiAgdWwgbGksIG9sIGxpIHtcXG4gICAgbWFyZ2luLXRvcDogNHB4OyB9XFxuXFxuLmZyYW1lIHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XFxuICBtYXJnaW46IDE2cHg7XFxuICBwYWRkaW5nOiAxNnB4O1xcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDMycHgpOyB9XFxuXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIi9Vc2Vycy9tb3JpeWFfcHJpdmF0ZS9wcm9qZWN0cy9naXRodWJfaW8vc3JjL2FwcC9hcHAvaW5kZXguc2Nzc1wiLFwiL1VzZXJzL21vcml5YV9wcml2YXRlL3Byb2plY3RzL2dpdGh1Yl9pby9zcmMvYXBwL2FwcC9jb21tb24vY29sb3JzLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUE7RUFDRSw4QkFBNkI7RUFDN0IscUJDRFM7RURFVCx1QkFBc0I7RUFDdEIsWUNOVTtFRE9WLGdCQUFlO0VBQ2Ysb0JBQW1CO0VBQ25CLGlCQUFnQjtFQUNoQixVQUFTO0VBQ1QsV0FBVTtFQUNWLHNCQUFxQjtFQUNyQixzQkFBcUIsRUFDdEI7O0FBRUQ7RUFDRSxpQkFBZ0IsRUFDakI7O0FBRUQ7RUFDRSxnQkFBZSxFQUNoQjs7QUFFRDtFQUNFLGlCQUFnQjtFQUNoQixnQkFBZTtFQUNmLG1CQUFrQixFQUNuQjs7QUFFRDtFQUNFLGlCQUFnQjtFQUNoQixnQkFBZSxFQUNoQjs7QUFFRDtFQUNFLGlCQUFnQjtFQUNoQixnQkFBZSxFQUNoQjs7QUFFRDtFQUNFLGlCQUFnQjtFQUNoQixnQkFBZSxFQUNoQjs7QUFFRDtFQUNFLGlCQUFnQjtFQUNoQixnQkFBZSxFQUNoQjs7QUFFRDtFQUNFLGlCQUFnQjtFQUNoQixnQkFBZSxFQUNoQjs7QUFFRDtFQUNFLGtCQUFpQixFQUNsQjs7QUFFRDtFQUNFLGVDeERhO0VEeURiLDJCQUEwQixFQUMzQjs7QUFFRDtFQUNFLHVCQzNEVztFRDREWCxzQkFBcUI7RUFDckIsaUJBQWdCO0VBQ2hCLGdCQUFlO0VBQ2YsaUJBQWdCLEVBQ2pCOztBQUVEO0VBQ0UsY0FBYSxFQUNkOztBQUVEO0VBQ0UsMEJBQXlCO0VBQ3pCLGtCQUFpQjtFQUNqQixvQkFBbUIsRUFNcEI7RUFURDtJQU1JLGlCQUFnQjtJQUNoQix1QkNoRk8sRURpRlI7O0FBR0g7RUFDRSxtQkFBa0I7RUFDbEIsWUFBVyxFQUtaO0VBUEQ7SUFLSSxnQkFBZSxFQUNoQjs7QUFHSDtFQUNFLHVCQy9GZTtFRGdHZixhQUFZO0VBQ1osY0FBYTtFQUNiLHlCQUF3QixFQUN6QlwiLFwiZmlsZVwiOlwiaW5kZXguc2Nzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0ICcuL2NvbW1vbi9jb2xvcnMnO1xcblxcbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgYm9yZGVyOiAwIHNvbGlkICRncmF5O1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIGNvbG9yOiAkYmxhY2s7XFxuICBmb250LXNpemU6IDE2cHg7XFxuICBmb250LXdlaWdodDogbm9ybWFsO1xcbiAgbGluZS1oZWlnaHQ6IDEuNTtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XFxufVxcblxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHVsLCBvbCB7XFxuICBtYXJnaW4tdG9wOiAxNnB4O1xcbn1cXG5cXG5wIHtcXG4gIG1hcmdpbi10b3A6IDhweDtcXG59XFxuXFxuaDEge1xcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gIGZvbnQtc2l6ZTogMjRweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuaDIge1xcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gIGZvbnQtc2l6ZTogMjBweDtcXG59XFxuXFxuaDMge1xcbiAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gIGZvbnQtc2l6ZTogMThweDtcXG59XFxuXFxuaDQge1xcbiAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG59XFxuXFxuaDUge1xcbiAgZm9udC13ZWlnaHQ6IDgwMDtcXG4gIGZvbnQtc2l6ZTogMTJweDtcXG59XFxuXFxuaDYge1xcbiAgZm9udC13ZWlnaHQ6IDgwMDtcXG4gIGZvbnQtc2l6ZTogMTBweDtcXG59XFxuXFxucCB7XFxuICBwYWRkaW5nLWxlZnQ6IDFlbTtcXG59XFxuXFxuYSB7XFxuICBjb2xvcjogJGdyZWVuO1xcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XFxufVxcblxcbnN0cm9uZyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2lsdmVyO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgZm9udC13ZWlnaHQ6IDgwMDtcXG4gIG1hcmdpbjogMXB4IDRweDtcXG4gIHBhZGRpbmc6IDFweCA0cHg7XFxufVxcblxcbmJ1dHRvbjpmb2N1cyB7XFxuICBvdXRsaW5lOiBub25lO1xcbn1cXG5cXG50YWJsZSB7XFxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XFxuICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xcblxcbiAgdGgsIHRkIHtcXG4gICAgcGFkZGluZzogNHB4IDhweDtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgJGdyYXk7XFxuICB9XFxufVxcblxcbnVsLCBvbCB7XFxuICBwYWRkaW5nLWxlZnQ6IDI0cHg7XFxuICB3aWR0aDogMTAwJTtcXG5cXG4gIGxpIHtcXG4gICAgbWFyZ2luLXRvcDogNHB4O1xcbiAgfVxcbn1cXG5cXG4uZnJhbWUge1xcbiAgYm9yZGVyOiAxcHggc29saWQgJGdyYXktbGlnaHQ7XFxuICBtYXJnaW46IDE2cHg7XFxuICBwYWRkaW5nOiAxNnB4O1xcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDMycHgpO1xcbn1cIixcIiRibGFjazogIzAwMDtcXG4kZ3JheS1kYXJrOiAjMzMzO1xcbiRncmF5LWxpZ2h0OiAjY2NjO1xcbiRncmF5OiAjODg4O1xcbiRncmVlbjogIzAwOTA1MDtcXG4kb3JhbmdlOiAjZmY3NzAxO1xcbiRzaWx2ZXI6ICNlZWU7XFxuJHdoaXRlOiAjZmZmO1xcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBGb250QXdlc29tZUljb24gfSBmcm9tICdAZm9ydGF3ZXNvbWUvcmVhY3QtZm9udGF3ZXNvbWUnO1xuaW1wb3J0IHsgbGlicmFyeSB9IGZyb20gJ0Bmb3J0YXdlc29tZS9mb250YXdlc29tZS1zdmctY29yZSc7XG5pbXBvcnQge1xuICBmYUJhcnMsXG4gIGZhVGltZXMsXG4gIGZhRW52ZWxvcGUsXG59IGZyb20gJ0Bmb3J0YXdlc29tZS9mcmVlLXNvbGlkLXN2Zy1pY29ucyc7XG5pbXBvcnQge1xuICBmYWIsXG59IGZyb20gJ0Bmb3J0YXdlc29tZS9mcmVlLWJyYW5kcy1zdmctaWNvbnMnO1xuXG5saWJyYXJ5LmFkZChmYVRpbWVzKTtcbmNvbnN0IENsb3NlSWNvbiA9ICgpID0+ICg8Rm9udEF3ZXNvbWVJY29uIGljb249XCJ0aW1lc1wiIC8+KTtcblxubGlicmFyeS5hZGQoZmFCYXJzKTtcbmNvbnN0IE1lbnVJY29uID0gKCkgPT4gKDxGb250QXdlc29tZUljb24gaWNvbj1cImJhcnNcIiAvPik7XG5cbmxpYnJhcnkuYWRkKGZhRW52ZWxvcGUpO1xuY29uc3QgRW52ZWxvcGVJY29uID0gKCkgPT4gKDxGb250QXdlc29tZUljb24gaWNvbj1cImVudmVsb3BlXCIgLz4pO1xuXG5saWJyYXJ5LmFkZChmYWIpO1xuY29uc3QgVHdpdHRlckljb24gPSAoKSA9PiAoPEZvbnRBd2Vzb21lSWNvbiBpY29uPXtbJ2ZhYicsICd0d2l0dGVyJ119IC8+KTtcblxubGlicmFyeS5hZGQoZmFiKTtcbmNvbnN0IEdpdEh1Ykljb24gPSAoKSA9PiAoPEZvbnRBd2Vzb21lSWNvbiBpY29uPXtbJ2ZhYicsICdnaXRodWInXX0gLz4pO1xuXG5leHBvcnQge1xuICBDbG9zZUljb24sXG4gIEVudmVsb3BlSWNvbixcbiAgR2l0SHViSWNvbixcbiAgTWVudUljb24sXG4gIFR3aXR0ZXJJY29uLFxufTtcbiIsImltcG9ydCAqIGFzIFBsYXRmb3JtIGZyb20gJ3BsYXRmb3JtJztcblxuY29uc3QgaXNNb2JpbGVEZXZpY2UgPSAoKTogYm9vbGVhbiA9PiB7XG4gIGNvbnN0IG9zRmFtaWx5ID0gUGxhdGZvcm0ub3MuZmFtaWx5O1xuICByZXR1cm4gKG9zRmFtaWx5ID09PSAnaU9TJyB8fCBvc0ZhbWlseSA9PT0gJ0FuZHJvaWQnKTtcbn07XG5cbmV4cG9ydCB7XG4gIGlzTW9iaWxlRGV2aWNlLFxufTtcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxuY2xhc3MgQWJzdHJhY3RDb250YWluZXI8UCwgUz4gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8UCwgUz4ge1xuICBzdGF0ZTogUztcblxuICBzZXRTdGF0ZTxLIGV4dGVuZHMga2V5b2YgUz4oXG4gICAgc3RhdGU6XG4gICAgICAoKHByZXZTdGF0ZTogUmVhZG9ubHk8Uz4sIHByb3BzOiBQKSA9PiAoUGljazxTLCBLPiB8IFMgfCBudWxsKSkgfFxuICAgICAgKFBpY2s8UywgSz4gfCBTIHwgbnVsbCksXG4gICAgY2FsbGJhY2s/OiAoKSA9PiB2b2lkLFxuICApOiB2b2lkIHtcbiAgICBjb25zb2xlLmxvZygnVXBkYXRlIHN0YXRlOicsIHN0YXRlKTtcbiAgICBzdXBlci5zZXRTdGF0ZShzdGF0ZSwgY2FsbGJhY2spO1xuICB9XG59XG5cbmV4cG9ydCB7IEFic3RyYWN0Q29udGFpbmVyIH07XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4vdGV4dF9hcmVhLnNjc3MnO1xuXG50eXBlIFByb3BzID0ge1xuICBjaGlsZHJlbjogc3RyaW5nLFxuICBjbGFzc05hbWU/OiBzdHJpbmcsXG4gIGxhYmVsPzogc3RyaW5nLFxuICBvbkNoYW5nZTogKGlucHV0VGV4dDogc3RyaW5nKSA9PiB2b2lkLFxufTtcblxuY2xhc3MgVGV4dEFyZWEgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8UHJvcHM+IHtcbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBjbGFzc05hbWU6ICcnLFxuICAgIGxhYmVsOiAnJyxcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgY2hpbGRyZW4sXG4gICAgICBjbGFzc05hbWUsXG4gICAgICBsYWJlbCxcbiAgICAgIG9uQ2hhbmdlLFxuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtgdGV4dC1hcmVhLXByZXNlbnRlciAke2NsYXNzTmFtZX1gfT5cbiAgICAgICAge2xhYmVsICYmICg8ZGl2IGNsYXNzTmFtZT1cInRleHQtYXJlYS1sYWJlbFwiPntsYWJlbH08L2Rpdj4pfVxuICAgICAgICA8dGV4dGFyZWFcbiAgICAgICAgICBvbkNoYW5nZT17KGV2ZW50OiBhbnkpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgb25DaGFuZ2UodmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH19XG4gICAgICAgICAgdmFsdWU9e2NoaWxkcmVuIHx8ICcnfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfTtcbn1cblxuZXhwb3J0IHtcbiAgVGV4dEFyZWEsXG59O1xuIiwiY2xhc3MgU3RvcmFnZSB7XG4gIHN0YXRpYyBnZXQgPSAoa2V5OiBzdHJpbmcpOiAoc3RyaW5nIHwgbnVsbCkgPT4gKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSkpO1xuICBzdGF0aWMgc2V0ID0gKGtleTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKTogdm9pZCA9PiAobG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCB2YWx1ZSkpO1xuICBzdGF0aWMgcmVtb3ZlID0gKGtleTogc3RyaW5nKTogdm9pZCA9PiAobG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oa2V5KSk7XG59O1xuXG5leHBvcnQgeyBTdG9yYWdlIH07IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICogYXMgUXJDb2RlIGZyb20gJ3FyY29kZSc7XG5pbXBvcnQgeyBBYnN0cmFjdENvbnRhaW5lciB9IGZyb20gJy4uLy4uL2Fic3RyYWN0X2NvbnRhaW5lcic7XG5pbXBvcnQgJy4vc3R5bGUuc2Nzcyc7XG5pbXBvcnQgeyBUZXh0QXJlYSB9IGZyb20gJy4uLy4uLy4uL3ByZXNlbnRlcnMvdGV4dF9hcmVhJztcbmltcG9ydCB7IFN0b3JhZ2UgfSBmcm9tICcuLi8uLi8uLi9jb21tb24vc3RvcmFnZSc7XG5cbmNvbnN0IFN0b3JhZ2VLZXk6IHN0cmluZyA9ICdxcl9jb2RlL3FyVGV4dCc7XG5cbmludGVyZmFjZSBQcm9wcyB7fVxuXG5pbnRlcmZhY2UgU3RhdGUge1xuICBxclRleHQ6IHN0cmluZyxcbiAgcXJJbWFnZTogc3RyaW5nLFxufVxuXG5jbGFzcyBRckNvZGVDb250YWluZXIgZXh0ZW5kcyBBYnN0cmFjdENvbnRhaW5lcjxQcm9wcywgU3RhdGU+IHtcbiAgc3RhdGU6IFN0YXRlID0ge1xuICAgIHFySW1hZ2U6ICcnLFxuICAgIHFyVGV4dDogJycsXG4gIH07XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKTogdm9pZCB7XG4gICAgY29uc3QgcXJUZXh0OiBzdHJpbmcgPSBTdG9yYWdlLmdldChTdG9yYWdlS2V5KSB8fCB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgICB0aGlzLm9uQ2hhbmdlVGV4dChxclRleHQpO1xuICB9XG5cbiAgb25DaGFuZ2VUZXh0ID0gKHFyVGV4dDogc3RyaW5nKTogdm9pZCA9PiB7XG4gICAgU3RvcmFnZS5zZXQoU3RvcmFnZUtleSwgcXJUZXh0KTtcbiAgICB0aGlzLnNldFN0YXRlKHsgcXJUZXh0IH0pO1xuICAgIGlmIChxclRleHQgIT09ICcnKSB7XG4gICAgICBRckNvZGVcbiAgICAgICAgLnRvRGF0YVVSTChxclRleHQpXG4gICAgICAgIC50aGVuKChxckltYWdlKSA9PiB7XG4gICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHFySW1hZ2UgfSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdRckNvZGUgZ2VuZXJhdGUgZXJyb3I6JywgZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgcXJJbWFnZSwgcXJUZXh0IH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgaWQ9XCJxci1jb2RlLWNvbnRhaW5lclwiPlxuICAgICAgICA8aDE+UVIgQ29kZTwvaDE+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZnJhbWVcIj5cbiAgICAgICAgICB7cXJJbWFnZSAhPT0gJycgJiYgKFxuICAgICAgICAgICAgPGRpdiBpZD1cInFyLWNvZGUtaW1hZ2Utd3JhcHBlclwiPlxuICAgICAgICAgICAgICA8aW1nXG4gICAgICAgICAgICAgICAgc3JjPXtxckltYWdlfVxuICAgICAgICAgICAgICAgIGFsdD1cIlFSIENvZGVcIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8VGV4dEFyZWFcbiAgICAgICAgICAgIGxhYmVsPVwiUVLjgrPjg7zjg4njgavlpInmj5vjgZnjgovmloflrZfliJdcIlxuICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMub25DaGFuZ2VUZXh0fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtxclRleHR9XG4gICAgICAgICAgPC9UZXh0QXJlYT5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGgyPuOBk+OBruODmuODvOOCuOOBq+OBpOOBhOOBpjwvaDI+XG4gICAgICAgIDxwPlFS44Kz44O844OJ44KS44Gf44Gg55Sf5oiQ44GZ44KL44Gg44GR44Gu44Oa44O844K444Gn44GZ44CC44K144O844OT44K544Ov44O844Kr44O844Go57WE44G/5ZCI44KP44Gb44KL44GT44Go44Gn44Kq44OV44Op44Kk44Oz44Ki44OX44Oq55qE44Gr5L2/44GI44KL44GL44Gq44CB44Go5oCd44Gj44Gm5L2c5oiQ44GX44Gm44G/44G+44GX44Gf44CCPC9wPlxuICAgICAgICA8cD7jgYTjgZrjgozjga/jgIHoh6rliIbjgafnlJ/miJDjgZnjgovjgajjgZPjgo3jgb7jgafjgoTjgaPjgabjgb/jgZ/jgYTjgII8L3A+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCB7IFFyQ29kZUNvbnRhaW5lciB9OyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEFic3RyYWN0Q29udGFpbmVyIH0gZnJvbSAnLi4vLi4vLi4vYWJzdHJhY3RfY29udGFpbmVyJztcbmltcG9ydCAnLi9zdHlsZS5zY3NzJztcblxuY29uc3Qgc3VwcG9ydFNlcnZpY2VXb3JrZXI6IGJvb2xlYW4gPSAoJ3NlcnZpY2VXb3JrZXInIGluIG5hdmlnYXRvcik7XG5cbmludGVyZmFjZSBQcm9wcyB7fVxuXG5pbnRlcmZhY2UgU3RhdGUge31cblxuY2xhc3MgU2VydmljZVdvcmtlckNhY2hlQ29udGFpbmVyIGV4dGVuZHMgQWJzdHJhY3RDb250YWluZXI8UHJvcHMsIFN0YXRlPiB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBpZD1cInNlcnZpY2Utd29ya2VyLWNhY2hlLWNvbnRhaW5lclwiPlxuICAgICAgICA8aDE+44Kt44Oj44OD44K344OlQVBJPC9oMT5cblxuICAgICAgICA8aDI+44Kt44Oj44OD44K344OlQVBJ44Go44Gv77yfPC9oMj5cbiAgICAgICAgPHA+44K144O844OT44K544Ov44O844Kr44O844Gn5o+Q5L6b44GV44KM44Gm44GE44KLIEFQSSDjga7kuIDjgaTjgafjgIFmZXRjaCDjgavku4vlhaXjgZfjgIHjgq3jg6Pjg4Pjgrfjg6XjgZXjgozjgZ/jg6rjgr3jg7zjgrnjgpLov5TljbTjgZnjgovjgZPjgajjgYzjgafjgY3jgb7jgZnjgII8L3A+XG4gICAgICAgIDxwPuOCreODo+ODg+OCt+ODpeOCkuS9v+eUqOOBmeOCi+OBi+OBqeOBhuOBi+OBr+OAgeOCs+ODs+ODiOODreODvOODq+WPr+iDveOBp+OBmeOAgjwvcD5cblxuICAgICAgICA8aDI+44GK5L2/44GE44Gu44OW44Op44Km44K244Gu5a++5b+c54q25rOBPC9oMj5cbiAgICAgICAgPHA+e3N1cHBvcnRTZXJ2aWNlV29ya2VyID8gJ+KXiyDlr77lv5zjgZfjgabjgYTjgb7jgZknIDogJ8OXIOmdnuWvvuW/nOOBp+OBmSd9PC9wPlxuXG4gICAgICAgIHtzdXBwb3J0U2VydmljZVdvcmtlciAmJiAoXG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxoMj7li5XkvZznorroqo3jga7mlrnms5U8L2gyPlxuICAgICAgICAgICAgPHA+5a6f44Gv44CB44GT44Gu44Oa44O844K444Gr5b+F6KaB44Gq44Oq44K944O844K544Gv5YWo44Gm44Kt44Oj44K344Ol44GV44KM44Gm44GE44G+44GZ44CC5Lul5LiL44Gu5omL6aCG44Gn44Kt44Oj44OD44K344Ol44GV44KM44Gm44GE44KL44GT44Go44KS56K66KqN44Gn44GN44G+44GZ44CCPC9wPlxuICAgICAgICAgICAgPG9sPlxuICAgICAgICAgICAgICA8bGk+44Kk44Oz44K/44O844ON44OD44OI44GL44KJ5YiH44KK6Zui44GX44G+44GZ44CC77yI5L6L77ya5qmf5YaF44Oi44O844OJ44Gr44GZ44KL44CBV2ktRmnjgpJPZmbjgavjgZnjgovjgIFMQU7jgrHjg7zjg5bjg6vjgpLmipzjgY/jgarjganvvIk8L2xpPlxuICAgICAgICAgICAgICA8bGk+44GT44Gu44Oa44O844K444KS44Oq44Ot44O844OJ44GX44Gm44CB5q2j5bi444Gr6KGo56S644GV44KM44KL44GT44Go44KS56K66KqN44GX44G+44GZ44CCPC9saT5cbiAgICAgICAgICAgIDwvb2w+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCB7IFNlcnZpY2VXb3JrZXJDYWNoZUNvbnRhaW5lciB9OyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAnLi9idXR0b24uc2Nzcyc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGFjdGl2ZT86IGJvb2xlYW4sXG4gIGNsYXNzTmFtZT86IHN0cmluZyxcbiAgY2hpbGRyZW46IHN0cmluZyxcbiAgb25DbGljazogKCkgPT4gdm9pZCxcbn07XG5cbmNsYXNzIEJ1dHRvbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxQcm9wcz4ge1xuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGFjdGl2ZTogdHJ1ZSxcbiAgICBjbGFzc05hbWU6ICcnLFxuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBhY3RpdmUsXG4gICAgICBjaGlsZHJlbixcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIG9uQ2xpY2ssXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGJ1dHRvblxuICAgICAgICBjbGFzc05hbWU9e2BidXR0b24tcHJlc2VudGVyICR7Y2xhc3NOYW1lfSAke2FjdGl2ZSA/ICcnIDogJ2Rpc2FibGUnfWB9XG4gICAgICAgIG9uQ2xpY2s9e2FjdGl2ZSA/IG9uQ2xpY2sgOiBudWxsfVxuICAgICAgPlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L2J1dHRvbj5cbiAgICApO1xuICB9O1xufVxuXG5leHBvcnQge1xuICBCdXR0b24sXG59O1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICcuL3RleHRfaW5wdXQuc2Nzcyc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGNsYXNzTmFtZT86IHN0cmluZyxcbiAgbGFiZWw/OiBzdHJpbmcsXG4gIG1heExlbmd0aDogbnVtYmVyLFxuICBvbkNoYW5nZVRleHQ6IChpbnB1dFZhbHVlOiBzdHJpbmcpID0+IHZvaWQsXG4gIHBhc3N3b3JkPzogYm9vbGVhbixcbiAgcGxhY2VIb2xkZXI/OiBzdHJpbmcsXG4gIHZhbHVlOiBzdHJpbmcsXG59O1xuXG5jb25zdCBUZXh0SW5wdXQgPSAocHJvcHM6IFByb3BzKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBjbGFzc05hbWUsXG4gICAgbGFiZWwsXG4gICAgbWF4TGVuZ3RoLFxuICAgIG9uQ2hhbmdlVGV4dCxcbiAgICBwYXNzd29yZCxcbiAgICBwbGFjZUhvbGRlcixcbiAgICB2YWx1ZSxcbiAgfSA9IHByb3BzO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2B0ZXh0LWlucHV0ICR7Y2xhc3NOYW1lfWB9PlxuICAgICAge2xhYmVsICYmICg8ZGl2IGNsYXNzTmFtZT1cInRleHQtaW5wdXQtbGFiZWxcIj57bGFiZWx9PC9kaXY+KX1cbiAgICAgIDxpbnB1dFxuICAgICAgICBwbGFjZWhvbGRlcj17cGxhY2VIb2xkZXJ9XG4gICAgICAgIHR5cGU9e3Bhc3N3b3JkID8gJ3Bhc3N3b3JkJyA6ICd0ZXh0J31cbiAgICAgICAgb25DaGFuZ2U9eyhldmVudCkgPT4gb25DaGFuZ2VUZXh0KGV2ZW50LnRhcmdldC52YWx1ZSl9XG4gICAgICAgIG1heExlbmd0aD17bWF4TGVuZ3RofVxuICAgICAgICB2YWx1ZT17dmFsdWUgfHwgJyd9XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IHsgVGV4dElucHV0IH07XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBBYnN0cmFjdENvbnRhaW5lciB9IGZyb20gJy4uLy4uLy4uL2Fic3RyYWN0X2NvbnRhaW5lcic7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICcuLi8uLi8uLi8uLi9wcmVzZW50ZXJzL2J1dHRvbic7XG5pbXBvcnQgeyBUZXh0SW5wdXQgfSBmcm9tICcuLi8uLi8uLi8uLi9wcmVzZW50ZXJzL3RleHRfaW5wdXQnO1xuaW1wb3J0IHsgVGV4dEFyZWEgfSBmcm9tICcuLi8uLi8uLi8uLi9wcmVzZW50ZXJzL3RleHRfYXJlYSc7XG5pbXBvcnQgJy4vc3R5bGUuc2Nzcyc7XG5cbmNvbnN0IHN1cHBvcnRQdXNoTm90aWZpY2F0aW9uOiBib29sZWFuID0gKCdzZXJ2aWNlV29ya2VyJyBpbiBuYXZpZ2F0b3IgJiYgJ1B1c2hNYW5hZ2VyJyBpbiB3aW5kb3cpO1xuY29uc3Qgc2VydmljZVdvcmtlciA9IChzdXBwb3J0UHVzaE5vdGlmaWNhdGlvbiA/IG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyIDogbnVsbCk7XG5cbmludGVyZmFjZSBQcm9wcyB7fVxuXG5pbnRlcmZhY2UgU3RhdGUge31cblxuaW50ZXJmYWNlIFN0YXRlIHtcbiAgcHVibGljS2V5OiBzdHJpbmcsXG4gIHN1YnNjcmlwdGlvbkluZm86IHN0cmluZyxcbn1cblxuY29uc3QgdXJsQjY0VG9VaW50OEFycmF5ID0gKGJhc2U2NFN0cmluZzogc3RyaW5nKSA9PiB7XG4gIGNvbnN0IHBhZGRpbmcgPSAnPScucmVwZWF0KCg0IC0gYmFzZTY0U3RyaW5nLmxlbmd0aCAlIDQpICUgNCk7XG4gIGNvbnN0IGJhc2U2NCA9IChiYXNlNjRTdHJpbmcgKyBwYWRkaW5nKVxuICAgIC5yZXBsYWNlKC9cXC0vZywgJysnKVxuICAgIC5yZXBsYWNlKC9fL2csICcvJyk7XG5cbiAgY29uc3QgcmF3RGF0YSA9IHdpbmRvdy5hdG9iKGJhc2U2NCk7XG4gIGNvbnN0IG91dHB1dEFycmF5ID0gbmV3IFVpbnQ4QXJyYXkocmF3RGF0YS5sZW5ndGgpO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcmF3RGF0YS5sZW5ndGg7ICsraSkge1xuICAgIG91dHB1dEFycmF5W2ldID0gcmF3RGF0YS5jaGFyQ29kZUF0KGkpO1xuICB9XG4gIHJldHVybiBvdXRwdXRBcnJheTtcbn07XG5cbmNsYXNzIFNlcnZpY2VXb3JrZXJQdXNoTm90aWZpY2F0aW9uQ29udGFpbmVyIGV4dGVuZHMgQWJzdHJhY3RDb250YWluZXI8UHJvcHMsIFN0YXRlPiB7XG4gIHN0YXRlOiBTdGF0ZSA9IHtcbiAgICBwdWJsaWNLZXk6ICcnLFxuICAgIHN1YnNjcmlwdGlvbkluZm86ICcnLFxuICB9O1xuXG4gIHJlcXVlc3RQdXNoTm90aWZpY2F0aW9uID0gYXN5bmMgKCk6IFByb21pc2U8dm9pZD4gPT4ge1xuICAgIGNvbnN0IHsgcHVibGljS2V5IH0gPSB0aGlzLnN0YXRlO1xuICAgIGlmIChwdWJsaWNLZXkgPT09ICcnIHx8IHNlcnZpY2VXb3JrZXIgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zb2xlLmxvZygnU2VydmljZVdvcmtlciBhbmQgUHVzaCBpcyBTdXBwb3J0ZWQnKTtcbiAgICB0cnkge1xuICAgICAgY29uc3Qgc3dSZWdpc3RyYXRpb24gPSBhd2FpdCBzZXJ2aWNlV29ya2VyLnJlZ2lzdGVyKCcvc2VydmljZV93b3JrZXIuanMnKTtcbiAgICAgIGNvbnNvbGUubG9nKCdTZXJ2aWNlV29ya2VyIGlzIHJlZ2lzdGVyZWQnLCBzd1JlZ2lzdHJhdGlvbik7XG4gICAgICBjb25zdCBhcHBsaWNhdGlvblNlcnZlcktleSA9IHVybEI2NFRvVWludDhBcnJheShwdWJsaWNLZXkpO1xuICAgICAgYXdhaXQgc3dSZWdpc3RyYXRpb24ucHVzaE1hbmFnZXIuZ2V0U3Vic2NyaXB0aW9uKCk7XG4gICAgICBjb25zdCBwYXJhbXMgPSB7IHVzZXJWaXNpYmxlT25seTogdHJ1ZSwgYXBwbGljYXRpb25TZXJ2ZXJLZXkgfTtcbiAgICAgIHN3UmVnaXN0cmF0aW9uLnB1c2hNYW5hZ2VyLnN1YnNjcmliZShwYXJhbXMpXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKChzdWJzY3JpcHRpb246IGFueSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdVc2VyIGlzIHN1YnNjcmliZWQ6Jywgc3Vic2NyaXB0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgc3Vic2NyaXB0aW9uSW5mbzogSlNPTi5zdHJpbmdpZnkoc3Vic2NyaXB0aW9uLCBudWxsLCAnICAnKSB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1NlcnZpY2VXb3JrZXIgZXJyb3I6JywgZXJyb3IpO1xuICAgIH1cbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBwdWJsaWNLZXksIHN1YnNjcmlwdGlvbkluZm8gfSA9IHRoaXMuc3RhdGU7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBpZD1cInNlcnZpY2Utd29ya2VyLXB1c2gtY29udGFpbmVyXCI+XG4gICAgICAgIDxoMT7jg5fjg4Pjgrfjg6XpgJrnn6VBUEk8L2gxPlxuXG4gICAgICAgIDxoMj7jg5fjg4Pjgrfjg6XpgJrnn6VBUEnjgajjga/vvJ88L2gyPlxuICAgICAgICA8cD7jgrXjg7zjg5Pjgrnjg6/jg7zjgqvjg7zjgafmj5DkvpvjgZXjgozjgabjgYTjgosgQVBJIOOBruS4gOOBpOOBp+OAgeWQjeWJjeOBrumAmuOCiuOAgeODluODqeOCpuOCtuOBq+ODl+ODg+OCt+ODpemAmuefpeOBjOihjOOBiOOCi+apn+iDveOBq+OBquOCiuOBvuOBmeOAgjwvcD5cblxuICAgICAgICA8aDI+44GK5L2/44GE44Gu44OW44Op44Km44K244Gu5a++5b+c54q25rOBPC9oMj5cbiAgICAgICAgPHA+e3N1cHBvcnRQdXNoTm90aWZpY2F0aW9uID8gJ+KXiyDlr77lv5zjgZfjgabjgYTjgb7jgZknIDogJ8OXIOmdnuWvvuW/nOOBp+OBmSd9PC9wPlxuXG4gICAgICAgIHtzdXBwb3J0UHVzaE5vdGlmaWNhdGlvbiAmJiAoXG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxoMj7li5XkvZznorroqo3jga7mlrnms5U8L2gyPlxuICAgICAgICAgICAgPG9sPlxuICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgICAgIGhyZWY9XCJodHRwczovL3dlYi1wdXNoLWNvZGVsYWIuZ2xpdGNoLm1lL1wiXG4gICAgICAgICAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIFB1c2ggQ29tcGFuaW9uICjlpJbpg6jjgrXjgqTjg4gpXG4gICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICAgICjigLsp44KS6ZaL44GN44G+44GZ44CCXG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDxsaT4o4oC7KeOBruODmuODvOOCuOWGheOBq+OBguOCizxzdHJvbmc+UHVibGljIEtleTwvc3Ryb25nPuOCkuOCs+ODlOODvOOBl+OBvuOBmeOAgjwvbGk+XG4gICAgICAgICAgICAgIDxsaT7kuIvjga48c3Ryb25nPuaTjeS9nOODkeODjeODqzwvc3Ryb25nPuOBrjxzdHJvbmc+UHVibGljIEtleTwvc3Ryb25nPuOBq+ODmuODvOOCueODiOOBl+OBvuOBmeOAgjwvbGk+XG4gICAgICAgICAgICAgIDxsaT48c3Ryb25nPuaTjeS9nOODkeODjeODqzwvc3Ryb25nPuOBrjxzdHJvbmc+UmVxdWVzdCBQZXJtaXNzaW9uPC9zdHJvbmc+44KS44Kv44Oq44OD44Kv44GX44G+44GZ44CCPC9saT5cbiAgICAgICAgICAgICAgPGxpPuODluODqeOCpuOCtuOBi+OCiemAmuefpeOCkuioseWPr+OBmeOCi+OBi+Wwi+OBreOCieOCjOOCi+OBruOBp+OAgeioseWPr+OBl+OBvuOBmeOAgjwvbGk+XG4gICAgICAgICAgICAgIDxsaT48c3Ryb25nPuaTjeS9nOODkeODjeODqzwvc3Ryb25nPuOBrjxzdHJvbmc+U3Vic2NyaXB0aW9uIEluZm88L3N0cm9uZz7jgatKU09O5paH5a2X5YiX44GM6KGo56S644GV44KM44KL44Gu44Gn44CB5YWo44Gm44Kz44OU44O844GX44G+44GZ44CCXG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDxsaT4o4oC7KeOBruODmuODvOOCuOOBrjxzdHJvbmc+U3Vic2NyaXB0aW9uIHRvIFNlbmQgVG88L3N0cm9uZz7jgavjg5rjg7zjgrnjg4jjgZfjgb7jgZnjgII8L2xpPlxuICAgICAgICAgICAgICA8bGk+KOKAuynjga7jg5rjg7zjgrjjga48c3Ryb25nPlRleHQgdG8gU2VuZDwvc3Ryb25nPuOBq+mAmuefpeOBl+OBn+OBhOODoeODg+OCu+ODvOOCuOOCkumBqeW9k+OBq+WFpeOCjOOBvuOBmeOAgjwvbGk+XG4gICAgICAgICAgICAgIDxsaT4o4oC7KeOBruODmuODvOOCuOOBrjxzdHJvbmc+U0VORCBQVVNIIE1FU1NBR0U8L3N0cm9uZz7jgpLjgq/jg6rjg4Pjgq/jgZfjgb7jgZnjgII8L2xpPlxuICAgICAgICAgICAgICA8bGk+44OX44OD44K344Ol6YCa55+l44GM5bGK44GP44GT44Go44KS56K66KqN44GX44G+44GZ44CCPC9saT5cbiAgICAgICAgICAgIDwvb2w+XG5cbiAgICAgICAgICAgIDxoMj7mk43kvZzjg5Hjg43jg6s8L2gyPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmcmFtZVwiPlxuICAgICAgICAgICAgICA8VGV4dElucHV0XG4gICAgICAgICAgICAgICAgbGFiZWw9XCJQdWJsaWMgS2V5XCJcbiAgICAgICAgICAgICAgICBtYXhMZW5ndGg9ezEwMH1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZVRleHQ9eyhpbnB1dFZhbHVlOiBzdHJpbmcpID0+IHRoaXMuc2V0U3RhdGUoeyBwdWJsaWNLZXk6IGlucHV0VmFsdWUgfSl9XG4gICAgICAgICAgICAgICAgcGxhY2VIb2xkZXI9XCJQdWJsaWMgS2V5XCJcbiAgICAgICAgICAgICAgICB2YWx1ZT17cHVibGljS2V5fVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgYWN0aXZlPXtwdWJsaWNLZXkgIT09ICcnfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInJlcXVlc3QtcGVybWlzc2lvbi1idXR0b25cIlxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHRoaXMucmVxdWVzdFB1c2hOb3RpZmljYXRpb24oKX1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIFJlcXVlc3QgUGVybWlzc2lvblxuICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgPFRleHRBcmVhXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwic3Vic2NyaXB0aW9uLWluZm9cIlxuICAgICAgICAgICAgICAgIGxhYmVsPVwiU3Vic2NyaXB0aW9uIEluZm9cIlxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoKSA9PiB1bmRlZmluZWR9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7c3Vic2NyaXB0aW9uSW5mb31cbiAgICAgICAgICAgICAgPC9UZXh0QXJlYT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgeyBTZXJ2aWNlV29ya2VyUHVzaE5vdGlmaWNhdGlvbkNvbnRhaW5lciB9OyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEFic3RyYWN0Q29udGFpbmVyIH0gZnJvbSAnLi4vLi4vLi4vYWJzdHJhY3RfY29udGFpbmVyJztcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJy4uLy4uLy4uLy4uL3ByZXNlbnRlcnMvYnV0dG9uJztcbmltcG9ydCAnLi9zdHlsZS5zY3NzJztcblxuY29uc3Qgc2VydmljZVdvcmtlciA9ICgnc2VydmljZVdvcmtlcicgaW4gbmF2aWdhdG9yID8gbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIgOiBudWxsKTtcbmNvbnN0IGluZGV4ZWREYiA9ICgnaW5kZXhlZERCJyBpbiB3aW5kb3cgPyB3aW5kb3cuaW5kZXhlZERCIDogbnVsbCk7XG5cbnR5cGUgU3luY0luZm8gPSB7IGlkPzogbnVtYmVyLCBwYXRoOiBzdHJpbmcsIHJlc3VsdDogc3RyaW5nLCBjcmVhdGVkQXQ/OiBudW1iZXIgfVxuXG5pbnRlcmZhY2UgUHJvcHMge31cblxuaW50ZXJmYWNlIFN0YXRlIHtcbiAgc3VwcG9ydEJhY2tncm91bmRTeW5jOiBib29sZWFuLFxuICBzeW5jTGlzdDogQXJyYXk8U3luY0luZm8+XG59XG5cbmNsYXNzIFNlcnZpY2VXb3JrZXJCYWNrZ3JvdW5kU3luY0NvbnRhaW5lciBleHRlbmRzIEFic3RyYWN0Q29udGFpbmVyPFByb3BzLCBTdGF0ZT4ge1xuICBpbnRlcnZhbElkOiAobnVsbCB8IE5vZGVKUy5UaW1lcikgPSBudWxsO1xuICBkYjogKG51bGwgfCBJREJEYXRhYmFzZSkgPSBudWxsO1xuICBzdGF0ZTogU3RhdGUgPSB7XG4gICAgc3luY0xpc3Q6IFtdLFxuICAgIHN1cHBvcnRCYWNrZ3JvdW5kU3luYzogZmFsc2UsXG4gIH07XG5cbiAgY29tcG9uZW50V2lsbE1vdW50KCk6IHZvaWQge1xuICAgIGlmIChpbmRleGVkRGIgPT0gbnVsbCB8fCBzZXJ2aWNlV29ya2VyID09IG51bGwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzZXJ2aWNlV29ya2VyXG4gICAgICAucmVhZHlcbiAgICAgIC50aGVuKChzd1JlZ2lzdHJhdGlvbikgPT4ge1xuICAgICAgICBpZiAoJ3N5bmMnIGluIHN3UmVnaXN0cmF0aW9uKSB7XG4gICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHN1cHBvcnRCYWNrZ3JvdW5kU3luYzogdHJ1ZSB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICBjb25zdCBkYk9lcG5SZXF1ZXN0OiBJREJPcGVuREJSZXF1ZXN0ID0gaW5kZXhlZERiLm9wZW4oJ3NlcnZpY2Vfd29ya2VyJywgMSk7XG4gICAgZGJPZXBuUmVxdWVzdC5vbnVwZ3JhZGVuZWVkZWQgPSAoZXZlbnQ6IElEQlZlcnNpb25DaGFuZ2VFdmVudCkgPT4ge1xuICAgICAgY29uc3QgZGI6IElEQkRhdGFiYXNlID0gKGV2ZW50LnRhcmdldCBhcyBJREJPcGVuREJSZXF1ZXN0KS5yZXN1bHQ7XG4gICAgICBjb25zdCBvcHRpb25zID0geyBrZXlQYXRoOiAnaWQnLCBhdXRvSW5jcmVtZW50OiB0cnVlIH07XG4gICAgICBkYi5jcmVhdGVPYmplY3RTdG9yZSgnYmFja2dyb3VuZF9zeW5jJywgb3B0aW9ucyk7XG4gICAgICB0aGlzLmRiID0gZGI7XG4gICAgfTtcbiAgICBkYk9lcG5SZXF1ZXN0Lm9uZXJyb3IgPSAoZXJyb3IpID0+IGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZDonLCBlcnJvcik7XG4gICAgZGJPZXBuUmVxdWVzdC5vbnN1Y2Nlc3MgPSAoZXZlbnQpID0+IHtcbiAgICAgIHRoaXMuZGIgPSAoZXZlbnQudGFyZ2V0IGFzIElEQk9wZW5EQlJlcXVlc3QpLnJlc3VsdDtcbiAgICB9O1xuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKTogdm9pZCB7XG4gICAgdGhpcy5yZWxvYWRTeW5jTGlzdCgpO1xuICAgIHRoaXMuaW50ZXJ2YWxJZCA9IHNldEludGVydmFsKHRoaXMucmVsb2FkU3luY0xpc3QsIDEwMDApO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuaW50ZXJ2YWxJZCAhPSBudWxsKSB7XG4gICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWxJZCk7XG4gICAgICB0aGlzLmludGVydmFsSWQgPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIHJlbG9hZFN5bmNMaXN0ID0gKCk6IHZvaWQgPT4ge1xuICAgIGlmICh0aGlzLmRiID09IG51bGwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgeyBzeW5jTGlzdCB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIGNvbnN0IHRyYW5zYWN0aW9uOiBJREJUcmFuc2FjdGlvbiA9IHRoaXMuZGIudHJhbnNhY3Rpb24oWydiYWNrZ3JvdW5kX3N5bmMnXSwgJ3JlYWR3cml0ZScpO1xuICAgIHRyYW5zYWN0aW9uLm9uZXJyb3IgPSAoZXJyb3IpID0+IGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZDonLCBlcnJvcik7XG5cbiAgICBjb25zdCByZXF1ZXN0OiBJREJSZXF1ZXN0ID0gdHJhbnNhY3Rpb24ub2JqZWN0U3RvcmUoJ2JhY2tncm91bmRfc3luYycpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmdldEFsbCgpO1xuICAgIHJlcXVlc3Qub25lcnJvciA9IChlcnJvcikgPT4gY29uc29sZS5lcnJvcignRmFpbGVkOicsIGVycm9yKTtcbiAgICByZXF1ZXN0Lm9uc3VjY2VzcyA9IChldmVudDogRXZlbnQpID0+IHtcbiAgICAgIGNvbnN0IG5ld1N5bmNMaXN0OiBBcnJheTxTeW5jSW5mbz4gPSAoZXZlbnQudGFyZ2V0IGFzIElEQk9wZW5EQlJlcXVlc3QpLnJlc3VsdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmV2ZXJzZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5zbGljZSgwLCAzMCk7XG4gICAgICBpZiAobmV3U3luY0xpc3QubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc3QgZGlmZmVyZW50TGVuZ3RoOiBib29sZWFuID0gc3luY0xpc3QubGVuZ3RoICE9PSBuZXdTeW5jTGlzdC5sZW5ndGg7XG4gICAgICBjb25zdCBkaWZmRWxlbWVudDogKHVuZGVmaW5lZCB8IFN5bmNJbmZvKSA9IGRpZmZlcmVudExlbmd0aCA/IHVuZGVmaW5lZCA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1N5bmNMaXN0LmZpbmQoKGVsZW1lbnQsIGluZGV4OiBudW1iZXIpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmlkICE9PSBzeW5jTGlzdFtpbmRleF0uaWQgfHwgZWxlbWVudC5yZXN1bHQgIT09IHN5bmNMaXN0W2luZGV4XS5yZXN1bHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSk7XG5cbiAgICAgIGlmIChkaWZmZXJlbnRMZW5ndGggfHwgZGlmZkVsZW1lbnQgIT0gbnVsbCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgc3luY0xpc3Q6IG5ld1N5bmNMaXN0IH0pO1xuICAgICAgfVxuICAgIH07XG4gIH07XG5cbiAgYmFja2dyb3VuZFN5bmNUZXN0ID0gKCk6IHZvaWQgPT4ge1xuICAgIGlmIChzZXJ2aWNlV29ya2VyID09IG51bGwgfHwgdGhpcy5kYiA9PSBudWxsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHN5bmNEYXRhID0geyBwYXRoOiAnL2V4YW1wbGUuanNvbicsIHJlc3VsdDogJycsIGNyZWF0ZWRBdDogKG5ldyBEYXRlKCkpLmdldFRpbWUoKSB9O1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uOiBJREJUcmFuc2FjdGlvbiA9IHRoaXMuZGIudHJhbnNhY3Rpb24oWydiYWNrZ3JvdW5kX3N5bmMnXSwgJ3JlYWR3cml0ZScpO1xuICAgIHRyYW5zYWN0aW9uLm9uZXJyb3IgPSAoZXJyb3IpID0+IGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZDonLCBlcnJvcik7XG5cbiAgICBjb25zdCByZXF1ZXN0OiBJREJSZXF1ZXN0ID0gdHJhbnNhY3Rpb24ub2JqZWN0U3RvcmUoJ2JhY2tncm91bmRfc3luYycpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmFkZChzeW5jRGF0YSk7XG4gICAgcmVxdWVzdC5vbmVycm9yID0gKGVycm9yKSA9PiBjb25zb2xlLmVycm9yKCdGYWlsZWQ6JywgZXJyb3IpO1xuICAgIHJlcXVlc3Qub25zdWNjZXNzID0gYXN5bmMgKGV2ZW50OiBFdmVudCkgPT4ge1xuICAgICAgY29uc3Qgc3dSZWdpc3RyYXRpb24gPSBhd2FpdCBzZXJ2aWNlV29ya2VyLnJlYWR5O1xuICAgICAgaWYgKCdzeW5jJyBpbiBzd1JlZ2lzdHJhdGlvbikge1xuICAgICAgICBjb25zdCBpZDogbnVtYmVyID0gKGV2ZW50LnRhcmdldCBhcyBJREJPcGVuREJSZXF1ZXN0KS5yZXN1bHQ7XG4gICAgICAgIGNvbnN0IHRhZzogc3RyaW5nID0gYGJhY2tncm91bmQtc3luYzoke2lkfWA7XG4gICAgICAgIHN3UmVnaXN0cmF0aW9uLnN5bmMucmVnaXN0ZXIodGFnKTtcbiAgICAgICAgdGhpcy5yZWxvYWRTeW5jTGlzdCgpO1xuICAgICAgfVxuICAgIH07XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgc3luY0xpc3QsIHN1cHBvcnRCYWNrZ3JvdW5kU3luYyB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGlkPVwic2VydmljZS13b3JrZXItYmFja2dyb3VuZC1zeW5jLWNvbnRhaW5lclwiPlxuICAgICAgICA8aDE+44OQ44OD44Kv44Kw44Op44Oz44OJ5ZCM5pyfQVBJPC9oMT5cblxuICAgICAgICA8aDI+44OQ44OD44Kv44Kw44Op44Oz44OJ5ZCM5pyfQVBJ44Go44Gv77yfPC9oMj5cbiAgICAgICAgPHA+44K144O844OT44K544Ov44O844Kr44O844Gn5o+Q5L6b44GV44KM44Gm44GE44KLIEFQSSDjga7kuIDjgaTjgafjgIHjg43jg4Pjg4jjg6/jg7zjgq/jgYzjgqrjg5Xjg6njgqTjg7Pjga7loLTlkIjjgIHjgqrjg7Pjg6njgqTjg7PjgavjgarjgaPjgZ/mmYLngrnjgafpgJrkv6HjgpLooYzjgYjjgovjgojjgYbjgavjgafjgY3jgovmqZ/og73jgafjgZnjgII8L3A+XG4gICAgICAgIDxwPkluZGV4ZWREQiDjgoLkvb/nlKjjgZfjgablrp/nj77jgZfjgb7jgZnjgII8L3A+XG5cbiAgICAgICAgPGgyPuOBiuS9v+OBhOOBruODluODqeOCpuOCtuOBruWvvuW/nOeKtuazgTwvaDI+XG4gICAgICAgIDxwPntzdXBwb3J0QmFja2dyb3VuZFN5bmMgPyAn4peLIOWvvuW/nOOBl+OBpuOBhOOBvuOBmScgOiAnw5cg6Z2e5a++5b+c44Gn44GZJ308L3A+XG5cbiAgICAgICAge3N1cHBvcnRCYWNrZ3JvdW5kU3luYyAmJiAoXG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxoMj7li5XkvZznorroqo3jga7mlrnms5U8L2gyPlxuICAgICAgICAgICAgPG9sPlxuICAgICAgICAgICAgICA8bGk+44Kk44Oz44K/44O844ON44OD44OI44GL44KJ5YiH44KK6Zui44GX44G+44GZ44CC77yI5L6L77ya5qmf5YaF44Oi44O844OJ44Gr44GZ44KL44CBV2ktRmnjgpJPZmbjgavjgZnjgovjgIFMQU7jgrHjg7zjg5bjg6vjgpLmipzjgY/jgarjganvvIk8L2xpPlxuICAgICAgICAgICAgICA8bGk+5LiL44GuPHN0cm9uZz7mk43kvZzjg5Hjg43jg6s8L3N0cm9uZz7jga48c3Ryb25nPkJhY2tncm91bmQgU3luYyBUZXN0PC9zdHJvbmc+44KS44Kv44Oq44OD44Kv44GX44G+44GZ44CCPC9saT5cbiAgICAgICAgICAgICAgPGxpPuS4i+OBrjxzdHJvbmc+5pON5L2c44OR44ON44OrPC9zdHJvbmc+44GuPHN0cm9uZz7lkIzmnJ/ntZDmnpw8L3N0cm9uZz7jgavvvJHooYzov73liqDjgZXjgow8c3Ryb25nPlJlc3VsdDwvc3Ryb25nPuashOOBjOepuuOBp+OBguOCi+OBk+OBqOOCkueiuuiqjeOBl+OBvuOBmeOAglxuICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICA8bGk+44Kk44Oz44K/44O844ON44OD44OI44Gr5o6l57aa44GX44G+44GZ44CCPC9saT5cbiAgICAgICAgICAgICAgPGxpPuS4i+OBrjxzdHJvbmc+5pON5L2c44OR44ON44OrPC9zdHJvbmc+44GuPHN0cm9uZz7lkIzmnJ/ntZDmnpw8L3N0cm9uZz7jga48c3Ryb25nPlJlc3VsdDwvc3Ryb25nPuashOOBq+WQjOacn+e1kOaenOOBjOihqOekuuOBleOCjOOCi+OBk+OBqOOCkueiuuiqjeOBl+OBvuOBmeOAglxuICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPC9vbD5cblxuICAgICAgICAgICAgPGgyPuaTjeS9nOODkeODjeODqzwvaDI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZyYW1lXCI+XG4gICAgICAgICAgICAgIDxCdXR0b24gb25DbGljaz17KCkgPT4gdGhpcy5iYWNrZ3JvdW5kU3luY1Rlc3QoKX0+XG4gICAgICAgICAgICAgICAgQmFja2dyb3VuZCBTeW5jIFRlc3RcbiAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgIDxwPuWQjOacn+e1kOaenDwvcD5cbiAgICAgICAgICAgICAgPHRhYmxlPlxuICAgICAgICAgICAgICAgIDx0aGVhZD5cbiAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInRhYmxlLWlkLWNvbHVtblwiPklEPC90aD5cbiAgICAgICAgICAgICAgICAgICAgPHRoPlBhdGg8L3RoPlxuICAgICAgICAgICAgICAgICAgICA8dGg+UmVzdWx0PC90aD5cbiAgICAgICAgICAgICAgICAgICAgPHRoPkNyZWF0ZWRBdDwvdGg+XG4gICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgIDwvdGhlYWQ+XG4gICAgICAgICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgICAgICAge3N5bmNMaXN0Lm1hcChzeW5jRGF0YSA9PiAoXG4gICAgICAgICAgICAgICAgICAgIDx0ciBrZXk9e3N5bmNEYXRhLmlkfT5cbiAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3N5bmNEYXRhLmlkfTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgPHRkPntzeW5jRGF0YS5wYXRofTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgPHRkPntzeW5jRGF0YS5yZXN1bHQgfHwgJy0nfTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgPHRkPntzeW5jRGF0YS5jcmVhdGVkQXQgfHwgJy0nfTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCB7IFNlcnZpY2VXb3JrZXJCYWNrZ3JvdW5kU3luY0NvbnRhaW5lciB9OyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7XG4gIEhhc2hSb3V0ZXIgYXMgUm91dGVyLFxuICBSb3V0ZSxcbn0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgeyBDb21tb25GcmFtZSB9IGZyb20gJy4vY29udGFpbmVycy9jb21tb25fZnJhbWUnO1xuaW1wb3J0IHsgQWJvdXRUaGlzQ29udGFpbmVyIH0gZnJvbSAnLi9jb250YWluZXJzL2Fib3V0X3RoaXMnO1xuaW1wb3J0IHsgQWJvdXRBdXRob3JDb250YWluZXIgfSBmcm9tICcuL2NvbnRhaW5lcnMvYWJvdXRfYXV0aG9yJztcbmltcG9ydCB7IExhYm9yYXRvcnlDb250YWluZXIgfSBmcm9tICcuL2NvbnRhaW5lcnMvbGFib3JhdG9yeSc7XG5pbXBvcnQgeyBRckNvZGVDb250YWluZXIgfSBmcm9tICcuL2NvbnRhaW5lcnMvbGFib3JhdG9yeS9xcl9jb2RlJztcbmltcG9ydCB7IFNlcnZpY2VXb3JrZXJDb250YWluZXIgfSBmcm9tICcuL2NvbnRhaW5lcnMvbGFib3JhdG9yeS9zZXJ2aWNlX3dvcmtlcic7XG5pbXBvcnQgeyBTZXJ2aWNlV29ya2VyQ2FjaGVDb250YWluZXIgfSBmcm9tICcuL2NvbnRhaW5lcnMvbGFib3JhdG9yeS9zZXJ2aWNlX3dvcmtlci9jYWNoZSc7XG5pbXBvcnQgeyBTZXJ2aWNlV29ya2VyUHVzaE5vdGlmaWNhdGlvbkNvbnRhaW5lciB9IGZyb20gJy4vY29udGFpbmVycy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL3B1c2hfbm90aWZpY2F0aW9uJztcbmltcG9ydCB7IFNlcnZpY2VXb3JrZXJCYWNrZ3JvdW5kU3luY0NvbnRhaW5lciB9IGZyb20gJy4vY29udGFpbmVycy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL2JhY2tncm91bmRfc3luYyc7XG5cbmNvbnN0IFZpZXdzOiBBcnJheTx7XG4gIGtleTogc3RyaW5nLFxuICBwYXRoOiBzdHJpbmcsXG4gIHRpdGxlSnA6IHN0cmluZyxcbiAgdGl0bGVFbjogc3RyaW5nLFxuICBjb21wb25lbnQ6IFJlYWN0LkNvbXBvbmVudFR5cGU8YW55PixcbiAgbGV2ZWw6IG51bWJlclxufT4gPSBbXG4gIHtcbiAgICBrZXk6ICdhYm91dF90aGlzJyxcbiAgICBwYXRoOiAnLycsXG4gICAgdGl0bGVKcDogJ+OBk+OBruOCteOCpOODiOOBq+OBpOOBhOOBpicsXG4gICAgdGl0bGVFbjogJ0Fib3V0IHRoaXMnLFxuICAgIGNvbXBvbmVudDogQWJvdXRUaGlzQ29udGFpbmVyLFxuICAgIGxldmVsOiAxLFxuICB9LFxuICB7XG4gICAga2V5OiAnYWJvdXRfYXV0aG9yJyxcbiAgICBwYXRoOiAnL2F1dGhvcicsXG4gICAgdGl0bGVKcDogJ+mBi+WWtuiAheOBq+OBpOOBhOOBpicsXG4gICAgdGl0bGVFbjogJ0Fib3V0IGF1dGhvcicsXG4gICAgY29tcG9uZW50OiBBYm91dEF1dGhvckNvbnRhaW5lcixcbiAgICBsZXZlbDogMSxcbiAgfSxcbiAge1xuICAgIGtleTogJ2xhYm9yYXRvcnknLFxuICAgIHBhdGg6ICcvbGFib3JhdG9yeScsXG4gICAgdGl0bGVKcDogJ+Wun+mok+WupCcsXG4gICAgdGl0bGVFbjogJ0xhYm9yYXRvcnknLFxuICAgIGNvbXBvbmVudDogTGFib3JhdG9yeUNvbnRhaW5lcixcbiAgICBsZXZlbDogMSxcbiAgfSxcbiAge1xuICAgIGtleTogJ3NlcnZpY2Vfd29ya2VyJyxcbiAgICBwYXRoOiAnL2xhYm9yYXRvcnkvc2VydmljZV93b3JrZXInLFxuICAgIHRpdGxlSnA6ICfjgrXjg7zjg5Pjgrnjg6/jg7zjgqvjg7wnLFxuICAgIHRpdGxlRW46ICdTZXJ2aWNlIFdvcmtlcicsXG4gICAgY29tcG9uZW50OiBTZXJ2aWNlV29ya2VyQ29udGFpbmVyLFxuICAgIGxldmVsOiAyLFxuICB9LFxuICB7XG4gICAga2V5OiAnc2VydmljZV93b3JrZXJfY2FjaGUnLFxuICAgIHBhdGg6ICcvbGFib3JhdG9yeS9zZXJ2aWNlX3dvcmtlci9jYWNoZScsXG4gICAgdGl0bGVKcDogJ+OCreODo+ODg+OCt+ODpUFQSScsXG4gICAgdGl0bGVFbjogJ0NhY2hlIEFQSScsXG4gICAgY29tcG9uZW50OiBTZXJ2aWNlV29ya2VyQ2FjaGVDb250YWluZXIsXG4gICAgbGV2ZWw6IDMsXG4gIH0sXG4gIHtcbiAgICBrZXk6ICdzZXJ2aWNlX3dvcmtlcl9wdXNoX25vdGlmaWNhdGlvbicsXG4gICAgcGF0aDogJy9sYWJvcmF0b3J5L3NlcnZpY2Vfd29ya2VyL3B1c2hfbm90aWZpY2F0aW9uJyxcbiAgICB0aXRsZUpwOiAn44OX44OD44K344Ol6YCa55+lQVBJJyxcbiAgICB0aXRsZUVuOiAnUHVzaCBOb3RpZmljYXRpb24gQVBJJyxcbiAgICBjb21wb25lbnQ6IFNlcnZpY2VXb3JrZXJQdXNoTm90aWZpY2F0aW9uQ29udGFpbmVyLFxuICAgIGxldmVsOiAzLFxuICB9LFxuICB7XG4gICAga2V5OiAnc2VydmljZV93b3JrZXJfYmFja2dyb3VuZF9zeW5jJyxcbiAgICBwYXRoOiAnL2xhYm9yYXRvcnkvc2VydmljZV93b3JrZXIvYmFja2dyb3VuZF9zeW5jJyxcbiAgICB0aXRsZUpwOiAn44OQ44OD44Kv44Kw44Op44Km44Oz44OJ5ZCM5pyfQVBJJyxcbiAgICB0aXRsZUVuOiAnQmFja2dyb3VuZCBTeW5jIEFQSScsXG4gICAgY29tcG9uZW50OiBTZXJ2aWNlV29ya2VyQmFja2dyb3VuZFN5bmNDb250YWluZXIsXG4gICAgbGV2ZWw6IDMsXG4gIH0sXG4gIHtcbiAgICBrZXk6ICdxcl9jb2RlJyxcbiAgICBwYXRoOiAnL2xhYm9yYXRvcnkvcXJfY29kZScsXG4gICAgdGl0bGVKcDogJ1FS44Kz44O844OJJyxcbiAgICB0aXRsZUVuOiAnUVIgQ29kZScsXG4gICAgY29tcG9uZW50OiBRckNvZGVDb250YWluZXIsXG4gICAgbGV2ZWw6IDIsXG4gIH0sXG5dO1xuXG5jb25zdCBtZW51TGlzdCA9IFZpZXdzLm1hcCgodmlldykgPT4gKHtcbiAgcGF0aDogdmlldy5wYXRoLFxuICB0aXRsZUpwOiB2aWV3LnRpdGxlSnAsXG4gIHRpdGxlRW46IHZpZXcudGl0bGVFbixcbiAgbGV2ZWw6IHZpZXcubGV2ZWwsXG59KSk7XG5cbmNvbnN0IFJvdXRlcyA9IChcbiAgPFJvdXRlcj5cbiAgICA8Q29tbW9uRnJhbWUgbWVudUxpc3Q9e21lbnVMaXN0fT5cbiAgICAgIHtWaWV3cy5tYXAoKHZpZXcpID0+IChcbiAgICAgICAgPFJvdXRlXG4gICAgICAgICAgY29tcG9uZW50PXt2aWV3LmNvbXBvbmVudH1cbiAgICAgICAgICBleGFjdFxuICAgICAgICAgIGtleT17dmlldy5wYXRofVxuICAgICAgICAgIHBhdGg9e3ZpZXcucGF0aH1cbiAgICAgICAgICBzdHJpY3RcbiAgICAgICAgLz5cbiAgICAgICkpfVxuICAgIDwvQ29tbW9uRnJhbWU+XG4gIDwvUm91dGVyPlxuKTtcblxuY29uc3QgZXh0cmFjdFBhdGggPSAoa2V5OiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICBjb25zdCB2aWV3ID0gVmlld3MuZmluZCgodmlldykgPT4gdmlldy5rZXkgPT09IGtleSk7XG4gIGlmICh2aWV3ID09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYE5vdCBmb3VuZDogJHtrZXl9YCk7XG4gIH1cbiAgcmV0dXJuIGAke3ZpZXcucGF0aH1gO1xufTtcbmNvbnN0IFNlcnZpY2VXb3JrZXJQYXRoOiBzdHJpbmcgPSBleHRyYWN0UGF0aCgnc2VydmljZV93b3JrZXInKTtcbmNvbnN0IFNlcnZpY2VXb3JrZXJDYWNoZVBhdGg6IHN0cmluZyA9IGV4dHJhY3RQYXRoKCdzZXJ2aWNlX3dvcmtlcl9jYWNoZScpO1xuY29uc3QgU2VydmljZVdvcmtlclB1c2hOb3RpZmljYXRpb25QYXRoOiBzdHJpbmcgPSBleHRyYWN0UGF0aCgnc2VydmljZV93b3JrZXJfcHVzaF9ub3RpZmljYXRpb24nKTtcbmNvbnN0IFNlcnZpY2VXb3JrZXJCYWNrZ3JvdW5kU3luY1BhdGg6IHN0cmluZyA9IGV4dHJhY3RQYXRoKCdzZXJ2aWNlX3dvcmtlcl9iYWNrZ3JvdW5kX3N5bmMnKTtcbmNvbnN0IFFyQ29kZVBhdGg6IHN0cmluZyA9IGV4dHJhY3RQYXRoKCdxcl9jb2RlJyk7XG5cbmV4cG9ydCB7XG4gIFJvdXRlcyxcbiAgUXJDb2RlUGF0aCxcbiAgU2VydmljZVdvcmtlckNhY2hlUGF0aCxcbiAgU2VydmljZVdvcmtlclBhdGgsXG4gIFNlcnZpY2VXb3JrZXJQdXNoTm90aWZpY2F0aW9uUGF0aCxcbiAgU2VydmljZVdvcmtlckJhY2tncm91bmRTeW5jUGF0aCxcbn07XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgeyBBYnN0cmFjdENvbnRhaW5lciB9IGZyb20gJy4uL2Fic3RyYWN0X2NvbnRhaW5lcic7XG5pbXBvcnQgeyBTZXJ2aWNlV29ya2VyUGF0aCB9IGZyb20gJy4uLy4uL3JvdXRlcyc7XG5pbXBvcnQgJy4vc3R5bGUuc2Nzcyc7XG5cbmludGVyZmFjZSBQcm9wcyB7fVxuXG5pbnRlcmZhY2UgU3RhdGUge31cblxuY2xhc3MgQWJvdXRUaGlzQ29udGFpbmVyIGV4dGVuZHMgQWJzdHJhY3RDb250YWluZXI8UHJvcHMsIFN0YXRlPiB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPGgxPuOBk+OBruOCteOCpOODiOOBq+OBpOOBhOOBpjwvaDE+XG4gICAgICAgIDxoMj7nm67nmoQ8L2gyPlxuICAgICAgICA8cD7jgZPjga7jgrXjgqTjg4jjga/ku6XkuIvjga7nm67nmoTjgaflhazplovjgZfjgabjgYTjgb7jgZnjgII8L3A+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICA8bGk+5paw44GX44GE5oqA6KGT44Gu44OG44K544OIPC9saT5cbiAgICAgICAgICA8bGk+44K544Kt44Or44K744OD44OI44Gu5YWs6ZaLPC9saT5cbiAgICAgICAgPC91bD5cblxuICAgICAgICA8aDI+44GT44Gu44K144Kk44OI44Gu44K944O844K5PC9oMj5cbiAgICAgICAgPHA+PGEgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9oeWlyb21vcmkvaHlpcm9tb3JpLmdpdGh1Yi5pb1wiPkdpdEh1YjwvYT4g44Gr44GC44KK44G+44GZ44CCPC9wPlxuICAgICAgICA8cD7mioDooZPnmoTjgarnibnlvrTjgajjgZfjgabjga/jgIHku6XkuIvjga7jgajjgYrjgorjgafjgZnjgII8L3A+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICA8bGk+PHN0cm9uZz5TUEE8L3N0cm9uZz7jgafkvZzjgonjgozjgabjgYTjgovjga7jgafjgIHoqq3jgb/ovrzjgb/lrozkuoblvozjga/jg5rjg7zjgrjpgbfnp7vjgYzml6njgYTjgafjgZnjgII8L2xpPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIDxMaW5rIHRvPXtTZXJ2aWNlV29ya2VyUGF0aH0+U2VydmljZSBXb3JrZXI8L0xpbms+XG4gICAgICAgICAgICDjgpLkvb/nlKjjgZfjgabjgYrjgorjgIHlv4XopoHjgarjg6rjgr3jg7zjgrnjgpLjgq3jg6Pjg4Pjgrfjg6XjgZfjgabjgYTjgovjga7jgafjgIHlr77lv5zjgZfjgabjgYTjgovjg5bjg6njgqbjgrbjga7loLTlkIjjga/jgqrjg5Xjg6njgqTjg7PjgafjgoLplrLopqfjgafjgY3jgb7jgZnjgIJcbiAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIOiHquWIhuOBruaKgOihk+WKm+WQkeS4iuOBruOBn+OCgeOBq1xuICAgICAgICAgICAgPHN0cm9uZz5UeXBlU2NyaXB0PC9zdHJvbmc+XG4gICAgICAgICAgICA8c3Ryb25nPlJlYWN0PC9zdHJvbmc+XG4gICAgICAgICAgICA8c3Ryb25nPldlYnBhY2s8L3N0cm9uZz5cbiAgICAgICAgICAgIOOBquOBqeOBruODmeODvOOCueOBqOOBquOCi+OCguOBruS7peWkluOBr+OAgeODqeOCpOODluODqeODquOChOODleODrOODvOODoOODr+ODvOOCr+OBquOBqeOBu+OBvOS9v+eUqOOBl+OBpuOBhOOBvuOBm+OCk+OAglxuICAgICAgICAgIDwvbGk+XG4gICAgICAgIDwvdWw+XG5cbiAgICAgICAgPGgyPuWLleS9nOeiuuiqjeOBq+OBpOOBhOOBpjwvaDI+XG4gICAgICAgIDxwPuS7peS4i+OBrueSsOWig+OBp+WLleS9nOeiuuiqjeOCkuihjOOBo+OBpuOBhOOBvuOBmeOAgjwvcD5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIDxsaT5NYWMgT1MgWCArIENocm9tZSDmnIDmlrDniYg8L2xpPlxuICAgICAgICAgIDxsaT5NYWMgT1MgWCArIFNhZmFyaSDmnIDmlrDniYg8L2xpPlxuICAgICAgICAgIDxsaT5pUGhvbmUgU0UgKyBTYWZhcmkg5pyA5paw54mIPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgICAgPHA+44KC44GX5LiN5YW35ZCI44Gq44Gp44GC44KK44G+44GX44Gf44KJ44CB5bem5LiL44Gu44Oh44O844Or44CB44G+44Gf44GvIFR3aXR0ZXIg44Gn44GU5aCx5ZGK44GE44Gf44Gg44GR44KL44Go44GC44KK44GM44Gf44GE44Gn44GZ44CCPC9wPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgeyBBYm91dFRoaXNDb250YWluZXIgfTsiLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgeyBBYnN0cmFjdENvbnRhaW5lciB9IGZyb20gJy4uL2Fic3RyYWN0X2NvbnRhaW5lcic7XG5pbXBvcnQgeyBTZXJ2aWNlV29ya2VyUGF0aCB9IGZyb20gJy4uLy4uL3JvdXRlcyc7XG5pbXBvcnQgJy4vc3R5bGUuc2Nzcyc7XG5cbmludGVyZmFjZSBQcm9wcyB7fVxuXG5pbnRlcmZhY2UgU3RhdGUge31cblxuY2xhc3MgQWJvdXRBdXRob3JDb250YWluZXIgZXh0ZW5kcyBBYnN0cmFjdENvbnRhaW5lcjxQcm9wcywgU3RhdGU+IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8aDE+6YGL5Za26ICF44Gr44Gk44GE44GmPC9oMT5cblxuICAgICAgICA8aDI+6Ieq5bex57S55LuLPC9oMj5cbiAgICAgICAgPHA+PHN0cm9uZz5oeWlyb21vcmk8L3N0cm9uZz4g44Go44GE44GG5ZCN5YmN44Gn5rS75YuV44GX44Gm44GE44KL44CB5LiA5b+c44OV44Or44K544K/44OD44Kv44Ko44Oz44K444OL44Ki44Gn44GZ44CCPC9wPlxuXG4gICAgICAgIDxoMj7jgrnjgq3jg6s8L2gyPlxuICAgICAgICA8cD5Gcm9udGVuZCDlpb3jgY3jgafjgZnjgYzjgIHkuIDkurrjgafjgrXjg7zjg5PjgrnjgpLnq4vjgaHkuIrjgZLjgovjgZDjgonjgYTjga7jgZPjgajjga/jgafjgY3jgovmhJ/jgZjjgafjgZnjgII8L3A+XG5cbiAgICAgICAgPGgzPkZyb250ZW5k6Zai5L+CPC9oMz5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIDxzdHJvbmc+RVMyMDE1PC9zdHJvbmc+PGJyIC8+XG4gICAgICAgICAgICDjg6Ljg4Djg7PjgapGcm9udGVuZOmWi+eZuuOBp+OBr+W9k+OBn+OCiuWJjeOBruOCiOOBhuOBq+S9v+OBo+OBpuOBvuOBmeOAglxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgPHN0cm9uZz5UeXBlU2NyaXB0PC9zdHJvbmc+PGJyIC8+XG4gICAgICAgICAgICDmnIDov5Hjga8gVUkg44GM6KSH6ZuR44Gr44Gq44Gj44Gm44GN44Gm44GE44KL44Gu44Gn44CB5Z6L5LuY44GR6KiA6Kqe44Gg44Go44GL44Gq44KK6ZaL55m644GM5qW944Gr44Gq44KK44G+44GZ44CCXG4gICAgICAgICAgICDjgarjgYvjgarjgYvml6LlrZjjga7jgr3jg7zjgrnjgavjga/lhaXjgozjgonjgozjgarjgYTjgafjgZnjgYzjgIHlgIvkurrnmoTjgavjga/lv4XjgZrkvb/jgYbjgojjgYbjgavjgZfjgabjgYTjgb7jgZnjgIJcbiAgICAgICAgICAgIOOBk+OBruOCteOCpOODiOOBruOCveODvOOCueOCgiBUeXBlU2NyaXB0IOOBp+abuOOBhOOBpuOBvuOBmeOAglxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgPHN0cm9uZz5SZWFjdDwvc3Ryb25nPjxiciAvPlxuICAgICAgICAgICAg5qWt5YuZ44Gn44KC44CB5YCL5Lq655qE44Gr44KC44CB44GT44Gu44K144Kk44OI44Gn44KC5L2/55So44GX44Gm44GE44KL44CB5LiA55Wq6Imv44GP5L2/44GG44OV44Ot44Oz44OI44Ko44Oz44OJ44OV44Os44O844Og44Ov44O844Kv44Gn44GZ44CCXG4gICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICA8c3Ryb25nPisgUmVkdXg8L3N0cm9uZz48YnIgLz5cbiAgICAgICAgICAgICAgICDlrprnlarjga7ntYTjgb/lkIjjgo/jgZvjgafjgIHjgojjgY/kvb/jgaPjgabjgY3jgb7jgZfjgZ/jgIJcbiAgICAgICAgICAgICAgICDjgYzjgIHmnIDov5Hjga/kvZXjgafjgoLlhaXjgozjgozjgbDoia/jgYTjgajjga/mgJ3jgaPjgabjgYTjgb7jgZvjgpPjgIJcbiAgICAgICAgICAgICAgICDkvb/jgYTmiYDjgYzlpKfkuovjgaDjgarjgJzjgIHjgajmhJ/jgZjjgabjgYTjgb7jgZnjgIJcbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgICA8bGk+PHN0cm9uZz5XZWJwYWNrPC9zdHJvbmc+PC9saT5cbiAgICAgICAgICA8bGk+PHN0cm9uZz5DU1MgKFNDU1MpPC9zdHJvbmc+PC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgICAgPGgzPkJhY2tlbmTplqLkv4I8L2gzPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgPHN0cm9uZz5SdWJ5IG9uIFJhaWxzPC9zdHJvbmc+PGJyIC8+XG4gICAgICAgICAgICDku5XkuovjgafvvJLlubTjgZDjgonjgYTkvb/nlKjjgZfjgabjgYTjgb7jgZnjgIJcbiAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgIDxzdHJvbmc+UnNwZWM8L3N0cm9uZz48YnIgLz5cbiAgICAgICAgICAgICAgICBSdWJ5IOOBruODhuOCueODiOODleODrOODvOODoOODr+ODvOOCr+OBruWumueVquOBp+OBmeOBreOAglxuICAgICAgICAgICAgICAgIOOBoOOBhOOBtuOCreODrOOCpOOBq+abuOOBkeOCi+OCiOOBhuOBq+OBquOBo+OBpuOBjeOBvuOBl+OBn+OBjOOAgTxhIGhyZWY9XCJodHRwczovL3FpaXRhLmNvbS9qbmNoaXRvL2l0ZW1zL2E5MGIzYjA5ZDAwODIyN2QzZDYwXCI+44GT44GuUWlpdGHjga7oqJjkuos8L2E+44KC5YWx5oSf44Gn44GN44G+44GZ44CCXG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPGxpPlxuICAgICAgICAgICAgPHN0cm9uZz5FeHByZXNzPC9zdHJvbmc+PGJyIC8+XG4gICAgICAgICAgICDlgIvkurrnmoTjgavkvZzjgovpmpvjgavjga/jg5/jg4vjg57jg6vjgafli4nlvLfjgavjgarjgovjga7jgafjgIHjgojjgY/kvb/jgaPjgabjgYTjgb7jgZnjgIJcbiAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIDxzdHJvbmc+6Ieq5L2cV2Vi44K144O844OQPC9zdHJvbmc+PGJyIC8+XG4gICAgICAgICAgICDjgarjgpPjgaHjgoPjgaPjgaYgV2ViIOOCteODvOODkOOCkiBKYXZhIOOBp+S9nOOBo+OBn+OBk+OBqOOCguOBguOCiuOBvuOBl+OBn+OAglxuICAgICAgICAgICAg5a6f6YGL55So44Gr6ICQ44GI44KJ44KM44KL44Os44OZ44Or44Gn44Gv44Gq44GE44Gn44GZ44GM44CBSFRUUCDjga7kuLvjgarku5Xmp5jjgajjgYvjgpLlrabjgbbjga7jgavoia/jgYvjgaPjgZ/jga7jgafntLnku4vjgZfjgabjgYrjgY3jgb7jgZnjgIJcbiAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgICA8aDM+SW5mcmHplqLkv4I8L2gzPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPjxzdHJvbmc+QVdTPC9zdHJvbmc+PC9saT5cbiAgICAgICAgICA8bGk+PHN0cm9uZz5Eb2NrZXI8L3N0cm9uZz48L2xpPlxuICAgICAgICA8L3VsPlxuXG4gICAgICAgIDxoMj7jg5bjg63jgrDjgajjgYtTTlPjgajjgYs8L2gyPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPjxhIGhyZWY9XCJodHRwczovL3FpaXRhLmNvbS9oeWlyb21vcmlcIj5RaWl0YTwvYT48L2xpPlxuICAgICAgICAgIDxsaT48YSBocmVmPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9oeWlyb21vcmlcIj5Ud2l0dGVyPC9hPjwvbGk+XG4gICAgICAgICAgPGxpPjxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vaHlpcm9tb3JpXCI+R2l0SHViPC9hPjwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCB7IEFib3V0QXV0aG9yQ29udGFpbmVyIH07IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgQWJzdHJhY3RDb250YWluZXIgfSBmcm9tICcuLi9hYnN0cmFjdF9jb250YWluZXInO1xuaW1wb3J0IHtcbiAgU2VydmljZVdvcmtlclBhdGgsXG4gIFFyQ29kZVBhdGgsXG59IGZyb20gJy4uLy4uL3JvdXRlcyc7XG5pbXBvcnQgJy4vc3R5bGUuc2Nzcyc7XG5cbmludGVyZmFjZSBQcm9wcyB7fVxuXG5pbnRlcmZhY2UgU3RhdGUge31cblxuY2xhc3MgTGFib3JhdG9yeUNvbnRhaW5lciBleHRlbmRzIEFic3RyYWN0Q29udGFpbmVyPFByb3BzLCBTdGF0ZT4ge1xuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgaWQ9XCJsYWJvcmF0b3J5LWNvbnRhaW5lclwiPlxuICAgICAgICA8aDE+5a6f6aiT5a6kPC9oMT5cbiAgICAgICAgPHA+5paw44GX44GE5oqA6KGT44KE5rCX44Gr44Gq44Gj44Gf5oqA6KGT44Gu5a6f6aiT44Gr5L2/44Gj44Gf44KC44Gu44Gu57S55LuL44Oa44O844K444Gn44GZ44CCPC9wPlxuICAgICAgICA8aDI+5a6f6aiT5LiA6KanPC9oMj5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIDxsaT48TGluayB0bz17U2VydmljZVdvcmtlclBhdGh9PlNlcnZpY2UgV29ya2VyPC9MaW5rPjwvbGk+XG4gICAgICAgICAgPGxpPjxMaW5rIHRvPXtRckNvZGVQYXRofT5RUiBDb2RlPC9MaW5rPjwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCB7IExhYm9yYXRvcnlDb250YWluZXIgfTsiLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgeyBBYnN0cmFjdENvbnRhaW5lciB9IGZyb20gJy4uLy4uL2Fic3RyYWN0X2NvbnRhaW5lcic7XG5pbXBvcnQge1xuICBTZXJ2aWNlV29ya2VyQ2FjaGVQYXRoLFxuICBTZXJ2aWNlV29ya2VyUHVzaE5vdGlmaWNhdGlvblBhdGgsXG4gIFNlcnZpY2VXb3JrZXJCYWNrZ3JvdW5kU3luY1BhdGgsXG59IGZyb20gJy4uLy4uLy4uL3JvdXRlcyc7XG5pbXBvcnQgJy4vc3R5bGUuc2Nzcyc7XG5cbmludGVyZmFjZSBQcm9wcyB7fVxuXG5pbnRlcmZhY2UgU3RhdGUge31cblxuY2xhc3MgU2VydmljZVdvcmtlckNvbnRhaW5lciBleHRlbmRzIEFic3RyYWN0Q29udGFpbmVyPFByb3BzLCBTdGF0ZT4ge1xuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgaWQ9XCJzZXJ2aWNlLXdvcmtlci1jb250YWluZXJcIj5cbiAgICAgICAgPGgxPuOCteODvOODk+OCueODr+ODvOOCq+ODvDwvaDE+XG4gICAgICAgIDxoMj7jgrXjg7zjg5Pjgrnjg6/jg7zjgqvjg7zjgajjga/vvJ88L2gyPlxuICAgICAgICA8cD5cbiAgICAgICAgICDjg5bjg6njgqbjgrbjga7jg5Djg4Pjgq/jgrDjg6njg7Pjg4njgaflrp/ooYzjgZXjgozjgosgSmF2YVNjcmlwdCDjga7lrp/ooYznkrDlooPjgafjgZnjgIJcbiAgICAgICAgICDjg5rjg7zjgrjjga7jg6njgqTjg5XjgrXjgqTjgq/jg6vjgajjga/jgIzliKXjgI3jga7jg6njgqTjg5XjgrXjgqTjgq/jg6vjgpLmjIHjgaHjgb7jgZnjgIJcbiAgICAgICAgPC9wPlxuICAgICAgICA8aDI+44K144O844OT44K544Ov44O844Kr44O844Gu5qmf6IO9PC9oMj5cbiAgICAgICAgPHA+5Lul5LiL44GuQVBJ44GM5o+Q5L6b44GV44KM44Gm44GE44G+44GZ44CCPC9wPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpPjxMaW5rIHRvPXtTZXJ2aWNlV29ya2VyQ2FjaGVQYXRofT7jgq3jg6Pjg4Pjgrfjg6VBUEk8L0xpbms+PC9saT5cbiAgICAgICAgICA8bGk+PExpbmsgdG89e1NlcnZpY2VXb3JrZXJQdXNoTm90aWZpY2F0aW9uUGF0aH0+44OX44OD44K344Ol6YCa55+lQVBJPC9MaW5rPjwvbGk+XG4gICAgICAgICAgPGxpPjxMaW5rIHRvPXtTZXJ2aWNlV29ya2VyQmFja2dyb3VuZFN5bmNQYXRofT7jg5Djg4Pjgq/jgrDjg6njgqbjg7Pjg4nlkIzmnJ9BUEk8L0xpbms+PC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgICAgPGgyPuOCguOBo+OBqOips+OBl+OBj+efpeOCiuOBn+OBhOWgtOWQiDwvaDI+eycgJ31cbiAgICAgICAgPHA+5Lul5LiL44GuIFFpaXRhIOOBruiomOS6i+OCkuOBlOimp+OBj+OBoOOBleOBhOOAgjwvcD5cbiAgICAgICAgPHA+PGEgaHJlZj1cImh0dHBzOi8vcWlpdGEuY29tL2h5aXJvbW9yaS9pdGVtcy83OTg2YTcyNTU0MWM5N2RhODc4ZFwiPlNlcnZpY2UgV29ya2VyIOODoeODoiAtIFFpaXRhPC9hPjwvcD5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IHsgU2VydmljZVdvcmtlckNvbnRhaW5lciB9OyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7XG4gIENsb3NlSWNvbixcbiAgRW52ZWxvcGVJY29uLFxuICBHaXRIdWJJY29uLFxuICBNZW51SWNvbixcbiAgVHdpdHRlckljb24sXG59IGZyb20gJy4uLy4uL3ByZXNlbnRlcnMvaWNvbic7XG5pbXBvcnQgeyBpc01vYmlsZURldmljZSB9IGZyb20gJy4uLy4uL2NvbW1vbi9wbGF0Zm9ybSc7XG5pbXBvcnQgJy4vaW5kZXguc2Nzcyc7XG5cbmludGVyZmFjZSBNZW51IHtcbiAgcGF0aDogc3RyaW5nLFxuICB0aXRsZUpwOiBzdHJpbmcsXG4gIHRpdGxlRW46IHN0cmluZyxcbiAgbGV2ZWw6IG51bWJlclxufVxuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBjaGlsZHJlbjogQXJyYXk8UmVhY3QuUmVhY3ROb2RlPixcbiAgbWVudUxpc3Q6IEFycmF5PE1lbnU+XG59XG5cbmludGVyZmFjZSBTdGF0ZSB7XG4gIHNob3dNZW51OiBib29sZWFuLFxufVxuXG5jbGFzcyBDb21tb25GcmFtZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxQcm9wcywgU3RhdGU+IHtcbiAgc3RhdGU6IFN0YXRlID0geyBzaG93TWVudTogZmFsc2UgfTtcblxuICBjbG9zZU1lbnVJZk1vYmlsZURldmljZSA9ICgpOiB2b2lkID0+IHtcbiAgICBpZiAoaXNNb2JpbGVEZXZpY2UoKSkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7IHNob3dNZW51OiBmYWxzZSB9KTtcbiAgICB9XG4gIH07XG5cbiAgcmVuZGVyTWVudUl0ZW0obWVudTogTWVudSwgc2VsZWN0ZWQ6IGJvb2xlYW4pIHtcbiAgICBjb25zdCB7XG4gICAgICBsZXZlbCxcbiAgICAgIHBhdGgsXG4gICAgICB0aXRsZUpwLFxuICAgICAgdGl0bGVFbixcbiAgICB9ID0gbWVudTtcblxuICAgIGNvbnN0IGNvbnRlbnQgPSAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlLWpwXCI+XG4gICAgICAgICAge3RpdGxlSnB9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlLWVuXCI+XG4gICAgICAgICAge3RpdGxlRW59XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcblxuICAgIGlmIChzZWxlY3RlZCkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2BtZW51LWJ1dHRvbiBsZXZlbCR7bGV2ZWx9IG1hcmtlZGB9PlxuICAgICAgICAgIHtjb250ZW50fVxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxMaW5rXG4gICAgICAgIHRvPXtwYXRofVxuICAgICAgICBjbGFzc05hbWU9e2BtZW51LWJ1dHRvbiBsZXZlbCR7bGV2ZWx9YH1cbiAgICAgICAgb25DbGljaz17dGhpcy5jbG9zZU1lbnVJZk1vYmlsZURldmljZX1cbiAgICAgID5cbiAgICAgICAge2NvbnRlbnR9XG4gICAgICA8L0xpbms+XG4gICAgKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGNoaWxkcmVuLCBtZW51TGlzdCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IHNob3dNZW51IH0gPSB0aGlzLnN0YXRlO1xuICAgIGNvbnN0IGN1cnJlbnRQYXRoOiBzdHJpbmcgPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHIoMSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBpZD1cImNvbW1vbi1mcmFtZVwiPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgaWQ9XCJjb21tb24tZnJhbWUtY29udGVudFwiXG4gICAgICAgICAgY2xhc3NOYW1lPXtzaG93TWVudSA/ICdzaG93LW1lbnUnIDogJyd9XG4gICAgICAgID5cbiAgICAgICAgICA8ZGl2IGlkPVwiY29tbW9uLWZyYW1lLWNvbnRlbnQtaW5uZXJcIj5cbiAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtzaG93TWVudSA/XG4gICAgICAgICAoXG5cbiAgICAgICAgICAgPGRpdiBpZD1cImNvbW1vbi1mcmFtZS1tZW51XCI+XG4gICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY29tbW9uLWZyYW1lLWhlYWRlci1tZW51LWJ1dHRvblwiXG4gICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB0aGlzLnNldFN0YXRlKHsgc2hvd01lbnU6IGZhbHNlIH0pfVxuICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgIDxDbG9zZUljb24gLz5cbiAgICAgICAgICAgICAgIDxzcGFuPkNsb3NlPC9zcGFuPlxuICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgIHttZW51TGlzdC5tYXAoKG1lbnU6IE1lbnUpID0+IChcbiAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAga2V5PXttZW51LnBhdGh9XG4gICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm1lbnUtaXRlbVwiXG4gICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgIHt0aGlzLnJlbmRlck1lbnVJdGVtKG1lbnUsIGN1cnJlbnRQYXRoID09PSBtZW51LnBhdGgpfVxuICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgKSl9XG4gICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgKSA6IChcbiAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNvbW1vbi1mcmFtZS1oZWFkZXItbWVudS1idXR0b25cIlxuICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHRoaXMuc2V0U3RhdGUoeyBzaG93TWVudTogdHJ1ZSB9KX1cbiAgICAgICAgICAgPlxuICAgICAgICAgICAgIDxNZW51SWNvbiAvPlxuICAgICAgICAgICAgIDxzcGFuPk1lbnU8L3NwYW4+XG4gICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgPGRpdiBpZD1cImNvbW1vbi1mcmFtZS1mb290ZXJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxlZnQtY29udGVudFwiPlxuICAgICAgICAgICAgPGEgaHJlZj1cIm1haWx0bzpoeWlyb21vcmlAZ21haWwuY29tXCI+XG4gICAgICAgICAgICAgIDxFbnZlbG9wZUljb24gLz5cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDxhXG4gICAgICAgICAgICAgIGhyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL2h5aXJvbW9yaVwiXG4gICAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxUd2l0dGVySWNvbiAvPlxuICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9oeWlyb21vcmlcIlxuICAgICAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8R2l0SHViSWNvbiAvPlxuICAgICAgICAgICAgPC9hPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmlnaHQtY29udGVudFwiPihDKSAyMDE4IGh5aXJvbW9yaTwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH07XG59XG5cbmV4cG9ydCB7XG4gIENvbW1vbkZyYW1lLFxufTtcbiIsImltcG9ydCB7IHJlbmRlciB9IGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgeyBSb3V0ZXMgfSBmcm9tICcuL3JvdXRlcyc7XG5pbXBvcnQgJy4vaW5kZXguc2Nzcyc7XG5cbmlmICgnc2VydmljZVdvcmtlcicgaW4gbmF2aWdhdG9yKSB7XG4gIG5hdmlnYXRvclxuICAgIC5zZXJ2aWNlV29ya2VyXG4gICAgLnJlZ2lzdGVyKCcvc2VydmljZV93b3JrZXIuanMnKVxuICAgIC50aGVuKChyZWdpc3RyYXRpb246IGFueSkgPT4gY29uc29sZS5sb2coJ1NlcnZpY2VXb3JrZXIgc2NvcGU6JywgcmVnaXN0cmF0aW9uLnNjb3BlKSlcbiAgICAuY2F0Y2goKGVycm9yOiBhbnkpID0+IGNvbnNvbGUubG9nKCdTZXJ2aWNlV29ya2VyIHJlZ2lzdHJhdGlvbiBmYWlsZWQ6ICcsIGVycm9yKSk7XG59XG5cbnJlbmRlcihSb3V0ZXMsIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcHAnKSk7XG4iXSwic291cmNlUm9vdCI6IiJ9