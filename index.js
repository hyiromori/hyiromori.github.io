!function(e){function n(n){for(var r,a,i=n[0],c=n[1],s=n[2],p=0,u=[];p<i.length;p++)a=i[p],o[a]&&u.push(o[a][0]),o[a]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(e[r]=c[r]);for(m&&m(n);u.length;)u.shift()();return l.push.apply(l,s||[]),t()}function t(){for(var e,n=0;n<l.length;n++){for(var t=l[n],r=!0,i=1;i<t.length;i++){var c=t[i];0!==o[c]&&(r=!1)}r&&(l.splice(n--,1),e=a(a.s=t[0]))}return e}var r={},o={0:0},l=[];function a(n){if(r[n])return r[n].exports;var t=r[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.m=e,a.c=r,a.d=function(e,n,t){a.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,n){if(1&n&&(e=a(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)a.d(t,r,function(n){return e[n]}.bind(null,r));return t},a.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(n,"a",n),n},a.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},a.p="";var i=window.webpackJsonp=window.webpackJsonp||[],c=i.push.bind(i);i.push=n,i=i.slice();for(var s=0;s<i.length;s++)n(i[s]);var m=c;l.push([91,1]),t()}(Array(40).concat([function(e,n,t){var r=t(41);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},function(e,n,t){(e.exports=t(3)(!0)).push([e.i,".common-frame-menu-item .menu-button {\n  display: block;\n  padding: 6px 16px;\n  text-decoration: none; }\n  .common-frame-menu-item .menu-button.level1 .title-jp, .common-frame-menu-item .menu-button.level1 .title-en, .common-frame-menu-item .menu-button.level2 .title-jp, .common-frame-menu-item .menu-button.level2 .title-en, .common-frame-menu-item .menu-button.level3 .title-jp, .common-frame-menu-item .menu-button.level3 .title-en {\n    line-height: calc(1em + 2px); }\n  .common-frame-menu-item .menu-button .title-en {\n    color: #888; }\n  .common-frame-menu-item .menu-button.level1 {\n    padding-left: 8px; }\n    .common-frame-menu-item .menu-button.level1 .title-jp {\n      font-size: 20px; }\n    .common-frame-menu-item .menu-button.level1 .title-en {\n      font-size: 14px; }\n  .common-frame-menu-item .menu-button.level2 {\n    padding-left: 24px; }\n    .common-frame-menu-item .menu-button.level2 .title-jp {\n      font-size: 18px; }\n    .common-frame-menu-item .menu-button.level2 .title-en {\n      font-size: 12px; }\n  .common-frame-menu-item .menu-button.level3 {\n    padding-left: 42px; }\n    .common-frame-menu-item .menu-button.level3 .title-jp {\n      font-size: 16px; }\n    .common-frame-menu-item .menu-button.level3 .title-en {\n      font-size: 10px; }\n  .common-frame-menu-item .menu-button.marked {\n    background-color: #ff7701; }\n    .common-frame-menu-item .menu-button.marked .title-jp {\n      color: #fff; }\n    .common-frame-menu-item .menu-button.marked .title-en {\n      color: #fff; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/common_frame/app/containers/common_frame/common_frame_menu_item.scss","/Users/ih-ppc64/projects/github_io/src/app/containers/common_frame/app/common/colors.scss"],names:[],mappings:"AAEA;EAEI,eAAc;EACd,kBAAiB;EACjB,sBAAqB,EA+DtB;EAnEH;IAOM,6BAA4B,EAC7B;EARL;IAWM,YCVK,EDWN;EAZL;IAeM,kBAAiB,EAWlB;IA1BL;MAmBQ,gBAAe,EAChB;IApBP;MAwBQ,gBAAe,EAChB;EAzBP;IA6BM,mBAAkB,EAWnB;IAxCL;MAiCQ,gBAAe,EAChB;IAlCP;MAsCQ,gBAAe,EAChB;EAvCP;IA2CM,mBAAkB,EAWnB;IAtDL;MA+CQ,gBAAe,EAChB;IAhDP;MAoDQ,gBAAe,EAChB;EArDP;IAyDM,0BCtDU,ED+DX;IAlEL;MA4DQ,YCvDI,EDwDL;IA7DP;MAgEQ,YC3DI,ED4DL",file:"common_frame_menu_item.scss",sourcesContent:["@import '../../common/colors';\n\n.common-frame-menu-item {\n  .menu-button {\n    display: block;\n    padding: 6px 16px;\n    text-decoration: none;\n\n    %title-line-height {\n      line-height: calc(1em + 2px);\n    }\n\n    .title-en {\n      color: $gray;\n    }\n\n    &.level1 {\n      padding-left: 8px;\n\n      .title-jp {\n        @extend %title-line-height;\n        font-size: 20px;\n      }\n\n      .title-en {\n        @extend %title-line-height;\n        font-size: 14px;\n      }\n    }\n\n    &.level2 {\n      padding-left: 24px;\n\n      .title-jp {\n        @extend %title-line-height;\n        font-size: 18px;\n      }\n\n      .title-en {\n        @extend %title-line-height;\n        font-size: 12px;\n      }\n    }\n\n    &.level3 {\n      padding-left: 42px;\n\n      .title-jp {\n        @extend %title-line-height;\n        font-size: 16px;\n      }\n\n      .title-en {\n        @extend %title-line-height;\n        font-size: 10px;\n      }\n    }\n\n    &.marked {\n      background-color: $orange;\n\n      .title-jp {\n        color: $white;\n      }\n\n      .title-en {\n        color: $white;\n      }\n    }\n  }\n}","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},,function(e,n,t){var r=t(44);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#common-frame {\n  bottom: 0;\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0; }\n  #common-frame .common-frame-header-menu-button {\n    background-color: #fff;\n    border-radius: 4px;\n    box-shadow: -8px 8px 8px 0 #fff;\n    height: 28px;\n    padding: 8px 12px 0 0;\n    position: absolute;\n    right: 0;\n    top: 0; }\n    #common-frame .common-frame-header-menu-button span {\n      margin-left: 4px; }\n  #common-frame #common-frame-menu {\n    background-color: #fff;\n    border-left: 1px solid #888;\n    bottom: 32px;\n    max-width: 320px;\n    opacity: 0.95;\n    overflow-y: scroll;\n    padding: 42px 16px 8px 16px;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 100%; }\n    #common-frame #common-frame-menu > a {\n      display: block;\n      padding: 4px 8px; }\n      #common-frame #common-frame-menu > a.level1 {\n        font-size: 16px;\n        margin-top: 8px; }\n      #common-frame #common-frame-menu > a.level2 {\n        font-size: 12px;\n        padding-left: 24px; }\n      #common-frame #common-frame-menu > a.marked {\n        background-color: #ff7701;\n        border-width: 0;\n        color: #fff; }\n  #common-frame #common-frame-content {\n    bottom: 48px;\n    left: 0;\n    padding: 24px 16px 16px 16px;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    position: absolute;\n    right: 0;\n    top: 0; }\n    #common-frame #common-frame-content #common-frame-content-inner {\n      margin: 0 auto;\n      font-size: 16px;\n      max-width: 50em;\n      width: 100%; }\n  #common-frame #common-frame-footer {\n    background-color: #333;\n    bottom: 0;\n    height: 48px;\n    left: 0;\n    padding: 0 16px;\n    position: absolute;\n    right: 0; }\n    #common-frame #common-frame-footer .left-content {\n      float: left; }\n      #common-frame #common-frame-footer .left-content a {\n        background-color: #fff;\n        border-radius: 50%;\n        color: #fff;\n        display: inline-block;\n        font-size: 22px;\n        height: 32px;\n        line-height: 32px;\n        margin: 8px 8px 8px 0;\n        text-align: center;\n        width: 32px; }\n    #common-frame #common-frame-footer .right-content {\n      float: right;\n      font-size: 12px;\n      color: #fff;\n      line-height: 48px; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/common_frame/app/containers/common_frame/common_frame.scss","/Users/ih-ppc64/projects/github_io/src/app/containers/common_frame/app/common/colors.scss"],names:[],mappings:"AAEA;EACE,UAAS;EACT,QAAO;EACP,gBAAe;EACf,SAAQ;EACR,OAAM,EAuGP;EA5GD;IAQI,uBCHQ;IDIR,mBAAkB;IAClB,gCCLQ;IDMR,aAAY;IACZ,sBAAqB;IACrB,mBAAkB;IAClB,SAAQ;IACR,OAAM,EAKP;IApBH;MAkBM,iBAAgB,EACjB;EAnBL;IAuBI,uBClBQ;IDmBR,4BCvBO;IDwBP,aAAY;IACZ,iBAAgB;IAChB,cAAa;IACb,mBAAkB;IAClB,4BAA2B;IAC3B,mBAAkB;IAClB,SAAQ;IACR,OAAM;IACN,YAAW,EAsBZ;IAvDH;MAoCM,eAAc;MACd,iBAAgB,EAiBjB;MAtDL;QAwCQ,gBAAe;QACf,gBAAe,EAChB;MA1CP;QA6CQ,gBAAe;QACf,mBAAkB,EACnB;MA/CP;QAkDQ,0BC/CQ;QDgDR,gBAAe;QACf,YC/CI,EDgDL;EArDP;IA0DI,aAAY;IACZ,QAAO;IACP,6BAA4B;IAC5B,mBAAkB;IAClB,mBAAkB;IAClB,mBAAkB;IAClB,SAAQ;IACR,OAAM,EAQP;IAzEH;MAoEM,eAAc;MACd,gBAAe;MACf,gBAAe;MACf,YAAW,EACZ;EAxEL;IA4EI,uBC7EY;ID8EZ,UAAS;IACT,aAAY;IACZ,QAAO;IACP,gBAAe;IACf,mBAAkB;IAClB,SAAQ,EAyBT;IA3GH;MAqFM,YAAW,EAcZ;MAnGL;QAwFQ,uBCnFI;QDoFJ,mBAAkB;QAClB,YCrFI;QDsFJ,sBAAqB;QACrB,gBAAe;QACf,aAAY;QACZ,kBAAiB;QACjB,sBAAqB;QACrB,mBAAkB;QAClB,YAAW,EACZ;IAlGP;MAsGM,aAAY;MACZ,gBAAe;MACf,YCnGM;MDoGN,kBAAiB,EAClB",file:"common_frame.scss",sourcesContent:["@import '../../common/colors';\n\n#common-frame {\n  bottom: 0;\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0;\n\n  .common-frame-header-menu-button {\n    background-color: $white;\n    border-radius: 4px;\n    box-shadow: -8px 8px 8px 0 $white;\n    height: 28px;\n    padding: 8px 12px 0 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n\n    span {\n      margin-left: 4px;\n    }\n  }\n\n  #common-frame-menu {\n    background-color: $white;\n    border-left: 1px solid $gray;\n    bottom: 32px;\n    max-width: 320px;\n    opacity: 0.95;\n    overflow-y: scroll;\n    padding: 42px 16px 8px 16px;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 100%;\n\n    & > a {\n      display: block;\n      padding: 4px 8px;\n\n      &.level1 {\n        font-size: 16px;\n        margin-top: 8px;\n      }\n\n      &.level2 {\n        font-size: 12px;\n        padding-left: 24px;\n      }\n\n      &.marked {\n        background-color: $orange;\n        border-width: 0;\n        color: $white;\n      }\n    }\n  }\n\n  #common-frame-content {\n    bottom: 48px;\n    left: 0;\n    padding: 24px 16px 16px 16px;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    position: absolute;\n    right: 0;\n    top: 0;\n\n    #common-frame-content-inner {\n      margin: 0 auto;\n      font-size: 16px;\n      max-width: 50em;\n      width: 100%;\n    }\n  }\n\n  #common-frame-footer {\n    background-color: $gray-dark;\n    bottom: 0;\n    height: 48px;\n    left: 0;\n    padding: 0 16px;\n    position: absolute;\n    right: 0;\n\n    .left-content {\n      float: left;\n\n      a {\n        background-color: $white;\n        border-radius: 50%;\n        color: $white;\n        display: inline-block;\n        font-size: 22px;\n        height: 32px;\n        line-height: 32px;\n        margin: 8px 8px 8px 0;\n        text-align: center;\n        width: 32px;\n      }\n    }\n\n    .right-content {\n      float: right;\n      font-size: 12px;\n      color: $white;\n      line-height: 48px;\n    }\n  }\n}\n\n","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},function(e,n,t){var r=t(46);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"","",{version:3,sources:[],names:[],mappings:"",file:"style.scss",sourceRoot:""}])},function(e,n,t){var r=t(48);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"","",{version:3,sources:[],names:[],mappings:"",file:"style.scss",sourceRoot:""}])},function(e,n,t){var r=t(50);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#laboratory-container h2 {\n  text-align: center; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/laboratory/app/containers/laboratory/style.scss"],names:[],mappings:"AAAA;EAEI,mBAAkB,EACnB",file:"style.scss",sourcesContent:["#laboratory-container {\n  h2 {\n    text-align: center;\n  }\n}\n"],sourceRoot:""}])},,,,,,,,,,,,,,,,,,,,,,function(e,n,t){var r=t(73);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#qr-code-container #qr-code-image-wrapper {\n  text-align: center; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/laboratory/qr_code/app/containers/laboratory/qr_code/style.scss"],names:[],mappings:"AAEA;EAEI,mBAAkB,EACnB",file:"style.scss",sourcesContent:["@import '../../../common/colors';\n\n#qr-code-container {\n  #qr-code-image-wrapper {\n    text-align: center;\n  }\n}\n"],sourceRoot:""}])},function(e,n,t){var r=t(75);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},function(e,n,t){(e.exports=t(3)(!0)).push([e.i,".text-area-presenter .text-area-label {\n  height: 24px; }\n\n.text-area-presenter textarea {\n  background-color: #fff;\n  border: 1px solid #888;\n  min-height: calc(100% - 24px);\n  padding: 4px 8px;\n  resize: vertical;\n  width: 100%; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/presenters/app/presenters/text_area.scss","/Users/ih-ppc64/projects/github_io/src/app/presenters/app/common/colors.scss"],names:[],mappings:"AAEA;EAEI,aAAY,EACb;;AAHH;EAMI,uBCDQ;EDER,uBCNO;EDOP,8BAA6B;EAC7B,iBAAgB;EAChB,iBAAgB;EAChB,YAAW,EACZ",file:"text_area.scss",sourcesContent:["@import '../common/colors';\n\n.text-area-presenter {\n  .text-area-label {\n    height: 24px;\n  }\n\n  textarea {\n    background-color: $white;\n    border: 1px solid $gray;\n    min-height: calc(100% - 24px);\n    padding: 4px 8px;\n    resize: vertical;\n    width: 100%;\n  }\n}\n","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},function(e,n,t){var r=t(77);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"","",{version:3,sources:[],names:[],mappings:"",file:"style.scss",sourceRoot:""}])},function(e,n,t){var r=t(79);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"","",{version:3,sources:[],names:[],mappings:"",file:"style.scss",sourceRoot:""}])},function(e,n,t){var r=t(81);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},function(e,n,t){(e.exports=t(3)(!0)).push([e.i,".button-presenter {\n  background-color: #ff7701;\n  border-radius: 0;\n  border: 1px solid #ff7701;\n  color: #fff;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 14px;\n  height: 28px;\n  line-height: 28px;\n  margin: 0;\n  padding: 0 16px;\n  position: relative;\n  text-align: center; }\n  .button-presenter.disable {\n    opacity: 0.5; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/presenters/app/presenters/button.scss","/Users/ih-ppc64/projects/github_io/src/app/presenters/app/common/colors.scss"],names:[],mappings:"AAEA;EACE,0BCEc;EDDd,iBAAgB;EAChB,0BCAc;EDCd,YCCU;EDAV,gBAAe;EACf,sBAAqB;EACrB,gBAAe;EACf,aAAY;EACZ,kBAAiB;EACjB,UAAS;EACT,gBAAe;EACf,mBAAkB;EAClB,mBAAkB,EAKnB;EAlBD;IAgBI,aAAY,EACb",file:"button.scss",sourcesContent:["@import '../common/colors';\n\n.button-presenter {\n  background-color: $orange;\n  border-radius: 0;\n  border: 1px solid $orange;\n  color: $white;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 14px;\n  height: 28px;\n  line-height: 28px;\n  margin: 0;\n  padding: 0 16px;\n  position: relative;\n  text-align: center;\n\n  &.disable {\n    opacity: 0.5;\n  }\n}","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},function(e,n,t){var r=t(83);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},function(e,n,t){(e.exports=t(3)(!0)).push([e.i,".text-input {\n  width: 100%; }\n  .text-input .text-input-label, .text-input input {\n    width: 100%; }\n  .text-input .text-input-label {\n    padding: 0 4px 2px 4px; }\n  .text-input input {\n    border-radius: 4px;\n    border: 1px solid #ccc;\n    font-size: 14px;\n    padding: 4px 8px; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/presenters/app/presenters/text_input.scss","/Users/ih-ppc64/projects/github_io/src/app/presenters/app/common/colors.scss"],names:[],mappings:"AAEA;EACE,YAAW,EAgBZ;EAjBD;IAII,YAAW,EACZ;EALH;IAQI,uBAAsB,EACvB;EATH;IAYI,mBAAkB;IAClB,uBCba;IDcb,gBAAe;IACf,iBAAgB,EACjB",file:"text_input.scss",sourcesContent:["@import '../common/colors';\n\n.text-input {\n  width: 100%;\n\n  .text-input-label, input {\n    width: 100%;\n  }\n\n  .text-input-label {\n    padding: 0 4px 2px 4px;\n  }\n\n  input {\n    border-radius: 4px;\n    border: 1px solid $gray-light;\n    font-size: 14px;\n    padding: 4px 8px;\n  }\n}","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},function(e,n,t){var r=t(85);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#service-worker-push-container .request-permission-button {\n  margin-top: 8px; }\n\n#service-worker-push-container .subscription-info {\n  font-size: 10px;\n  height: 240px;\n  margin-top: 8px; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/laboratory/service_worker/push_notification/app/containers/laboratory/service_worker/push_notification/style.scss"],names:[],mappings:"AAAA;EAEI,gBAAe,EAChB;;AAHH;EAMI,gBAAe;EACf,cAAa;EACb,gBAAe,EAChB",file:"style.scss",sourcesContent:["#service-worker-push-container {\n  .request-permission-button {\n    margin-top: 8px;\n  }\n\n  .subscription-info {\n    font-size: 10px;\n    height: 240px;\n    margin-top: 8px;\n  }\n}\n"],sourceRoot:""}])},function(e,n,t){var r=t(87);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"#service-worker-background-sync-container div {\n  margin: 4px 0; }\n\n#service-worker-background-sync-container table {\n  width: 100%; }\n  #service-worker-background-sync-container table .table-id-column {\n    width: 40px; }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/containers/laboratory/service_worker/background_sync/app/containers/laboratory/service_worker/background_sync/style.scss"],names:[],mappings:"AAAA;EAEI,cAAa,EACd;;AAHH;EAMI,YAAW,EAKZ;EAXH;IASM,YAAW,EACZ",file:"style.scss",sourcesContent:["#service-worker-background-sync-container {\n  div {\n    margin: 4px 0;\n  }\n\n  table {\n    width: 100%;\n\n    .table-id-column {\n      width: 40px;\n    }\n  }\n}\n"],sourceRoot:""}])},,function(e,n,t){var r=t(90);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},function(e,n,t){(e.exports=t(3)(!0)).push([e.i,"*, *:before, *:after {\n  background-color: transparent;\n  border: 0 solid #888;\n  box-sizing: border-box;\n  color: #000;\n  font-size: 16px;\n  font-weight: normal;\n  line-height: 1.5;\n  margin: 0;\n  padding: 0;\n  text-decoration: none;\n  word-wrap: break-word; }\n\nh1, h2, h3, h4, h5, h6, ul, ol {\n  margin-top: 16px; }\n\np {\n  margin-top: 8px; }\n\nh1 {\n  font-weight: 600;\n  font-size: 24px;\n  text-align: center; }\n\nh2 {\n  font-weight: 600;\n  font-size: 20px; }\n\nh3 {\n  font-weight: 700;\n  font-size: 18px; }\n\nh4 {\n  font-weight: 700;\n  font-size: 14px; }\n\nh5 {\n  font-weight: 800;\n  font-size: 12px; }\n\nh6 {\n  font-weight: 800;\n  font-size: 10px; }\n\np {\n  padding-left: 1em; }\n\na {\n  color: #009050;\n  text-decoration: underline; }\n\nstrong {\n  background-color: #eee;\n  display: inline-block;\n  font-weight: 800;\n  margin: 1px 4px;\n  padding: 1px 4px; }\n\nbutton:focus {\n  outline: none; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  table-layout: fixed; }\n  table th, table td {\n    padding: 4px 8px;\n    border: 1px solid #888; }\n\nul, ol {\n  padding-left: 24px;\n  width: 100%; }\n  ul li, ol li {\n    margin-top: 4px; }\n\n.frame {\n  border: 1px solid #ccc;\n  margin: 16px;\n  padding: 16px;\n  width: calc(100% - 32px); }\n","",{version:3,sources:["/Users/ih-ppc64/projects/github_io/src/app/app/index.scss","/Users/ih-ppc64/projects/github_io/src/app/app/common/colors.scss"],names:[],mappings:"AAEA;EACE,8BAA6B;EAC7B,qBCDS;EDET,uBAAsB;EACtB,YCNU;EDOV,gBAAe;EACf,oBAAmB;EACnB,iBAAgB;EAChB,UAAS;EACT,WAAU;EACV,sBAAqB;EACrB,sBAAqB,EACtB;;AAED;EACE,iBAAgB,EACjB;;AAED;EACE,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe;EACf,mBAAkB,EACnB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,iBAAgB;EAChB,gBAAe,EAChB;;AAED;EACE,kBAAiB,EAClB;;AAED;EACE,eCxDa;EDyDb,2BAA0B,EAC3B;;AAED;EACE,uBC3DW;ED4DX,sBAAqB;EACrB,iBAAgB;EAChB,gBAAe;EACf,iBAAgB,EACjB;;AAED;EACE,cAAa,EACd;;AAED;EACE,0BAAyB;EACzB,kBAAiB;EACjB,oBAAmB,EAMpB;EATD;IAMI,iBAAgB;IAChB,uBChFO,EDiFR;;AAGH;EACE,mBAAkB;EAClB,YAAW,EAKZ;EAPD;IAKI,gBAAe,EAChB;;AAGH;EACE,uBC/Fe;EDgGf,aAAY;EACZ,cAAa;EACb,yBAAwB,EACzB",file:"index.scss",sourcesContent:["@import './common/colors';\n\n*, *:before, *:after {\n  background-color: transparent;\n  border: 0 solid $gray;\n  box-sizing: border-box;\n  color: $black;\n  font-size: 16px;\n  font-weight: normal;\n  line-height: 1.5;\n  margin: 0;\n  padding: 0;\n  text-decoration: none;\n  word-wrap: break-word;\n}\n\nh1, h2, h3, h4, h5, h6, ul, ol {\n  margin-top: 16px;\n}\n\np {\n  margin-top: 8px;\n}\n\nh1 {\n  font-weight: 600;\n  font-size: 24px;\n  text-align: center;\n}\n\nh2 {\n  font-weight: 600;\n  font-size: 20px;\n}\n\nh3 {\n  font-weight: 700;\n  font-size: 18px;\n}\n\nh4 {\n  font-weight: 700;\n  font-size: 14px;\n}\n\nh5 {\n  font-weight: 800;\n  font-size: 12px;\n}\n\nh6 {\n  font-weight: 800;\n  font-size: 10px;\n}\n\np {\n  padding-left: 1em;\n}\n\na {\n  color: $green;\n  text-decoration: underline;\n}\n\nstrong {\n  background-color: $silver;\n  display: inline-block;\n  font-weight: 800;\n  margin: 1px 4px;\n  padding: 1px 4px;\n}\n\nbutton:focus {\n  outline: none;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  table-layout: fixed;\n\n  th, td {\n    padding: 4px 8px;\n    border: 1px solid $gray;\n  }\n}\n\nul, ol {\n  padding-left: 24px;\n  width: 100%;\n\n  li {\n    margin-top: 4px;\n  }\n}\n\n.frame {\n  border: 1px solid $gray-light;\n  margin: 16px;\n  padding: 16px;\n  width: calc(100% - 32px);\n}","$black: #000;\n$gray-dark: #333;\n$gray-light: #ccc;\n$gray: #888;\n$green: #009050;\n$orange: #ff7701;\n$silver: #eee;\n$white: #fff;\n"],sourceRoot:""}])},function(e,n,t){"use strict";t.r(n);var r=t(27),o=t(0),l=t(94),a=t(93),i=t(11),c=t(7),s=t(14),m=t(17);c.b.add(s.c);const p=()=>o.createElement(i.a,{icon:"times"});c.b.add(s.a);const u=()=>o.createElement(i.a,{icon:"bars"});c.b.add(s.b);const A=()=>o.createElement(i.a,{icon:"envelope"});c.b.add(m.a);const d=()=>o.createElement(i.a,{icon:["fab","twitter"]});c.b.add(m.a);const h=()=>o.createElement(i.a,{icon:["fab","github"]});var E=t(92);t(40);const g=e=>{const{level:n,selected:t,path:r,titleJp:l,titleEn:a}=e,i=o.createElement("div",null,o.createElement("div",{className:"title-jp"},l),o.createElement("div",{className:"title-en"},a));return t?o.createElement("div",{className:"common-frame-menu-item"},o.createElement("div",{className:`menu-button level${n} marked`},i)):o.createElement("div",{className:"common-frame-menu-item"},o.createElement(E.a,{to:r,className:`menu-button level${n}`},i))};t(43);class f extends o.Component{setState(e,n){console.log("Update state:",e),super.setState(e,n)}}t(45);t(47);t(49);var x=t(28);t(72),t(74);class b extends o.Component{render(){const{children:e,className:n,label:t,onChange:r}=this.props;return o.createElement("div",{className:`text-area-presenter ${n}`},t&&o.createElement("div",{className:"text-area-label"},t),o.createElement("textarea",{onChange:e=>{const n=e.target.value;"string"==typeof n&&r(n)},value:e||""}))}}b.defaultProps={className:"",label:""};class B{}B.get=(e=>localStorage.getItem(e)),B.set=((e,n)=>localStorage.setItem(e,n)),B.remove=(e=>localStorage.removeItem(e));const v="qr_code/qrText";t(76);t(78);const C="serviceWorker"in navigator;t(80);class y extends o.Component{render(){const{active:e,children:n,className:t,onClick:r}=this.props;return o.createElement("button",{className:`button-presenter ${t} ${e?"":"disable"}`,onClick:e?r:null},n)}}y.defaultProps={active:!0,className:""};t(82);const k=e=>{const{className:n,label:t,maxLength:r,onChangeText:l,password:a,placeHolder:i,value:c}=e;return o.createElement("div",{className:`text-input ${n}`},t&&o.createElement("div",{className:"text-input-label"},t),o.createElement("input",{placeholder:i,type:a?"password":"text",onChange:e=>l(e.target.value),maxLength:r,value:c||""}))};t(84);var w=function(e,n,t,r){return new(t||(t=Promise))(function(o,l){function a(e){try{c(r.next(e))}catch(e){l(e)}}function i(e){try{c(r.throw(e))}catch(e){l(e)}}function c(e){e.done?o(e.value):new t(function(n){n(e.value)}).then(a,i)}c((r=r.apply(e,n||[])).next())})};const I="serviceWorker"in navigator&&"PushManager"in window,_=I?navigator.serviceWorker:null,S=e=>{const n=(e+"=".repeat((4-e.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),t=window.atob(n),r=new Uint8Array(t.length);for(let e=0;e<t.length;++e)r[e]=t.charCodeAt(e);return r};t(86);var D=function(e,n,t,r){return new(t||(t=Promise))(function(o,l){function a(e){try{c(r.next(e))}catch(e){l(e)}}function i(e){try{c(r.throw(e))}catch(e){l(e)}}function c(e){e.done?o(e.value):new t(function(n){n(e.value)}).then(a,i)}c((r=r.apply(e,n||[])).next())})};const $="serviceWorker"in navigator?navigator.serviceWorker:null,P="indexedDB"in window?window.indexedDB:null;const M=[{key:"about_this",path:"/",titleJp:"このサイトについて",titleEn:"About this",component:class extends f{render(){return o.createElement("div",null,o.createElement("h1",null,"このサイトについて"),o.createElement("h2",null,"目的"),o.createElement("p",null,"このサイトは以下の目的で公開しています。"),o.createElement("ul",null,o.createElement("li",null,"新しい技術のテスト"),o.createElement("li",null,"スキルセットの公開")),o.createElement("h2",null,"このサイトのソース"),o.createElement("p",null,o.createElement("a",{href:"https://github.com/hyiromori/hyiromori.github.io"},"GitHub")," にあります。"),o.createElement("p",null,"技術的な特徴としては、以下のとおりです。"),o.createElement("ul",null,o.createElement("li",null,o.createElement("strong",null,"SPA"),"で作られているので、読み込み完了後はページ遷移が早いです。"),o.createElement("li",null,o.createElement(E.a,{to:R},"Service Worker"),"を使用しており、必要なリソースをキャッシュしているので、対応しているブラウザの場合はオフラインでも閲覧できます。"),o.createElement("li",null,"自分の技術力向上のために",o.createElement("strong",null,"TypeScript"),o.createElement("strong",null,"React"),o.createElement("strong",null,"Webpack"),"などのベースとなるもの以外は、ライブラリやフレームワークなどほぼ使用していません。")),o.createElement("h2",null,"動作確認について"),o.createElement("p",null,"以下の環境で動作確認を行っています。"),o.createElement("ul",null,o.createElement("li",null,"Mac OS X + Chrome 最新版"),o.createElement("li",null,"Mac OS X + Safari 最新版"),o.createElement("li",null,"iPhone SE + Safari 最新版")),o.createElement("p",null,"もし不具合などありましたら、左下のメール、または Twitter でご報告いただけるとありがたいです。"))}},level:1},{key:"about_author",path:"/author",titleJp:"運営者について",titleEn:"About author",component:class extends f{render(){return o.createElement("div",null,o.createElement("h1",null,"運営者について"),o.createElement("h2",null,"自己紹介"),o.createElement("p",null,o.createElement("strong",null,"hyiromori")," という名前で活動している、一応フルスタックエンジニアです。"),o.createElement("h2",null,"スキル"),o.createElement("p",null,"Frontend 好きですが、一人でサービスを立ち上げるぐらいのことはできる感じです。"),o.createElement("h3",null,"Frontend関係"),o.createElement("ul",null,o.createElement("li",null,o.createElement("strong",null,"ES2015"),o.createElement("br",null),"モダンなFrontend開発では当たり前のように使ってます。"),o.createElement("li",null,o.createElement("strong",null,"TypeScript"),o.createElement("br",null),"最近は UI が複雑になってきているので、型付け言語だとかなり開発が楽になります。 なかなか既存のソースには入れられないですが、個人的には必ず使うようにしています。 このサイトのソースも TypeScript で書いてます。"),o.createElement("li",null,o.createElement("strong",null,"React"),o.createElement("br",null),"業務でも、個人的にも、このサイトでも使用している、一番良く使うフロントエンドフレームワークです。",o.createElement("ul",null,o.createElement("li",null,o.createElement("strong",null,"+ Redux"),o.createElement("br",null),"定番の組み合わせで、よく使ってきました。 が、最近は何でも入れれば良いとは思っていません。 使い所が大事だな〜、と感じています。"))),o.createElement("li",null,o.createElement("strong",null,"Webpack")),o.createElement("li",null,o.createElement("strong",null,"CSS (SCSS)"))),o.createElement("h3",null,"Backend関係"),o.createElement("ul",null,o.createElement("li",null,o.createElement("strong",null,"Ruby on Rails"),o.createElement("br",null),"仕事で２年ぐらい使用しています。",o.createElement("ul",null,o.createElement("li",null,o.createElement("strong",null,"Rspec"),o.createElement("br",null),"Ruby のテストフレームワークの定番ですね。 だいぶキレイに書けるようになってきましたが、",o.createElement("a",{href:"https://qiita.com/jnchito/items/a90b3b09d008227d3d60"},"このQiitaの記事"),"も共感できます。"))),o.createElement("li",null,o.createElement("strong",null,"Express"),o.createElement("br",null),"個人的に作る際にはミニマルで勉強になるので、よく使っています。"),o.createElement("li",null,o.createElement("strong",null,"自作Webサーバ"),o.createElement("br",null),"なんちゃって Web サーバを Java で作ったこともありました。 実運用に耐えられるレベルではないですが、HTTP の主な仕様とかを学ぶのに良かったので紹介しておきます。")),o.createElement("h3",null,"Infra関係"),o.createElement("ul",null,o.createElement("li",null,o.createElement("strong",null,"AWS")),o.createElement("li",null,o.createElement("strong",null,"Docker"))),o.createElement("h2",null,"ブログとかSNSとか"),o.createElement("ul",null,o.createElement("li",null,o.createElement("a",{href:"https://qiita.com/hyiromori"},"Qiita")),o.createElement("li",null,o.createElement("a",{href:"https://twitter.com/hyiromori"},"Twitter")),o.createElement("li",null,o.createElement("a",{href:"https://github.com/hyiromori"},"GitHub"))))}},level:1},{key:"laboratory",path:"/laboratory",titleJp:"実験室",titleEn:"Laboratory",component:class extends f{render(){return o.createElement("div",{id:"laboratory-container"},o.createElement("h1",null,"実験室"),o.createElement("p",null,"新しい技術や気になった技術の実験に使ったものの紹介ページです。"),o.createElement("h2",null,"実験一覧"),o.createElement("ul",null,o.createElement("li",null,o.createElement(E.a,{to:R},"Service Worker")),o.createElement("li",null,o.createElement(E.a,{to:T},"QR Code"))))}},level:1},{key:"service_worker",path:"/laboratory/service_worker",titleJp:"サービスワーカー",titleEn:"Service Worker",component:class extends f{render(){return o.createElement("div",{id:"service-worker-container"},o.createElement("h1",null,"サービスワーカー"),o.createElement("h2",null,"サービスワーカーとは？"),o.createElement("p",null,"ブラウザのバックグランドで実行される JavaScript の実行環境です。 ページのライフサイクルとは「別」のライフサイクルを持ちます。"),o.createElement("h2",null,"サービスワーカーの機能"),o.createElement("p",null,"以下のAPIが提供されています。"),o.createElement("ul",null,o.createElement("li",null,o.createElement(E.a,{to:N},"キャッシュAPI")),o.createElement("li",null,o.createElement(E.a,{to:W},"プッシュ通知API")),o.createElement("li",null,o.createElement(E.a,{to:q},"バックグラウンド同期API"))),o.createElement("h2",null,"もっと詳しく知りたい場合")," ",o.createElement("p",null,"以下の Qiita の記事をご覧ください。"),o.createElement("p",null,o.createElement("a",{href:"https://qiita.com/hyiromori/items/7986a725541c97da878d"},"Service Worker メモ - Qiita")))}},level:2},{key:"service_worker_cache",path:"/laboratory/service_worker/cache",titleJp:"キャッシュAPI",titleEn:"Cache API",component:class extends f{render(){return o.createElement("div",{id:"service-worker-cache-container"},o.createElement("h1",null,"キャッシュAPI"),o.createElement("h2",null,"キャッシュAPIとは？"),o.createElement("p",null,"サービスワーカーで提供されている API の一つで、fetch に介入し、キャッシュされたリソースを返却することができます。"),o.createElement("p",null,"キャッシュを使用するかどうかは、コントロール可能です。"),o.createElement("h2",null,"お使いのブラウザの対応状況"),o.createElement("p",null,"お使いのブラウザは",o.createElement("strong",null,C?"対応しています":"対応していません")),C&&o.createElement("div",null,o.createElement("h2",null,"動作確認の方法"),o.createElement("p",null,"実は、このページに必要なリソースは全てキャシュされています。以下の手順でキャッシュされていることを確認できます。"),o.createElement("ol",null,o.createElement("li",null,"インターネットから切り離します。（例：機内モードにする、Wi-FiをOffにする、LANケーブルを抜くなど）"),o.createElement("li",null,"このページをリロードして、正常に表示されることを確認します。"))))}},level:3},{key:"service_worker_push_notification",path:"/laboratory/service_worker/push_notification",titleJp:"プッシュ通知API",titleEn:"Push Notification API",component:class extends f{constructor(){super(...arguments),this.state={publicKey:"",subscriptionInfo:""},this.requestPushNotification=(()=>w(this,void 0,void 0,function*(){const{publicKey:e}=this.state;if(""!==e&&null!=_){console.log("ServiceWorker and Push is Supported");try{const n=yield _.register("/service_worker.js");console.log("ServiceWorker is registered",n);const t=S(e);yield n.pushManager.getSubscription();const r={userVisibleOnly:!0,applicationServerKey:t};n.pushManager.subscribe(r).then(e=>{console.log("User is subscribed:",e),this.setState({subscriptionInfo:JSON.stringify(e,null,"  ")})})}catch(e){console.error("ServiceWorker error:",e)}}}))}render(){const{publicKey:e,subscriptionInfo:n}=this.state;return o.createElement("div",{id:"service-worker-push-container"},o.createElement("h1",null,"プッシュ通知API"),o.createElement("h2",null,"プッシュ通知APIとは？"),o.createElement("p",null,"サービスワーカーで提供されている API の一つで、名前の通り、ブラウザにプッシュ通知が行える機能になります。"),o.createElement("h2",null,"お使いのブラウザの対応状況"),o.createElement("p",null,"お使いのブラウザは",o.createElement("strong",null,I?"対応しています":"対応していません")),I&&o.createElement("div",null,o.createElement("h2",null,"動作確認の方法"),o.createElement("ol",null,o.createElement("li",null,o.createElement("a",{href:"https://web-push-codelab.glitch.me/",target:"_blank"},"Push Companion (外部サイト)"),"(※)を開きます。"),o.createElement("li",null,"(※)のページ内にある",o.createElement("strong",null,"Public Key"),"をコピーします。"),o.createElement("li",null,"下の",o.createElement("strong",null,"操作パネル"),"の",o.createElement("strong",null,"Public Key"),"にペーストします。"),o.createElement("li",null,o.createElement("strong",null,"操作パネル"),"の",o.createElement("strong",null,"Request Permission"),"をクリックします。"),o.createElement("li",null,"ブラウザから通知を許可するか尋ねられるので、許可します。"),o.createElement("li",null,o.createElement("strong",null,"操作パネル"),"の",o.createElement("strong",null,"Subscription Info"),"にJSON文字列が表示されるので、全てコピーします。"),o.createElement("li",null,"(※)のページの",o.createElement("strong",null,"Subscription to Send To"),"にペーストします。"),o.createElement("li",null,"(※)のページの",o.createElement("strong",null,"Text to Send"),"に通知したいメッセージを適当に入れます。"),o.createElement("li",null,"(※)のページの",o.createElement("strong",null,"SEND PUSH MESSAGE"),"をクリックします。"),o.createElement("li",null,"プッシュ通知が届くことを確認します。")),o.createElement("h2",null,"操作パネル"),o.createElement("div",{className:"frame"},o.createElement(k,{label:"Public Key",maxLength:100,onChangeText:e=>this.setState({publicKey:e}),placeHolder:"Public Key",value:e}),o.createElement(y,{active:""!==e,className:"request-permission-button",onClick:()=>this.requestPushNotification()},"Request Permission"),o.createElement(b,{className:"subscription-info",label:"Subscription Info",onChange:()=>void 0},n))))}},level:3},{key:"service_worker_background_sync",path:"/laboratory/service_worker/background_sync",titleJp:"バックグラウンド同期API",titleEn:"Background Sync API",component:class extends f{constructor(){super(...arguments),this.intervalId=null,this.db=null,this.state={syncList:[],supportBackgroundSync:!1},this.reloadSyncList=(()=>{if(null==this.db)return;const{syncList:e}=this.state,n=this.db.transaction(["background_sync"],"readwrite");n.onerror=(e=>console.error("Failed:",e));const t=n.objectStore("background_sync").getAll();t.onerror=(e=>console.error("Failed:",e)),t.onsuccess=(n=>{const t=n.target.result.reverse().slice(0,30);if(0===t.length)return;const r=e.length!==t.length,o=r?void 0:t.find((n,t)=>n.id!==e[t].id||n.result!==e[t].result);(r||null!=o)&&this.setState({syncList:t})})}),this.backgroundSyncTest=(()=>{if(null==$||null==this.db)return;const e={path:"/example.json",result:"",createdAt:(new Date).getTime()},n=this.db.transaction(["background_sync"],"readwrite");n.onerror=(e=>console.error("Failed:",e));const t=n.objectStore("background_sync").add(e);t.onerror=(e=>console.error("Failed:",e)),t.onsuccess=(e=>D(this,void 0,void 0,function*(){const n=yield $.ready;if("sync"in n){const t=`background-sync:${e.target.result}`;n.sync.register(t),this.reloadSyncList()}}))})}componentWillMount(){if(null==P||null==$)return;$.ready.then(e=>{"sync"in e&&this.setState({supportBackgroundSync:!0})});const e=P.open("service_worker",1);e.onupgradeneeded=(e=>{const n=e.target.result,t=n.createObjectStore("background_sync",{keyPath:"id",autoIncrement:!0});console.log("Success create store:",t),this.db=n}),e.onerror=(e=>console.error("Fail open DB:",e)),e.onsuccess=(e=>{console.log("Success open DB:",e),this.db=e.target.result})}componentDidMount(){this.reloadSyncList(),this.intervalId=setInterval(this.reloadSyncList,1e3)}componentWillUnmount(){null!=this.intervalId&&(clearInterval(this.intervalId),this.intervalId=null)}render(){const{syncList:e,supportBackgroundSync:n}=this.state;return o.createElement("div",{id:"service-worker-background-sync-container"},o.createElement("h1",null,"バックグランド同期API"),o.createElement("h2",null,"バックグランド同期APIとは？"),o.createElement("p",null,"サービスワーカーで提供されている API の一つで、ネットワークがオフラインの場合、オンラインになった時点で通信を行えるようにできる機能です。"),o.createElement("p",null,"IndexedDB も使用して実現します。"),o.createElement("h2",null,"お使いのブラウザの対応状況"),o.createElement("p",null,"お使いのブラウザは",o.createElement("strong",null,n?"対応しています":"対応していません")),n&&o.createElement("div",null,o.createElement("h2",null,"動作確認の方法"),o.createElement("ol",null,o.createElement("li",null,"インターネットから切り離します。（例：機内モードにする、Wi-FiをOffにする、LANケーブルを抜くなど）"),o.createElement("li",null,"下の",o.createElement("strong",null,"操作パネル"),"の",o.createElement("strong",null,"Background Sync Test"),"をクリックします。"),o.createElement("li",null,"下の",o.createElement("strong",null,"操作パネル"),"の",o.createElement("strong",null,"同期結果"),"に１行追加され",o.createElement("strong",null,"Result"),"欄が空であることを確認します。"),o.createElement("li",null,"インターネットに接続します。"),o.createElement("li",null,"下の",o.createElement("strong",null,"操作パネル"),"の",o.createElement("strong",null,"同期結果"),"の",o.createElement("strong",null,"Result"),"欄に同期結果が表示されることを確認します。")),o.createElement("h2",null,"操作パネル"),o.createElement("div",{className:"frame"},o.createElement(y,{onClick:()=>this.backgroundSyncTest()},"Background Sync Test"),o.createElement("p",null,"同期結果"),o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",{className:"table-id-column"},"ID"),o.createElement("th",null,"Path"),o.createElement("th",null,"Result"),o.createElement("th",null,"CreatedAt"))),o.createElement("tbody",null,e.map(e=>o.createElement("tr",{key:e.id},o.createElement("td",null,e.id),o.createElement("td",null,e.path),o.createElement("td",null,e.result||"-"),o.createElement("td",null,e.createdAt||"-"))))))))}},level:3},{key:"qr_code",path:"/laboratory/qr_code",titleJp:"QRコード",titleEn:"QR Code",component:class extends f{constructor(){super(...arguments),this.state={qrImage:"",qrText:""},this.onChangeText=(e=>{B.set(v,e),this.setState({qrText:e}),""!==e&&x.toDataURL(e).then(e=>{this.setState({qrImage:e})}).catch(e=>{console.error("QrCode generate error:",e)})})}componentDidMount(){const e=B.get(v)||window.location.href;this.onChangeText(e)}render(){const{qrImage:e,qrText:n}=this.state;return o.createElement("div",{id:"qr-code-container"},o.createElement("h1",null,"QR Code"),o.createElement("div",{className:"frame"},""!==e&&o.createElement("div",{id:"qr-code-image-wrapper"},o.createElement("img",{src:e,alt:"QR Code"})),o.createElement(b,{label:"QRコードに変換する文字列",onChange:this.onChangeText},n)))}},level:2}],Q=M.map(e=>({path:e.path,titleJp:e.titleJp,titleEn:e.titleEn,level:e.level})),j=o.createElement(l.a,null,o.createElement(class extends o.Component{constructor(){super(...arguments),this.state={showMenu:!1}}render(){const{children:e,menuList:n}=this.props,{showMenu:t}=this.state,r=window.location.hash.substr(1);return o.createElement("div",{id:"common-frame"},o.createElement("div",{id:"common-frame-content",className:t?"show-menu":""},o.createElement("div",{id:"common-frame-content-inner"},e)),!t&&o.createElement("button",{className:"common-frame-header-menu-button",onClick:()=>this.setState({showMenu:!0})},o.createElement(u,null),o.createElement("span",null,"Menu")),t&&o.createElement("div",{id:"common-frame-menu"},o.createElement("button",{className:"common-frame-header-menu-button",onClick:()=>this.setState({showMenu:!1})},o.createElement(p,null),o.createElement("span",null,"Close")),n.map(e=>o.createElement(g,{key:e.path,level:e.level,selected:r===e.path,path:e.path,titleJp:e.titleJp,titleEn:e.titleEn}))),o.createElement("div",{id:"common-frame-footer"},o.createElement("div",{className:"left-content"},o.createElement("a",{href:"mailto:hyiromori@gmail.com"},o.createElement(A,null)),o.createElement("a",{href:"https://twitter.com/hyiromori",target:"_blank"},o.createElement(d,null)),o.createElement("a",{href:"https://github.com/hyiromori",target:"_blank"},o.createElement(h,null))),o.createElement("div",{className:"right-content"},"(C) 2018 hyiromori")))}},{menuList:Q},M.map(e=>o.createElement(a.a,{component:e.component,exact:!0,key:e.path,path:e.path,strict:!0})))),z=e=>{const n=M.find(n=>n.key===e);if(null==n)throw new Error(`Not found: ${e}`);return`${n.path}`},R=z("service_worker"),N=z("service_worker_cache"),W=z("service_worker_push_notification"),q=z("service_worker_background_sync"),T=z("qr_code");t(89);"serviceWorker"in navigator&&navigator.serviceWorker.register("/service_worker.js").then(e=>console.log("ServiceWorker scope:",e.scope)).catch(e=>console.log("ServiceWorker registration failed: ",e)),Object(r.render)(j,document.getElementById("app"))}]));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,